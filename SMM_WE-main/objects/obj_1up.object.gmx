<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_1up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_powerupparent</parentName>
  <maskName>spr_mask_vine</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
if (global.modo_noche == 1 &amp;&amp; global.bg_level == "ground")
{
    rotten = 1
    sprite_index = spr_rotten_b
    switch global.apariencia
    {
        case 0:
            sprite_wings = 393
            break
        case 1:
            sprite_wings = 1183
            break
        case 2:
            sprite_wings = 2045
            break
        case 3:
            sprite_wings = 3478
            break
    }

}
else
{
    rotten = 0
    switch global.apariencia
    {
        case 0:
            sprite_index = spr_SMB_1up
            image_index = 1
            sprite_wings = 393
            break
        case 1:
            sprite_index = spr_SMB3_1up
            image_index = 1
            sprite_wings = 1183
            break
        case 2:
            sprite_index = spr_1up
            image_index = 1
            sprite_wings = 2045
            break
        case 3:
            sprite_index = spr_NSMBU_1up
            image_speed = 0.25
            sprite_wings = 3478
            break
    }

}
swimming = 0
hardness = 100
stomp = -1
edible = 0
direct = -1
delay = 0
charge = 0
ready = 0
xscale2 = 1
yscale2 = 1
wings = 0
wings_anim = 0
paracaidas = 0
progresivo = 0
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (paracaidas == 0)
{
    if (global.modo_noche == 1 &amp;&amp; global.bg_level == "ground")
        charge = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1 &amp;&amp; paracaidas == 0)
{
    hspeed = (0.5 * direct)
    vspeed = -0.5
}
else if (paracaidas == 1)
    hspeed = -0.6
else if (paracaidas == 0)
{
    if (global.modo_noche == 1 &amp;&amp; global.bg_level == "ground")
    {
        charge = 1
        if (wings == 1)
        {
            hspeed = (0.6 * direct)
            vspeed = -0.5
        }
    }
    else if (vspeed &lt; 0 || collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) || collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0))
    {
        if (global.modo_noche == 1)
        {
            if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
                hspeed = (1 - (0.5 * swimming))
            else
                hspeed = (-(1 - (0.5 * swimming)))
        }
        else
            hspeed = (1 - (0.5 * swimming))
    }
    else
        alarm[10] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (charge == 1)
{
    if (gravity == 0 &amp;&amp; wings == 0)
    {
        if (!instance_exists(obj_invincibility))
        {
            if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
            {
                hspeed -= 0.0324
                if (hspeed &lt; -1)
                    hspeed = -1
            }
            else
            {
                hspeed += 0.0324
                if (hspeed &gt; 1)
                    hspeed = 1
            }
        }
        else if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
        {
            hspeed += 0.0324
            if (hspeed &gt; 1)
                hspeed = 1
        }
        else
        {
            hspeed -= 0.0324
            if (hspeed &lt; -1)
                hspeed = -1
        }
        if (delay &gt; 0)
            delay--
    }
    if (ready == 0)
    {
        xscale2 += 0.025
        yscale2 -= 0.025
        if (xscale2 &gt; 1.25)
            ready = 1
    }
    else if (ready == 1)
    {
        xscale2 -= 0.025
        yscale2 += 0.025
        if (xscale2 &lt; 0.75)
            ready = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.vspeed &lt; 0 &amp;&amp; other.y &lt; (other.ystart - 2) &amp;&amp; bbox_bottom &lt; (other.yprevious + 5) &amp;&amp; wings == 0)
{
    if (collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        instance_create(x, y, obj_smoke)
        instance_destroy()
    }
    else
    {
        if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
            vspeed = -1.8
        else
            vspeed = -3
        if (hspeed == 0)
            hspeed = 1
        else if ((x + (sprite_width / 2)) &gt; (other.x + (sprite_width / 2)))
            hspeed = 1
        else if ((x + (sprite_width / 2)) &lt; (other.x + (sprite_width / 2)))
            hspeed = -1
    }
}
else if (other.vspeed &gt; 0 &amp;&amp; bbox_top &gt; (other.y + 15) &amp;&amp; vspeed == 0 &amp;&amp; gravity == 0)
{
    instance_create(x, y, obj_smoke)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (rotten == 1)
{
    if instance_exists(obj_invincibility)
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (instance_create((x - 8), y, obj_score))
            event_user(9)
        instance_create(x, y, obj_smoke)
        instance_destroy()
    }
    else if ((!instance_exists(obj_invincibility)) &amp;&amp; obj_mario.invincible == 0)
    {
        with (instance_create(other.x, other.y, obj_smoke))
        {
            sprite_index = spr_smoke_rotten
            depth = -11
        }
        instance_create(other.x, other.y, obj_rotten_signal)
        with (other.id)
            event_user(0)
        instance_destroy()
    }
}
else
{
    switch global.apariencia
    {
        case 2:
            audio_stop_sound(snd_1up)
            audio_play_sound(snd_1up, 0, false)
            break
        case 3:
            audio_stop_sound(snd_NSMBU_1up_original)
            audio_play_sound(snd_NSMBU_1up_original, 0, false)
            break
        default:
            audio_stop_sound(snd_SMB3_1up)
            audio_play_sound(snd_SMB3_1up, 0, false)
            break
    }

    with (instance_create(x, y, obj_score))
        event_user(7)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if (rotten == 0)
    event_inherited()
else
{
    if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_onewaygate_right, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_onewaygate_left, 0, 0)))
    {
        col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
        col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
        if (hspeed &gt; 0 &amp;&amp; col_one_left)
        {
            with (col_one_left)
            {
                rot = 1
                event_user(0)
            }
        }
        if (hspeed &lt; 0 &amp;&amp; col_one_right)
        {
            with (col_one_right)
            {
                rot = 1
                event_user(0)
            }
        }
        if (delay == 0 &amp;&amp; gravity == 0)
        {
            if (swimming == 1)
            {
                vspeed = -2.4
                audio_stop_sound(snd_rotten)
                audio_play_sound(snd_rotten, 0, false)
            }
            else
            {
                vspeed = -4.8
                audio_stop_sound(snd_rotten)
                audio_play_sound(snd_rotten, 0, false)
            }
            delay = 6
            y--
        }
    }
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_physicssolid, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_physicssolid, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solidphy, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solidphy, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_onewaygate_right, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_onewaygate_left, 0, 0))
        x--
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (rotten == 1)
{
    draw_sprite_ext(spr_rotten, global.apariencia, round((x + 8)), round((y + 16)), (xscale2 * direct), yscale2, 0, c_white, 1)
    if (wings == 1)
    {
        if (global.apariencia &gt; 1)
            draw_sprite(sprite_wings, wings_anim, x, y)
        else
            draw_sprite(sprite_wings, wings_anim, (x + 8), y)
    }
    if (paracaidas == 1)
        draw_sprite_ext(spr_paracaidas, global.apariencia, (x + 8), y, 1, 1, image_angle, c_white, 1)
}
else
    event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
