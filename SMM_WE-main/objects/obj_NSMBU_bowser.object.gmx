<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_NSMBU_bowser_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_bossparent</parentName>
  <maskName>spr_mask_bowser</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
cooldown = 0
state = 1
big_jump = 0
fire_jump = 0
fire = 0
fire_anim = 0
turning = 0
jump = 0
multi_fire = 0
multi_cont = 0
swimming = 0
prevhspeed = 0
image_speed = 0.5
paracaidas = 0
firehitpoints = 50
key = 0
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 1 &amp;&amp; jump == 0)
{
    alarm[11] = 60
    if instance_exists(obj_mario)
    {
        if ((obj_mario.x &lt; x &amp;&amp; direct == 1) || (obj_mario.x &gt; x &amp;&amp; direct == -1))
        {
            turning = 1
            fire_anim = 0
            alarm[0] = -1
            alarm[1] = -1
            alarm[2] = -1
            alarm[3] = -1
            alarm[4] = -1
        }
    }
}
else
    alarm[11] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = (0.3 * direct)
alarm[0] = choose(320, 280, 220)
alarm[1] = choose(180, 90, 120)
alarm[3] = choose(720, 660, 600, 540)
alarm[11] = 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fireball;
audio_stop_sound(snd_NSMBU_bowser_fire)
audio_play_sound(snd_NSMBU_bowser_fire, 0, false)
switch multi_cont
{
    case 0:
        if (direct == 1)
        {
            fireball = instance_create((x + 19), (y - 7), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 350
                motion_set(350, 0.6)
            }
        }
        else
        {
            fireball = instance_create((x - 19), (y - 7), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 190
                motion_set(190, 0.6)
            }
        }
        break
    case 1:
        if (direct == 1)
        {
            fireball = instance_create((x + 19), (y - 14), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 0
                motion_set(0, 0.6)
            }
        }
        else
        {
            fireball = instance_create((x - 19), (y - 14), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 180
                motion_set(180, 0.6)
            }
        }
        break
    case 2:
        if (direct == 1)
        {
            fireball = instance_create((x + 17), (y - 20), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 20
                motion_set(20, 0.6)
            }
        }
        else
        {
            fireball = instance_create((x - 17), (y - 20), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 160
                motion_set(160, 0.6)
            }
        }
        break
    case 3:
        if (direct == 1)
        {
            fireball = instance_create((x + 14), (y - 25), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 38
                motion_set(38, 0.6)
            }
        }
        else
        {
            fireball = instance_create((x - 14), (y - 25), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 142
                motion_set(142, 0.6)
            }
        }
        break
    case 4:
        if (direct == 1)
        {
            fireball = instance_create((x + 17), (y - 27), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 43
                motion_set(43, 0.6)
            }
        }
        else
        {
            fireball = instance_create((x - 17), (y - 27), obj_NSMBU_bowser_fire_up)
            with (fireball)
            {
                direction = 128
                motion_set(128, 0.6)
            }
        }
        break
}

if (multi_cont == 4)
    multi_cont = 0
else
    multi_cont++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var val;
if (vspeed == 0 &amp;&amp; state == 1 &amp;&amp; jump == 0 &amp;&amp; fire_anim == 0 &amp;&amp; multi_fire == 0 &amp;&amp; turning == 0)
{
    val = choose(0, 1)
    if ((sprite_index == spr_NSMBU_bowser_walk &amp;&amp; image_index &gt; 3) || val == 0)
    {
        alarm[3] = 5
        exit
    }
    audio_stop_sound(snd_NSMBU_bowser_multifire)
    audio_play_sound(snd_NSMBU_bowser_multifire, 0, false)
    multi_fire = 1
}
else
    alarm[3] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_NSMBU_bowser_fire)
audio_play_sound(snd_NSMBU_bowser_fire, 0, false)
if (direct == 1)
    instance_create((x + 24), (y - 10), obj_NSMBU_bowser_fire)
else
    instance_create((x - 24), (y - 10), obj_NSMBU_bowser_fire)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0 &amp;&amp; jump == 0 &amp;&amp; state == 1 &amp;&amp; multi_fire == 0)
{
    if (sprite_index == spr_NSMBU_bowser_walk &amp;&amp; image_index &gt; 3)
    {
        alarm[1] = 2
        exit
    }
    fire_anim = 1
}
else
    alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mini, sonido_jump;
if (vspeed == 0 &amp;&amp; state == 1 &amp;&amp; jump &lt; 2 &amp;&amp; fire_anim == 0 &amp;&amp; multi_fire == 0)
{
    if (sprite_index == spr_NSMBU_bowser_walk &amp;&amp; image_index &gt; 3)
    {
        alarm[0] = 5
        exit
    }
    if (collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_bullebill_base, 1, 0))
        mini = 1
    else
        mini = 0
    if (jump == 0)
    {
        jump = 1
        fire_jump = choose(0, 0, 1, 0, 1)
    }
    else
    {
        state = 2
        jump = 2
        sonido_jump = choose(515, 516)
        audio_stop_sound(sonido_jump)
        audio_play_sound(sonido_jump, 0, false)
        if (fire_jump == 1)
            vspeed = (-(3 - (2.5 * mini)))
        else
        {
            if (mini == 1)
                vspeed = -0.5
            else
                vspeed = choose(-3.5, -4, -3.5, -4.5)
            if (big_jump == 0)
                big_jump = choose(0, 1, 1, 0, 1)
            if (instance_exists(obj_mario) &amp;&amp; (big_jump == 1 || (direct == 1 &amp;&amp; place_meeting((x + 32), y, obj_solid)) || (direct == -1 &amp;&amp; place_meeting((x - 32), y, obj_solid)) || (direct == 1 &amp;&amp; obj_mario.x &gt; (x + 64)) || (direct == -1 &amp;&amp; obj_mario.x &lt; (x - 64))))
            {
                if (obj_mario.x &lt; x)
                    hspeed = ((abs((x / obj_mario.x)) + 0.5) * direct)
                else
                    hspeed = ((abs((obj_mario.x / x)) + 0.5) * direct)
            }
        }
        alarm[0] = choose(120, 180, 90)
    }
}
else
    alarm[0] = choose(120, 60, 180)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 1)
{
    if (multi_fire == 1)
    {
        if (sprite_index != spr_NSMBU_bowser_fire_up)
        {
            sprite_index = spr_NSMBU_bowser_fire_up
            image_index = 0
        }
        if (image_index &gt;= 26 &amp;&amp; image_index &lt; 26.5)
            alarm[4] = 1
        if (image_index &gt;= 33 &amp;&amp; image_index &lt; 33.5)
            alarm[4] = 1
        if (image_index &gt;= 41 &amp;&amp; image_index &lt; 41.5)
            alarm[4] = 1
        if (image_index &gt;= 48 &amp;&amp; image_index &lt; 48.5)
            alarm[4] = 1
        if (image_index &gt;= 52 &amp;&amp; image_index &lt; 52.5)
            alarm[4] = 1
        image_speed = 0.5
    }
    else if (jump == 1)
    {
        if (fire_jump == 1)
        {
            if (sprite_index != spr_NSMBU_bowser_fire_jump)
            {
                sprite_index = spr_NSMBU_bowser_fire_jump
                image_index = 0
            }
            if (image_index &gt;= 12 &amp;&amp; image_index &lt; 12.5)
            {
                image_index = 13
                alarm[0] = 1
            }
            else
                image_speed = 0.5
        }
        else
        {
            if (sprite_index != spr_NSMBU_bowser_jump)
            {
                sprite_index = spr_NSMBU_bowser_jump
                image_index = 0
            }
            if (image_index &gt;= 20 &amp;&amp; image_index &lt; 20.5)
            {
                image_index = 21
                alarm[0] = 1
            }
            else
                image_speed = 0.5
        }
    }
    else if (turning == 1)
    {
        if (sprite_index != spr_NSMBU_bowser_turning)
        {
            sprite_index = spr_NSMBU_bowser_turning
            image_index = 0
        }
        if (image_index &gt;= 26.4)
        {
            turning = 0
            sprite_index = spr_NSMBU_bowser_walk
            image_index = 1
            direct = (-direct)
            alarm[10] = 1
        }
        else
            image_speed = 0.6
    }
    else if (fire_anim == 1)
    {
        if (sprite_index != spr_NSMBU_bowser_fire)
        {
            sprite_index = spr_NSMBU_bowser_fire
            image_index = 0
        }
        if (image_index &gt;= 25 &amp;&amp; image_index &lt; 25.5)
            alarm[2] = 1
        image_speed = 0.5
    }
    else if (jump == 2)
    {
        if (sprite_index != spr_NSMBU_bowser_fall)
        {
            sprite_index = spr_NSMBU_bowser_fall
            if (fire_jump == 1)
            {
                image_index = 14
                fire_jump = 0
            }
            else
                image_index = 0
        }
        if (image_index &gt;= 30.5)
        {
            image_index = 30
            jump = 0
        }
        else
            image_speed = 0.5
    }
    else
    {
        if (sprite_index != spr_NSMBU_bowser_walk)
        {
            sprite_index = spr_NSMBU_bowser_walk
            image_index = 0
        }
        if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; x)
            image_speed = 0.7
        else if (direct == -1 &amp;&amp; hspeed &gt; 0)
            image_speed = -0.5
        else
            image_speed = 0.5
        if (!outside_view())
        {
            if ((image_index &gt;= 17 &amp;&amp; image_index &lt; 18) || (image_index &gt;= -18 &amp;&amp; image_index &lt; -17))
            {
                audio_stop_sound(snd_NSMBU_bowser_paso1)
                audio_play_sound(snd_NSMBU_bowser_paso1, 0, false)
            }
            else if ((image_index &gt;= 0 &amp;&amp; image_index &lt; 1) || (image_index &lt;= 0 &amp;&amp; image_index &gt; -1))
            {
                audio_stop_sound(snd_NSMBU_bowser_paso2)
                audio_play_sound(snd_NSMBU_bowser_paso2, 0, false)
            }
        }
    }
}
else if (state == 2)
{
    if (turning == 1)
        turning = 0
    if (fire_anim == 1)
    {
        if (sprite_index != spr_NSMBU_bowser_fire_jump)
        {
            sprite_index = spr_NSMBU_bowser_fire_jump
            image_index = 0
        }
        if (image_index &gt;= 15 &amp;&amp; image_index &lt; 15.5)
            alarm[2] = 1
        image_speed = 0.5
    }
    else if (fire_jump == 1)
    {
        if (image_index &gt;= 34 &amp;&amp; image_index &lt; 34.5)
            alarm[2] = 1
        if (image_index &gt;= 43)
        {
            image_speed = 0
            image_index = 43
        }
        else
            image_speed = 0.5
    }
    else if (vspeed &gt; 0)
    {
        sprite_index = spr_NSMBU_bowser_fall
        if (image_index &gt;= 12.5)
        {
            image_speed = 0
            image_index = 12
        }
        else
            image_speed = 0.5
    }
    else
    {
        sprite_index = spr_NSMBU_bowser_jump
        if (image_index &gt;= 51.5)
        {
            image_speed = 0
            image_index = 51
        }
        else
            image_speed = 0.5
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_mario) &amp;&amp; big_jump == 0)
{
    if (obj_mario.x &gt; x)
    {
        if (fire_anim == 0 &amp;&amp; turning == 0 &amp;&amp; multi_fire == 0 &amp;&amp; (jump == 0 || big_jump == 1))
            hspeed = 0.6
        else
        {
            if (prevhspeed == 0)
                prevhspeed = hspeed
            hspeed = 0
        }
    }
    else if (fire_anim == 0 &amp;&amp; turning == 0 &amp;&amp; multi_fire == 0 &amp;&amp; (jump == 0 || big_jump == 1))
    {
        if (prevhspeed != 0)
        {
            hspeed = prevhspeed
            prevhspeed = 0
        }
        else if (hspeed &gt; 0)
        {
            hspeed = 0.3
            if (x &gt; (xstart + 64))
                hspeed = (-hspeed)
        }
        else if (hspeed &lt; 0)
        {
            hspeed = -0.3
            if (x &lt; (xstart - 64))
                hspeed = (-hspeed)
        }
    }
    else
    {
        if (prevhspeed == 0)
            prevhspeed = hspeed
        hspeed = 0
    }
}
event_user(3)
event_user(4)
if (gravity &gt; 0)
{
    gravity = 0.1
    if (vspeed &gt; 3.2)
        vspeed = 3.2
}
if (cooldown &gt; 0)
    cooldown--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.vspeed &lt; 0 &amp;&amp; bbox_bottom &lt; (other.yprevious + 5))
{
    if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
        vspeed = -0.5
    else
        vspeed = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_invincibility)
    exit
if (global.yoshi &gt; 0 &amp;&amp; other.bbox_bottom &lt; ((bbox_top - vspeed) + 5))
{
    if (instance_exists(obj_kuribo_drybones) &amp;&amp; obj_kuribo_drybones.gran_golpe == 1)
    {
        audio_play_sound(snd_NSMBU_kick, 0, false)
        with (other.id)
            event_user(1)
        with (obj_kuribo_drybones)
            gran_golpe = 0
        event_user(0)
    }
    else
    {
        event_user(15)
        firehitpoints--
        cooldown = 6
        if (firehitpoints &lt;= 0)
            event_user(0)
        other.hspeed = lengthdir_x(3, point_direction(x, y, other.x, (other.y + 16)))
        with (other.id)
            event_user(1)
    }
}
else
{
    other.hspeed = lengthdir_x(3, point_direction(x, y, other.x, (other.y + 16)))
    if ((other.y + 16) &lt; (y - 12))
    {
        if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1))
            other.vspeed = -2.125
        else
            other.vspeed = -5
    }
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_top)
                rot = 1
        }
        state = 1
        if (jump == 2)
        {
            audio_stop_sound(scr_snd_thwomp())
            audio_play_sound(scr_snd_thwomp(), 0, false)
        }
        if (big_jump == 1)
            big_jump = 0
    }
}
else
{
    state = 2
    if (paracaidas == 1)
    {
        gravity = 0.1
        if (vspeed &gt; 0.4)
            vspeed = 0.4
    }
    else if (!swimming)
    {
        gravity = 0.2
        if (vspeed &gt; 4)
            vspeed = 4
    }
    else if (swimming == 1)
    {
        gravity = 0.1
        if (vspeed &gt; 0.4)
            vspeed = 0.4
    }
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        vspeed = 0
    }
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1)))
{
    if (key == 1)
    {
        with (instance_create((x - 8), (y - 8), obj_key_appear))
            vspeed = -4
    }
    audio_stop_sound(snd_NSMBU_bowser_dead)
    audio_play_sound(snd_NSMBU_bowser_dead, 0, false)
    with (instance_create(x, y, obj_bowser_dead))
        direct = other.direct
    instance_destroy()
}
else if ((bbox_top - 16) &gt; room_height &amp;&amp; global.bg_level != "castle" &amp;&amp; global.bg_level != "forest" &amp;&amp; global.bg_level != "beach")
{
    if (key == 1)
    {
        with (instance_create((x - 8), (y - 8), obj_key_appear))
            vspeed = -4
    }
    audio_stop_sound(snd_NSMBU_bowser_dead)
    audio_play_sound(snd_NSMBU_bowser_dead, 0, false)
    if instance_exists(obj_levelmanager)
    {
        with (obj_levelmanager)
        {
            dead_bowser = 1
            alarm[11] = 90
        }
    }
    instance_destroy()
}
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_hurtsolid2, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_hurtsolid2, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    if ((direct == 1 &amp;&amp; hspeed &gt; 0) || (direct == -1 &amp;&amp; hspeed &lt; 0) || state == 3 || state == 4)
        hspeed = 0
    else
        hspeed = (-hspeed)
    if ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
    {
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
            x--
    }
    if ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
    {
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
            x++
    }
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (key == 1)
{
    with (instance_create((x - 8), (y - 8), obj_key_appear))
        vspeed = -4
}
audio_stop_sound(snd_NSMBU_bowser_dead)
audio_play_sound(snd_NSMBU_bowser_dead, 0, false)
imdead = instance_create(x, y, obj_bowser_dead)
imdead.direct = direct
imdead.vspeed = -3.5
if (direct == 1)
    imdead.hspeed = -1
else
    imdead.hspeed = 1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch sprite_index
{
    case spr_NSMBU_bowser_fire:
        fire_anim = 0
        alarm[1] = choose(180, 90, 120)
        break
    case 3489:
        multi_fire = 0
        alarm[3] = choose(600, 720, 600, 480)
        break
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cooldown &gt; 0)
    draw_sprite_ext(sprite_index, image_index, round(x), y, direct, 1, 0, make_colour_rgb(255, 60, 109), (cooldown / 4))
else
    draw_sprite_ext(sprite_index, image_index, round(x), y, direct, 1, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
