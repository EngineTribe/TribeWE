<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_SMB3_bowser_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_bossparent</parentName>
  <maskName>spr_mask_bowser</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
groundpount = 0
groundpount_cont = 0
y_start = y
walk_jump = 0
cooldown = 0
swimming = 0
prevhspeed = 0
image_speed = 0.1
paracaidas = 0
down_groundpount = 0
firehitpoints = 40
key = 0
stop_bowser = 0
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0)
{
    alarm[11] = 30
    if instance_exists(obj_mario)
    {
        if ((obj_mario.x &lt; x &amp;&amp; direct == 1) || (obj_mario.x &gt; x &amp;&amp; direct == -1))
        {
            stop_bowser = 1
            sprite_index = spr_SMB3_bowser_turning
            image_speed = 0.15
            image_index = 0
            alarm[0] = -1
            alarm[1] = -1
            alarm[2] = -1
        }
    }
}
else
    alarm[11] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; x)
    hspeed = 0.2
else
    hspeed = -0.2
alarm[0] = choose(30, 20, 30)
alarm[1] = 90
alarm[11] = 30
alarm[3] = choose(360, 660, 600, 360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_SMB3_bowser_search
image_speed = 0.1
image_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>groundpount = 1
if (collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_bullebill_base, 1, 0))
    vspeed = -0.5
else
    vspeed = -5
stop_bowser = 0
if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; (x - 24) &amp;&amp; obj_mario.x &lt; (x + 24))
    exit
if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &lt; x)
    hspeed = -5
else
    hspeed = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0)
{
    sprite_index = spr_SMB3_bowser_walk
    image_speed = 0
    image_index = 0
    stop_bowser = 1
    y_start = y
    alarm[0] = -1
    alarm[1] = -1
    alarm[2] = -1
    alarm[11] = -1
    alarm[4] = 20
    alarm[3] = choose(460, 660, 600, 460)
}
else
    alarm[3] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_SMB3_bowser_fire, 0, false)
if (direct == 1)
{
    with (instance_create((x + 20), (y - 14), obj_bowser_fire))
    {
        hspeed = (1.5 * other.direct)
        direct = other.direct
        decender = choose(0, 1, 2, 1, 0, 2)
    }
}
else
{
    with (instance_create((x - 20), (y - 14), obj_bowser_fire))
    {
        hspeed = (1.5 * other.direct)
        direct = other.direct
        decender = choose(0, 1, 2, 1, 0, 2)
    }
}
alarm[1] = choose(90, 90, 60, 90)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_SMB3_bowser_fire
image_speed = 0.15
image_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0)
{
    if (collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 4), bbox_right, bbox_top, obj_bullebill_base, 1, 0))
        vspeed = -0.5
    else
        vspeed = choose(-3, -1.5, -1.5, -3, -1.5)
    alarm[0] = 30
}
else
    alarm[0] = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_SMB3_bowser_walk)
{
    image_speed = 0
    if (vspeed != 0 &amp;&amp; groundpount == 0)
    {
        image_index = 1
        stop_bowser = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ground_block;
if (instance_exists(obj_mario) &amp;&amp; groundpount == 0)
{
    if (obj_mario.x &gt; x)
    {
        if (stop_bowser == 0)
            hspeed = 0.2
        else
        {
            if (prevhspeed == 0 &amp;&amp; hspeed != 0)
                prevhspeed = hspeed
            hspeed = 0
        }
    }
    else if (stop_bowser == 0)
    {
        if (prevhspeed != 0)
        {
            hspeed = prevhspeed
            prevhspeed = 0
        }
        else
            hspeed = -0.2
    }
    else
    {
        if (prevhspeed == 0 &amp;&amp; hspeed != 0)
            prevhspeed = hspeed
        hspeed = 0
    }
}
event_user(3)
event_user(4)
if (gravity &gt; 0)
{
    if (groundpount == 2)
    {
        gravity = 0.2
        if (vspeed &gt; 6)
            vspeed = 6
    }
    else
    {
        gravity = 0.1
        if (vspeed &gt; 3.2)
            vspeed = 3.2
    }
}
if (cooldown &gt; 0)
    cooldown--
if (groundpount_cont &gt; 0)
{
    groundpount_cont--
    ground_block = collision_rectangle(bbox_left, (bbox_bottom + 2), bbox_right, ((bbox_bottom + vspeed) + 2), obj_blockparent, 0, 0)
    if (ground_block &amp;&amp; ground_block.object_index != obj_noteblock &amp;&amp; ground_block.object_index != obj_musicblock &amp;&amp; ground_block.object_index != obj_noteblock_s &amp;&amp; ground_block.ready == 0)
    {
        if (ground_block.object_index == obj_flipblock)
        {
            with (ground_block)
                alarm[2] = 1
        }
        else
        {
            with (ground_block)
                event_user(3)
        }
    }
}
if (instance_exists(obj_mario) &amp;&amp; groundpount == 1)
{
    if ((obj_mario.x &gt; (x - 16) &amp;&amp; obj_mario.x &lt; (x + 16) &amp;&amp; y &lt; (y_start - 64)) || y &lt; (y_start - 160) || (hspeed &gt; 2 &amp;&amp; x &gt; (obj_mario.x + 144)) || (hspeed &lt; -2 &amp;&amp; x &lt; (obj_mario.x - 144)) || y &lt; (view_yview[0] - 32) || down_groundpount == 1)
    {
        sprite_index = spr_SMB3_bowser_attack
        image_speed = 0
        image_index = 0
        vspeed = 2
        hspeed = 0
        groundpount = 2
        down_groundpount = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.vspeed &lt; 0 &amp;&amp; groundpount == 0 &amp;&amp; groundpount_cont == 0)
{
    if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
        vspeed = -0.5
    else
        vspeed = -1.5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_invincibility)
    exit
if (global.yoshi &gt; 0 &amp;&amp; other.bbox_bottom &lt; ((bbox_top - vspeed) + 5))
{
    if (instance_exists(obj_kuribo_drybones) &amp;&amp; obj_kuribo_drybones.gran_golpe == 1)
    {
        audio_play_sound(snd_SMB_kick, 0, false)
        with (other.id)
            event_user(1)
        with (obj_kuribo_drybones)
            gran_golpe = 0
        event_user(0)
    }
    else
    {
        event_user(15)
        firehitpoints--
        cooldown = 6
        if (firehitpoints &lt;= 0)
            event_user(0)
        other.hspeed = lengthdir_x(3, point_direction(x, y, other.x, (other.y + 16)))
        with (other.id)
            event_user(1)
    }
}
else
{
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
        if (sprite_index == spr_SMB3_bowser_walk)
        {
            image_index = 0
            stop_bowser = 1
        }
        if (groundpount == 2)
        {
            image_index = 1
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            if instance_exists(obj_mario)
            {
                if (obj_mario.state &lt; 2)
                {
                    with (obj_mario)
                    {
                        if (!instance_exists(obj_shake_mario))
                            instance_create(x, (y + 5), obj_shake_mario)
                        shake = 1
                        stuntime = 90
                        hspeed = 0
                        disablecontrols = 1
                    }
                }
            }
            instance_create((bbox_left - 8), (bbox_bottom - 8), obj_smoke)
            instance_create((bbox_right - 8), (bbox_bottom - 8), obj_smoke)
            alarm[5] = 30
            groundpount_cont = 5
            groundpount = 3
        }
    }
}
else if (paracaidas == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        if (groundpount != 0)
            down_groundpount = 1
        vspeed = 0
    }
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1)))
{
    if (key == 1)
    {
        with (instance_create((x - 8), (y - 8), obj_key_appear))
            vspeed = -4
    }
    audio_stop_sound(snd_SMB3_bowser_dead)
    audio_play_sound(snd_SMB3_bowser_dead, 0, false)
    with (instance_create(x, y, obj_bowser_dead))
        direct = other.direct
    instance_destroy()
}
else if ((bbox_top - 16) &gt; room_height &amp;&amp; global.bg_level != "castle" &amp;&amp; global.bg_level != "forest" &amp;&amp; global.bg_level != "beach")
{
    if (key == 1)
    {
        with (instance_create((x - 8), (y - 8), obj_key_appear))
            vspeed = -4
    }
    audio_stop_sound(snd_SMB3_bowser_dead)
    audio_play_sound(snd_SMB3_bowser_dead, 0, false)
    if instance_exists(obj_levelmanager)
    {
        with (obj_levelmanager)
        {
            dead_bowser = 1
            alarm[11] = 120
        }
    }
    instance_destroy()
}
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    if ((direct == 1 &amp;&amp; hspeed &gt; 0) || groundpount != 0)
    {
        if (groundpount != 0)
            down_groundpount = 1
        hspeed = 0
    }
    else
        hspeed = (-hspeed)
    if ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
    {
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
            x--
    }
    if ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
    {
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
            x++
    }
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (key == 1)
{
    with (instance_create((x - 8), (y - 8), obj_key_appear))
        vspeed = -4
}
audio_play_sound(snd_SMB3_bowser_dead, 0, false)
imdead = instance_create(x, y, obj_bowser_dead)
imdead.direct = direct
imdead.vspeed = -3.5
if (direct == 1)
    imdead.hspeed = -1
else
    imdead.hspeed = 1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch sprite_index
{
    case spr_SMB3_bowser_fire:
        sprite_index = spr_SMB3_bowser_walk
        alarm[2] = 1
        break
    case 1211:
        sprite_index = spr_SMB3_bowser_walk
        direct = (-direct)
        stop_bowser = 0
        hspeed = (0.3 * direct)
        alarm[0] = choose(30, 20, 30)
        alarm[1] = 90
        break
    case 1212:
        sprite_index = spr_SMB3_bowser_walk
        image_index = 0
        groundpount = 0
        stop_bowser = 0
        hspeed = (0.3 * direct)
        alarm[0] = choose(30, 20, 30)
        alarm[1] = 90
        alarm[11] = 2
        break
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cooldown &gt; 0)
    draw_sprite_ext(sprite_index, image_index, round(x), y, direct, 1, 0, make_colour_rgb(255, 60, 109), (cooldown / 4))
else
    draw_sprite_ext(sprite_index, image_index, round(x), y, direct, 1, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
