<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bt_lg</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-23</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
image_index = 0
effect_hover = 0
url = ""
press = 0
rot = 0
mensaje = ""
codigo = ""
internet = 0
time = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (time &gt; 0)
{
    time--
    if (time == 0)
    {
        press = 0
        image_index = 0
    }
    else
        alarm[3] = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0
press = 0
mensaje = "Tiempo de conexion agotado"
codigo = "002"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var uss, pps;
uss = obj_lun.new_texto
pps = sha1_string_utf8(obj_lp.new_texto)
url = http_get(((((((((global.api_url + "request?type=login&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;username=") + uss) + "&amp;password=") + pps))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if has_internet()
    internet = 1
else
    internet = 0
alarm[0] = 180
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 1)
    rot -= 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0)
    image_alpha = 0.9
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_lun) &amp;&amp; instance_exists(obj_lp) &amp;&amp; obj_lun.new_texto != "" &amp;&amp; obj_lun.new_texto != " " &amp;&amp; obj_lp.new_texto != "" &amp;&amp; obj_lp.new_texto != " " &amp;&amp; (!instance_exists(obj_toast)) &amp;&amp; press == 0 &amp;&amp; time == 0)
{
    if has_internet()
    {
        audio_play_sound(snd_aceptar, 0, false)
        image_index = 1
        alarm[1] = 10
        alarm[2] = 720
        press = 1
        mensaje = ""
        codigo = ""
    }
    else
    {
        mensaje = "No hay conexion a internet"
        codigo = "002"
    }
}
else
    audio_play_sound(snd_wrong, 0, false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var resultado, map;
if (ds_map_find_value(async_load, "id") == url)
{
    if (ds_map_find_value(async_load, "status") == 0)
    {
        resultado = ds_map_find_value(async_load, "result")
        map = json_decode(resultado)
        if (map == -1)
        {
            show_debug_message("Resultado invalido")
            exit
        }
        if ds_map_exists(map, "ip")
        {
            global.my1 = ds_map_find_value(map, "alias")
            global.my2 = ds_map_find_value(map, "id")
            global.my3 = ds_map_find_value(map, "usergroup")
            global.my4 = ds_map_find_value(map, "ip")
            global.my5 = ds_map_find_value(map, "auth_code")
            if (room == rm_intro)
                room_goto(rm_title)
            else
            {
                with (obj_toast)
                    instance_destroy()
                with (instance_create((view_xview[0] + 134), (view_yview[0] + 216), obj_toast))
                    image_index = 9
                with (obj_iname_control2)
                    instance_destroy()
            }
        }
        else if ds_map_exists(map, "message")
        {
            mensaje = ds_map_find_value(map, "message")
            codigo = ds_map_find_value(map, "error_type")
            alarm[2] = -1
            time = 10
            alarm[3] = 60
            with (obj_lp)
                new_texto = ""
        }
        ds_map_destroy(map)
    }
    else
    {
        mensaje = "Error al iniciar sesi√≥n"
        codigo = "002"
        alarm[2] = -1
        time = 10
        alarm[3] = 60
        with (obj_lp)
            new_texto = ""
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var resultado, nuevo_resultado;
if (ds_map_find_value(async_load, "id") == url)
{
    if (ds_map_find_value(async_load, "status") == 0)
    {
        resultado = ds_map_find_value(async_load, "result")
        nuevo_resultado = string_split(",", resultado, 0)
        if (nuevo_resultado[0] == sha1_string_utf8("0"))
        {
            if instance_exists(obj_load_image)
            {
                with (obj_load_image)
                    instance_destroy()
            }
            with (obj_toast)
                instance_destroy()
            with (instance_create((view_xview[0] + 134), (view_yview[0] + 216), obj_toast))
            {
                sprite_index = spr_notificacion_login
                image_index = 1
            }
            image_index = 0
            press = 0
        }
        else if (nuevo_resultado[0] == sha1_string_utf8("1"))
        {
            if (nuevo_resultado[3] == sha1_string_utf8("-1"))
            {
                if instance_exists(obj_load_image)
                {
                    with (obj_load_image)
                        instance_destroy()
                }
                with (obj_toast)
                    instance_destroy()
                with (instance_create((view_xview[0] + 134), (view_yview[0] + 216), obj_toast))
                {
                    sprite_index = spr_notificacion_login
                    image_index = 2
                }
                image_index = 0
                press = 0
            }
            else if (nuevo_resultado[3] == sha1_string_utf8("1"))
            {
                if instance_exists(obj_load_image)
                {
                    with (obj_load_image)
                        instance_destroy()
                }
                with (obj_toast)
                    instance_destroy()
                with (instance_create((view_xview[0] + 134), (view_yview[0] + 216), obj_toast))
                {
                    sprite_index = spr_notificacion_login
                    image_index = 3
                }
                image_index = 0
                press = 0
            }
            else if (has_internet() &amp;&amp; (nuevo_resultado[3] == sha1_string_utf8("0") || nuevo_resultado[3] == sha1_string_utf8("2") || nuevo_resultado[3] == sha1_string_utf8("3") || nuevo_resultado[3] == sha1_string_utf8("4")))
            {
                global.debug1 = nuevo_resultado[0]
                global.debug2 = nuevo_resultado[1]
                global.debug3 = nuevo_resultado[2]
                global.name_user = global.debug3
                global.debug4 = nuevo_resultado[3]
                room_goto(rm_title)
            }
            else
            {
                image_index = 0
                press = 0
                if instance_exists(obj_load_image)
                {
                    with (obj_load_image)
                        instance_destroy()
                }
                with (obj_toast)
                    instance_destroy()
                with (instance_create((view_xview[0] + 134), (view_yview[0] + 216), obj_toast))
                {
                    sprite_index = spr_notificacion_login
                    image_index = 0
                }
            }
        }
    }
    else
    {
        image_index = 0
        press = 0
        if instance_exists(obj_load_image)
        {
            with (obj_load_image)
                instance_destroy()
        }
        with (obj_toast)
            instance_destroy()
        with (instance_create((view_xview[0] + 134), (view_yview[0] + 216), obj_toast))
        {
            sprite_index = spr_notificacion_login
            image_index = 0
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if (image_index == 1 &amp;&amp; time == 0)
    draw_sprite_ext(spr_load_image, 1, (x + 12), (y + 10), 1, 1, rot, c_white, 1)
if (mensaje != "" &amp;&amp; codigo != "")
{
    draw_set_font(global.font_google)
    draw_set_color(c_red)
    draw_set_halign(fa_center)
    draw_text((view_xview[0] + (view_wview[0] / 2)), (view_yview[0] + 164), mensaje)
    draw_text((view_xview[0] + (view_wview[0] / 2)), (view_yview[0] + 177), ("C√≥digo: " + codigo))
    draw_set_halign(fa_left)
}
if (time &gt; 0)
{
    draw_set_font(global.font_google)
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text((x + (sprite_width / 2)), (y + 2), (string(time) + "s"))
    draw_set_halign(fa_left)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
