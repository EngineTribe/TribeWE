<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_SMB_bulletbill_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dark;
sprite_anim = 3445
anim_shoot = 0
if (global.bg_level == "castle" || global.bg_level == "ghost" || global.bg_level == "underground" || global.modo_noche == 1)
    dark = 1
else
    dark = 0
switch global.apariencia
{
    case 0:
        if (dark == 1)
            sprite_index = spr_SMB_bulletbill_base_night
        else
            sprite_index = spr_SMB_bulletbill_base
        break
    case 1:
        if (dark == 1)
            sprite_index = spr_SMB3_bullebill_base_night
        else
            sprite_index = spr_SMB3_bullebill_base
        break
    case 2:
        sprite_index = spr_bullebill_base
        break
    case 3:
        sprite_index = spr_NSMBU_bullebill_base
        break
}

wings = 0
w_wings = 0
direct = 1
dead_h = 0
apilar = 0
swimming = 0
modo_lava = 0
sprout = 0
shoot_right = 0
shoot_left = 0
index = 0
size_y = 3
image_speed = 0
alarm[0] = 90
solidtop = 0
alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (solidtop != obj_lighting &amp;&amp; instance_exists(solidtop))
{
    with (solidtop)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>solidtop = instance_create(x, y, obj_solidtop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_mario))
{
    alarm[0] = 1
    exit
}
if ((obj_mario.x - 2) &lt;= x &amp;&amp; obj_mario.x &gt; (x - 256) &amp;&amp; y &gt;= (obj_mario.y - 160) &amp;&amp; (!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_mario, 0, 0)))
{
    if (shoot_left != obj_lighting &amp;&amp; instance_exists(shoot_left))
        alarm[0] = 15
    else
    {
        switch global.apariencia
        {
            case 2:
                audio_play_sound(snd_explode, 0, false)
                break
            case 3:
                audio_play_sound(snd_NSMBU_bullet, 0, false)
                break
            default:
                audio_play_sound(snd_SMB3_explode, 0, false)
        }

        with (instance_create(x, y, obj_smoke))
        {
            depth = -10
            if (global.apariencia == 3)
            {
                sprite_index = spr_NSMBU_bullet_explotion
                image_speed = 0.5
                depth = 11
            }
        }
        if (global.apariencia == 3)
            anim_shoot = 1
        event_user(1)
    }
}
else if ((obj_mario.x + 2) &gt;= (x + 16) &amp;&amp; obj_mario.x &lt; (x + 256) &amp;&amp; y &gt;= (obj_mario.y - 160) &amp;&amp; (!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_mario, 0, 0)))
{
    if (shoot_right != obj_lighting &amp;&amp; instance_exists(shoot_right))
        alarm[0] = 15
    else
    {
        switch global.apariencia
        {
            case 2:
                audio_play_sound(snd_explode, 0, false)
                break
            case 3:
                audio_play_sound(snd_NSMBU_bullet, 0, false)
                break
            default:
                audio_play_sound(snd_SMB3_explode, 0, false)
        }

        with (instance_create((x + 16), y, obj_smoke))
        {
            depth = -10
            if (global.apariencia == 3)
            {
                sprite_index = spr_NSMBU_bullet_explotion
                image_speed = 0.5
                depth = 11
            }
            direct = -1
        }
        if (global.apariencia == 3)
            anim_shoot = 1
        event_user(2)
    }
}
else
    alarm[0] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var coli_red, coli_blue, coli_flip;
event_inherited()
if (global.apariencia == 3 &amp;&amp; anim_shoot &gt; 0)
{
    if (anim_shoot &gt;= 12.5)
        anim_shoot = 0
    else
        anim_shoot += 0.5
}
if (solidtop != obj_lighting &amp;&amp; instance_exists(solidtop))
{
    solidtop.x = x
    solidtop.y = y
}
if (instance_exists(obj_mario) &amp;&amp; place_meeting(x, y, obj_mario) &amp;&amp; (obj_mario.y + 16) &gt;= y)
{
    if (obj_mario.x &gt; (x + 8))
    {
        with (obj_mario)
            x++
    }
    else
    {
        with (obj_mario)
            x--
    }
}
if (gravity == 0)
{
    hspeed = (max(0, (abs(hspeed) - 0.1)) * sign(hspeed))
    if (abs(hspeed) &lt; 0.1)
        hspeed = 0
}
coli_red = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_onoffplatform, 0, 0)
coli_blue = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_onoffplatform_blue, 0, 0)
coli_flip = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_flipblock, 0, 0)
if ((coli_red &amp;&amp; coli_red.image_index == 1 &amp;&amp; obj_levelmanager.editor == 0 &amp;&amp; x &gt; view_xview[0] &amp;&amp; x &lt; (view_xview[0] + 384) &amp;&amp; y &gt; view_yview[0] &amp;&amp; y &lt; (view_xview[0] + 216)) || (coli_blue &amp;&amp; coli_blue.image_index == 1 &amp;&amp; obj_levelmanager.editor == 0 &amp;&amp; x &gt; view_xview[0] &amp;&amp; x &lt; (view_xview[0] + 384)))
    event_user(0)
if (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach") &amp;&amp; modo_lava == 0)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_agua)
}
if (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle" &amp;&amp; modo_lava == 0)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
    modo_lava = 1
}
if (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt;= obj_lava_water.y &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1 &amp;&amp; modo_lava == 0)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
    modo_lava = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent_held">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 2) &amp;&amp; vspeed &gt; 0 &amp;&amp; vspeed != 0)
    other.y += vspeed
if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 1) &amp;&amp; vspeed &gt; 0 &amp;&amp; (collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_solidtop, 0, 0) || collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_physicssolid, 0, 0)))
{
    audio_stop_sound(scr_snd_kick())
    audio_play_sound(scr_snd_kick(), 0, false)
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.vspeed &lt; 0 &amp;&amp; bbox_bottom &lt; (other.yprevious + 5))
    vspeed = (-(3 - (1.5 * swimming)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bossparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.visible == true)
{
    if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 2) &amp;&amp; vspeed &gt; 0 &amp;&amp; vspeed != 0)
        other.y += vspeed
    if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 1) &amp;&amp; vspeed &gt; 0 &amp;&amp; (collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_solidtop, 0, 0) || collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_physicssolid, 0, 0)))
    {
        audio_stop_sound(scr_snd_kick())
        audio_play_sound(scr_snd_kick(), 0, false)
        with (other.id)
            event_user(0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.hardness &lt; 99 &amp;&amp; other.hardness != 6 &amp;&amp; other.visible == true &amp;&amp; other.object_index != obj_grinder &amp;&amp; other.object_index != obj_banzaibill &amp;&amp; other.object_index != obj_podoboo &amp;&amp; other.object_index != obj_angrysun &amp;&amp; other.object_index != obj_cheepcheep &amp;&amp; other.object_index != obj_thwomp &amp;&amp; other.object_index != obj_boo &amp;&amp; other.object_index != obj_cannonball &amp;&amp; other.object_index != obj_cannonball_red)
{
    if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 2) &amp;&amp; vspeed &gt; 0 &amp;&amp; vspeed != 0)
        other.y += vspeed
    if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 1) &amp;&amp; vspeed &gt; 0 &amp;&amp; (collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_solidtop, 0, 0) || collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_physicssolid, 0, 0)))
    {
        if (other.object_index == obj_bobomb || other.object_index == obj_bobomb_ready)
        {
            with (other.id)
            {
                instance_create(x, y, obj_explosion)
                instance_destroy()
            }
        }
        else
        {
            audio_stop_sound(scr_snd_kick())
            audio_play_sound(scr_snd_kick(), 0, false)
            with (other.id)
                event_user(0)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powerupparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index != obj_cap &amp;&amp; other.object_index != obj_propellershroom)
{
    if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 2) &amp;&amp; vspeed &gt; 0 &amp;&amp; vspeed != 0)
        other.y += vspeed
    if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 1) &amp;&amp; vspeed &gt; 0 &amp;&amp; (collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_solidtop, 0, 0) || collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_physicssolid, 0, 0)))
    {
        instance_create(other.x, other.y, obj_smoke)
        with (other.id)
            instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 2) &amp;&amp; vspeed &gt; 0 &amp;&amp; other.state &gt; 1)
    other.y += vspeed
if ((bbox_bottom - vspeed) &lt; (other.bbox_top + 1) &amp;&amp; vspeed &gt; 0 &amp;&amp; (other.state &lt; 2 || collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_solidtop, 0, 0) || collision_rectangle((other.bbox_left + 4), (other.bbox_bottom + vspeed), (other.bbox_right - 4), (other.bbox_bottom + vspeed), obj_physicssolid, 0, 0)))
{
    instance_create(other.x, other.y, obj_deadmario)
    with (other.id)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var lava_lift, check, phy_check, spd, bull_1, bull_2, bull_3, bull_4;
lava_lift = collision_rectangle(bbox_left, (bbox_bottom - 2), bbox_right, ((bbox_bottom + 4) + vspeed), obj_platform_parent, 0, 0)
if (lava_lift &amp;&amp; vspeed &gt;= 0)
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 2), bbox_right, ((bbox_bottom + 3) + vspeed), obj_solidtop, 0, 0)
    phy_check = collision_rectangle(bbox_left, (bbox_bottom - 2), bbox_right, ((bbox_bottom + 3) + vspeed), obj_physicssolid, 0, 0)
    if ((check &amp;&amp; check != lava_lift) || phy_check)
        exit
    y = (lava_lift.bbox_top - (((sprite_get_bbox_bottom(sprite_index) + 1) * size_y) - sprite_get_yoffset(sprite_index)))
    spd = lava_lift.hspeed
    bull_1 = collision_rectangle(((bbox_right + 1) + spd), bbox_top, ((bbox_right + 1) + spd), (bbox_bottom - 1), obj_bullebill_base, 0, 0)
    bull_2 = collision_rectangle(((bbox_left - 1) + spd), bbox_top, ((bbox_left - 1) + spd), (bbox_bottom - 1), obj_bullebill_base, 0, 0)
    if ((lava_lift.hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((bbox_right + 1) + spd), bbox_top, ((bbox_right + 1) + spd), (bbox_bottom - 1), obj_solid, 0, 0))) || (lava_lift.hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((bbox_right + 1) + spd), bbox_top, ((bbox_right + 1) + spd), (bbox_bottom - 1), obj_physicssolid, 0, 0))) || (lava_lift.hspeed &gt; 0 &amp;&amp; ((!bull_1) || (bull_1 &amp;&amp; bull_1 == id))) || (lava_lift.hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((bbox_right + 1) + spd), bbox_top, ((bbox_right + 1) + spd), (bbox_bottom - 1), obj_onewaygate_left, 0, 0))) || (lava_lift.hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((bbox_left - 1) + spd), bbox_top, ((bbox_left - 1) + spd), (bbox_bottom - 1), obj_solid, 0, 0))) || (lava_lift.hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((bbox_left - 1) + spd), bbox_top, ((bbox_left - 1) + spd), (bbox_bottom - 1), obj_physicssolid, 0, 0))) || (lava_lift.hspeed &lt; 0 &amp;&amp; ((!bull_2) || (bull_2 &amp;&amp; bull_2 == id))) || (lava_lift.hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((bbox_left - 1) + spd), bbox_top, ((bbox_left - 1) + spd), (bbox_bottom - 1), obj_onewaygate_right, 0, 0))))
        x += lava_lift.hspeed
    bull_3 = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0)
    bull_4 = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_bullebill_base, 0, 0)
    if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_solid, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_physicssolid, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_onewaygate_left, 0, 0) || (bull_3 &amp;&amp; bull_3 != id))
        x -= abs(lava_lift.hspeed)
    else if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_physicssolid, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_onewaygate_right, 0, 0) || (bull_4 &amp;&amp; bull_4 != id))
        x += abs(lava_lift.hspeed)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (((sprite_get_bbox_bottom(sprite_index) + 1) * size_y) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (((sprite_get_bbox_bottom(sprite_index) + 1) * size_y) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
    }
}
else if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.03)
        vspeed = 0.03
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.02
    if (vspeed &gt; 1)
        vspeed = 1
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        vspeed = 0
    }
}
if ((bbox_top - 16) &gt; room_height)
    instance_destroy()
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    hspeed = 0
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solidphy, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sprite, x_pos, y_pos, spd_h, spd_v;
if (sprout == 0)
{
    with (instance_create((x + 16), y, obj_bulletbill))
    {
        hspeed = (1 - (0.5 * other.swimming))
        direct = 1
    }
    alarm[0] = 192
}
else
{
    sprite = scr_constant_get_sprite(sprout)
    x_pos = (x + 16)
    y_pos = y
    if (sprout == -1)
    {
        for (i = 0; i &lt; 8; i++)
        {
            with (instance_create(x_pos, y_pos, obj_coin_pow))
            {
                spd_h = random_range(1.6, 3)
                spd_v = random_range(1, 1.5)
                hspeed = (spd_h - (1.5 * other.swimming))
                vspeed = (-(spd_v - (1 * other.swimming)))
            }
        }
    }
    else if (sprout == -69 || sprout == -70)
    {
        shoot_left = instance_create(x_pos, y_pos, obj_shell_held)
        shoot_left.mytopid = 1
        shoot_left.sprite_index = sprite
        shoot_left.hspeed = (2.9 - (1 * other.swimming))
    }
    else
    {
        shoot_left = scr_sprite_make_object(x_pos, y_pos, sprite)
        with (shoot_left)
        {
            if (object_index == obj_cheepcheep || object_index == obj_cheepcheep2 || object_index == obj_mushroom || object_index == obj_1up || object_index == obj_star || object_index == obj_hen_mushroom || object_index == obj_megamushroom)
                alarm[10] = -1
            if (object_index == obj_cheepcheep || object_index == obj_cheepcheep2)
                direct = -1
            if (object_index == obj_1up)
                alarm[11] = 4
            hspeed = (3.5 - (2 * other.swimming))
        }
    }
    alarm[0] = 192
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sprite, x_pos, y_pos, spd_h, spd_v;
if (sprout == 0)
{
    with (instance_create(x, y, obj_bulletbill))
    {
        hspeed = (-(1 - (0.5 * other.swimming)))
        direct = -1
    }
    alarm[0] = 192
}
else
{
    sprite = scr_constant_get_sprite(sprout)
    x_pos = (x - 16)
    y_pos = y
    if (sprout == -1)
    {
        for (i = 0; i &lt; 8; i++)
        {
            with (instance_create(x_pos, y_pos, obj_coin_pow))
            {
                spd_h = random_range(1.6, 3)
                spd_v = random_range(1, 1.5)
                hspeed = (-(spd_h - (1.5 * other.swimming)))
                vspeed = (-(spd_v - (1 * other.swimming)))
            }
        }
    }
    else if (sprout == -69 || sprout == -70)
    {
        shoot_left = instance_create(x_pos, y_pos, obj_shell_held)
        shoot_left.mytopid = 1
        shoot_left.sprite_index = sprite
        shoot_left.hspeed = (-(2.9 - (1 * other.swimming)))
    }
    else
    {
        shoot_left = scr_sprite_make_object(x_pos, y_pos, sprite)
        with (shoot_left)
        {
            if (object_index == obj_cheepcheep || object_index == obj_cheepcheep2 || object_index == obj_mushroom || object_index == obj_1up || object_index == obj_star || object_index == obj_hen_mushroom || object_index == obj_megamushroom)
                alarm[10] = -1
            if (object_index == obj_cheepcheep || object_index == obj_cheepcheep2)
                direct = -1
            if (object_index == obj_1up)
                alarm[11] = 4
            hspeed = (-(3.5 - (2 * other.swimming)))
        }
    }
    alarm[0] = 192
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create((x + 8), y, obj_enemy_dead)
imdead.girar = 1
imdead.image_speed = 0
switch global.apariencia
{
    case 0:
        imdead.sprite_index = spr_SMB_bulletbill_base_deads
        break
    case 1:
        imdead.sprite_index = spr_SMB3_bulletbill_base_deads
        break
    case 2:
        imdead.sprite_index = spr_bulletbill_base_deads
        break
    case 3:
        imdead.sprite_index = spr_NSMBU_bulletbill_base_deads
        break
}

if (global.apariencia &lt; 2)
{
    if (global.bg_level == "castle" || global.bg_level == "ghost" || global.bg_level == "underground" || global.modo_noche == 1)
        imdead.image_index = 1
    else
        imdead.image_index = 0
}
if (other.hspeed == 0)
{
    if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = 1
    else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = -1
}
else if (other.hspeed &gt; 0)
    imdead.hspeed = 1
else if (other.hspeed &lt; 0)
    imdead.hspeed = -1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (v = 0; v &lt; size_y; v++)
{
    if (v == 0)
        index = 0
    else if (v == 1)
        index = 1
    else
        index = 2
    draw_sprite(sprite, index, x, (y + (v * 16)))
}
if (global.apariencia == 3 &amp;&amp; anim_shoot &gt; 0)
    draw_sprite(sprite_anim, anim_shoot, x, y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
