<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_charginchuck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        s_charginchuck = 434
        s_charginchuck_walk = 435
        s_charginchuck_jump = 436
        s_charginchuck_damage = 437
        sprite_index = spr_SMB_charginchuck
        sprite_wings = 391
        break
    case 1:
        s_charginchuck = 1234
        s_charginchuck_walk = 1235
        s_charginchuck_jump = 1236
        s_charginchuck_damage = 1237
        sprite_index = spr_SMB3_charginchuck
        sprite_wings = 1179
        break
    case 2:
        s_charginchuck = 2061
        s_charginchuck_walk = 2062
        s_charginchuck_jump = 2063
        s_charginchuck_damage = 2064
        sprite_wings = 2042
        break
    case 3:
        s_charginchuck = 2061
        s_charginchuck_walk = 2062
        s_charginchuck_jump = 2063
        s_charginchuck_damage = 2064
        sprite_wings = 3477
        break
}

hardness = 0
stomp = 0
edible = 2
direct = 1
hp = 3
firehp = 5
lookout = -1
swimming = 0
wings = 0
wings_anim = 0
paracaidas = 0
apilar = 0
dead_h = 0
innave = 0
image_speed = 0.15
alarm[0] = 6
alarm[10] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gravity &gt; 0 || (!instance_exists(obj_mario)))
{
    alarm[10] = 1
    exit
}
sprite_index = s_charginchuck_walk
friction = 0
alarm[0] = 6
if (obj_mario.bbox_bottom &lt; (y - 16))
{
    image_speed = 0.15
    lookout = 0
    alarm[1] = 120
    if (obj_mario.x &lt; x)
        hspeed = -1
    else
        hspeed = 1
}
else
{
    image_speed = 0.3
    lookout = 1
    if (obj_mario.x &lt; x)
        hspeed = -1.75
    else
        hspeed = 1.75
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gravity == 0)
{
    sprite_index = s_charginchuck
    image_speed = 0.1
    hspeed = 0
    lookout = -1
    alarm[10] = 32
}
else
    alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 7
if (lookout == 1 &amp;&amp; gravity == 0 &amp;&amp; global.apariencia &gt; 1)
{
    if (sprite_index == s_charginchuck_walk)
    {
        audio_stop_sound(scr_snd_bump())
        audio_play_sound(scr_snd_bump(), 0, false)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var block_right, block_left;
xx = abs(hspeed)
if (sprite_index == s_charginchuck_walk || sprite_index == s_charginchuck_jump)
{
    if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_onewaygate_right, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_onewaygate_left, 0, 0)))
    {
        block_right = collision_rectangle(((bbox_left - 3) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_flipblock, 1, 0)
        block_left = collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_flipblock, 1, 0)
        if (hspeed &lt; 0 &amp;&amp; block_right &amp;&amp; block_right.ready == 0)
        {
            with (block_right)
                alarm[2] = 1
        }
        else if (hspeed &gt; 0 &amp;&amp; block_left &amp;&amp; block_left.ready == 0)
        {
            with (block_left)
                alarm[2] = 1
        }
        else if (gravity == 0)
        {
            sprite_index = s_charginchuck_jump
            image_speed = 0
            image_index = 0
            vspeed = (-(4.5 - (2.5 * swimming)))
            y--
        }
    }
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x -= xx
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_physicssolid, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_physicssolid, 0, 0))
        x -= xx
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x -= xx
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_onewaygate_right, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_onewaygate_left, 0, 0))
        x -= xx
}
else
{
    if (gravity == 0)
    {
        hspeed = 0
        if (image_speed == 0)
            image_speed = 0.15
    }
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x -= xx
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_physicssolid, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_physicssolid, 0, 0))
        x -= xx
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x -= xx
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_onewaygate_right, 0, 0))
        x += xx
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_onewaygate_left, 0, 0))
        x -= xx
}
event_user(4)
event_user(8)
if (wings == 1 &amp;&amp; instance_exists(obj_mario))
{
    if (gravity == 0)
        wings_anim += 0.12
    else
        wings_anim += 0.18
}
if (gravity == 0)
{
    if (sprite_index == s_charginchuck_jump)
    {
        sprite_index = s_charginchuck_walk
        if (lookout == 0)
            image_speed = 0.15
        else
            image_speed = 0.3
    }
    if instance_exists(obj_mario)
    {
        if (lookout == 1)
        {
            if ((hspeed &lt; 0 &amp;&amp; obj_mario.x &gt; (x + 32)) || (hspeed &gt; 0 &amp;&amp; obj_mario.x &lt; (x - 32)))
            {
                sprite_index = s_charginchuck
                image_speed = 0.1
                hspeed = 0
                lookout = -1
                alarm[10] = 32
            }
        }
        else if (lookout == 0)
        {
            if (obj_mario.bbox_bottom &gt; (y - 16))
            {
                if ((hspeed &gt; 0 &amp;&amp; obj_mario.x &gt; x) || (hspeed &lt; 0 &amp;&amp; obj_mario.x &lt; x))
                {
                    if (wings == 1)
                        hspeed *= 2.5
                    else
                        hspeed *= 1.5
                    lookout = 1
                    alarm[1] = -1
                    image_speed = 0.3
                    if (gravity == 0)
                        sprite_index = s_charginchuck_walk
                }
            }
        }
    }
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle")
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed == 0)
{
    if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
        direct = -1
    else
        direct = 1
}
else
    direct = (1 * sign(hspeed))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(scr_snd_stomp())
audio_play_sound(scr_snd_stomp(), 0, false)
if (global.apariencia == 2)
{
    audio_stop_sound(snd_tread_boss)
    audio_play_sound(snd_tread_boss, 0, false)
}
if (wings == 1)
{
    with (instance_create((x + (9 * direct)), (y + 9), obj_wings_dead))
        direct = other.direct
    wings = 0
    exit
}
if (sprite_index != spr_SMB_charginchuck_damage &amp;&amp; sprite_index != spr_SMB3_charginchuck_damage &amp;&amp; sprite_index != spr_charginchuck_damage)
{
    if (hp &gt; 1)
    {
        if (firehp &lt;= 1)
        {
            with (instance_create((((bbox_left + bbox_right) / 2) - 8), y, obj_score))
                event_user(4)
            event_user(0)
        }
        else
        {
            sprite_index = s_charginchuck_damage
            image_speed = 0
            image_index = 0
            hp--
            firehp -= 2
            alarm[10] = -1
        }
    }
    else
    {
        with (instance_create((((bbox_left + bbox_right) / 2) - 8), y, obj_score))
            event_user(4)
        event_user(0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, y, obj_enemy_dead)
imdead.direct = direct
imdead.sprite_index = s_charginchuck_walk
imdead.image_speed = 0.3
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == s_charginchuck_damage)
{
    sprite_index = s_charginchuck
    image_speed = 0
    alarm[10] = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, round(x), y, direct, 1, 0, c_white, 1)
if (wings == 1)
    draw_sprite_ext(sprite_wings, wings_anim, (x - (12 * direct)), (y - 26), direct, 1, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-4,-16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
