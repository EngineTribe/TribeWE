<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_clown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>spr_clown_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.4
alarm[0] = 120
inmario = 0
v_duck_small = 0
switch global.apariencia
{
    case 0:
        s_clown = 538
        s_clown_eyes = 539
        s_clown_evil = 540
        s_clown_damage = 541
        break
    case 1:
        s_clown = 1347
        s_clown_eyes = 1348
        s_clown_evil = 1349
        s_clown_damage = 1350
        break
    case 2:
        s_clown = 2267
        s_clown_eyes = 2268
        s_clown_evil = 2269
        s_clown_damage = 2270
        break
    case 3:
        s_clown = 3671
        s_clown_eyes = 3672
        s_clown_evil = 3673
        s_clown_damage = 3674
        break
}

s_clown_bounce = 0
s_clown_evil_bounce = 0
inenemy = 0
enemyobject = 0
enablecontrol = 1
swimming = 0
modo_lava = 0
direct = -1
x_scale = 1
y_scale = 1
rotacion = 0
rot = 0
up = 0
rot_angle = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inmario = 0
audio_stop_sound(snd_NSMBU_clown_fly)
audio_stop_sound(snd_NSMBU_clown_charge_end)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inenemy == 2)
    inenemy = 0
else
    alarm[3] = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enablecontrol = 1
audio_stop_sound(scr_snd_clown_damage())
if (inenemy == 1)
    sprite_index = s_clown_evil
else
{
    sprite_index = s_clown
    alarm[0] = 30
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inmario = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index != s_clown_evil &amp;&amp; sprite_index != s_clown_bounce &amp;&amp; sprite_index != s_clown_evil_bounce &amp;&amp; sprite_index != s_clown_damage)
{
    if (sprite_index == s_clown)
    {
        sprite_index = s_clown_eyes
        alarm[0] = 10
    }
    else
    {
        sprite_index = s_clown
        alarm[0] = (120 + random(round(120)))
    }
}
else
    alarm[0] = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inmario == 1)
{
    if instance_exists(obj_mario)
    {
        if (global.jugador == 0)
            v_duck_small = (obj_mario.y + 12)
        else if (global.jugador == 1)
            v_duck_small = (obj_mario.y + 12)
        else if (global.jugador == 2)
            v_duck_small = (obj_mario.y + 12)
        else if (global.jugador == 3)
            v_duck_small = (obj_mario.y + 12)
        if (keyboard_check(global.abajo) &amp;&amp; (!keyboard_check(global.arriba)) &amp;&amp; global.apariencia == 2)
        {
            if (obj_mario.holding == 2)
            {
                obj_mario.sprite_index = scr_marioduckhold()
                if instance_exists(obj_helmet)
                {
                    if (global.powerup == 0)
                        obj_helmet.y = (v_duck_small - 2)
                    else
                        obj_helmet.y = (v_duck_small - 5)
                }
            }
            else
            {
                obj_mario.sprite_index = scr_marioduck()
                if instance_exists(obj_helmet)
                {
                    if (global.powerup == 0)
                        obj_helmet.y = v_duck_small
                    else
                        obj_helmet.y = (v_duck_small - 1)
                }
            }
        }
    }
}
if (rot == 1)
{
    if (up == 0)
    {
        if (rotacion &gt; (rot_angle - 16))
            rotacion -= 2
        else
            up = 1
    }
    if (up == 1)
    {
        if (rotacion &lt; (rot_angle + 16))
            rotacion += 2
        else
            up = 2
    }
    else if (up == 2)
    {
        if (rotacion &gt; rot_angle)
            rotacion -= 2
        else
        {
            up = 0
            rot = 0
        }
    }
}
else
    rotacion = rot_angle
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inmario == 1)
{
    if (global.powerup == -82)
    {
        inmario = 2
        hspeed = 0
        alarm[1] = 40
        with (obj_mario)
            inclown = 0
    }
    depth = -11
    if (sprite_index != s_clown_damage &amp;&amp; sprite_index != s_clown_evil &amp;&amp; sprite_index != s_clown_eyes)
        sprite_index = s_clown
    if (x &lt; (view_xview[0] + 16))
    {
        x = (view_xview[0] + 16)
        if (hspeed &lt; 0)
            hspeed = 0
    }
    else if (x &gt; ((view_xview[0] + view_wview[0]) - 16))
    {
        x = ((view_xview[0] + view_wview[0]) - 16)
        if (hspeed &gt; 0)
            hspeed = 0
    }
    if instance_exists(obj_mario)
    {
        with (obj_mario)
        {
            vspeed = 0
            hspeed = 0
            gravity = 0
            state = 0
            jumpnow = 0
            isup = 0
            isuphold = 0
        }
        obj_mario.x = x
        obj_mario.y = (y - 38)
        obj_mario.direct = direct
        if (keyboard_check(global.izquierda) &amp;&amp; (!keyboard_check(global.derecha)) &amp;&amp; enablecontrol == 1 &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bumper, 0, 0)))
        {
            hspeed -= 0.05
            if (hspeed &lt; -1)
                hspeed = -1
            gravity = 0
            direct = -1
        }
        else if (keyboard_check(global.derecha) &amp;&amp; (!keyboard_check(global.izquierda)) &amp;&amp; enablecontrol == 1 &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bumper, 0, 0)))
        {
            hspeed += 0.05
            if (hspeed &gt; 1)
                hspeed = 1
            gravity = 0
            direct = 1
        }
        else if (sprite_index != s_clown_damage)
        {
            if (hspeed &gt; 0)
                hspeed -= 0.05
            else if (hspeed &lt; 0)
                hspeed += 0.05
            if (abs(hspeed) &lt; 0.05)
                hspeed = 0
        }
        if (keyboard_check(global.arriba) &amp;&amp; (!keyboard_check(global.abajo)) &amp;&amp; enablecontrol == 1)
        {
            vspeed -= 0.05
            if (vspeed &lt; -1)
                vspeed = -1
        }
        else if (keyboard_check(global.abajo) &amp;&amp; (!keyboard_check(global.arriba)) &amp;&amp; enablecontrol == 1 &amp;&amp; gravity != 0 &amp;&amp; vspeed != 0)
        {
            vspeed += 0.05
            if (vspeed &gt; 1)
                vspeed = 1
        }
        if (keyboard_check_pressed(global.saltar) || (keyboard_check_pressed(global.saltar_spin) &amp;&amp; global.apariencia != 2))
        {
            inmario = 2
            hspeed = 0
            alarm[1] = 40
            with (obj_mario)
            {
                if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (instance_exists(obj_lava_water) &amp;&amp; (y + 16) &gt; obj_lava_water.y &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0))
                    vspeed = -2
                else
                    vspeed = -3.75
                audio_play_sound(scr_jump(), 0, false)
                jumpnow = 1
                state = 2
                inclown = 0
            }
        }
        else if (keyboard_check_pressed(global.saltar_spin) &amp;&amp; (global.apariencia == 2 || global.apariencia == 3))
        {
            inmario = 2
            hspeed = 0
            alarm[1] = 40
            with (obj_mario)
            {
                if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (instance_exists(obj_lava_water) &amp;&amp; (y + 16) &gt; obj_lava_water.y &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0))
                    vspeed = -2
                else
                    vspeed = -3
                audio_play_sound(snd_spin, 0, false)
                jumpnow = 1
                state = 2
                isduck = 0
                isduckhold = 0
                y--
                stompstyle = 1
                inclown = 0
            }
        }
    }
    else
    {
        inmario = 0
        inenemy = 0
        enemyobject = obj_lighting
        enablecontrol = 1
    }
    if (instance_exists(obj_levelmanager) &amp;&amp; obj_levelmanager.camlock == 1)
    {
        if (y &lt; (view_yview[0] + 22))
            y = (view_yview[0] + 22)
    }
}
else if (inenemy == 1)
{
    if instance_exists(obj_mario)
    {
        if (collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 1), obj_mario, 0, 0) &amp;&amp; obj_mario.state == 2 &amp;&amp; obj_mario.vspeed &lt; 0)
        {
            audio_stop_sound(snd_stomp)
            audio_play_sound(snd_stomp, 0, false)
            vspeed = -2
        }
    }
    if (sprite_index != s_clown_damage)
        sprite_index = s_clown_evil
    depth = -4
    if instance_exists(enemyobject)
    {
        with (enemyobject)
        {
            vspeed = 0
            hspeed = 0
            gravity = 0
            depth = (other.depth + 1)
        }
        enemyobject.x = x
        if (enemyobject.object_index != obj_jumppiranha &amp;&amp; enemyobject.object_index != obj_thwomp &amp;&amp; enemyobject.object_index != obj_mushroom &amp;&amp; enemyobject.object_index != obj_fireflower &amp;&amp; enemyobject.object_index != obj_blooper &amp;&amp; enemyobject.object_index != obj_cap &amp;&amp; enemyobject.object_index != obj_star)
            enemyobject.direct = direct
        if (enemyobject.object_index == obj_brohammer || enemyobject.object_index == obj_sledgebro)
            enemyobject.y = (y - 19)
        else if (enemyobject.object_index == obj_koopa || enemyobject.object_index == obj_koopa_red)
            enemyobject.y = (y - 23)
        else if (enemyobject.object_index == obj_shell_held || enemyobject.object_index == obj_shell)
        {
            enemyobject.image_speed = 0
            enemyobject.image_index = 0
            enemyobject.y = (y - 23)
            enemyobject.x = (x - 8)
        }
        else if (enemyobject.object_index == obj_pswitch)
        {
            enemyobject.image_speed = 0
            enemyobject.image_index = 0
            enemyobject.y = (y - 26)
            enemyobject.x = (x - 8)
        }
        else if (enemyobject.object_index == obj_mushroom || enemyobject.object_index == obj_blooper || enemyobject.object_index == obj_fireflower || enemyobject.object_index == obj_cap || enemyobject.object_index == obj_star)
        {
            enemyobject.y = (y - 23)
            enemyobject.x = (x - 8)
        }
        else if (enemyobject.object_index == obj_boo)
            enemyobject.y = (y - 15)
        else if (enemyobject.object_index == obj_thwomp || enemyobject.object_index == obj_boomboom)
            enemyobject.y = (y - 16)
        else
            enemyobject.y = (y - 23)
        if instance_exists(obj_mario)
        {
            if (obj_mario.x &gt; (x + 8) &amp;&amp; enablecontrol == 1)
            {
                hspeed = 0.7
                direct = 1
            }
            else if (obj_mario.x &lt; (x - 8) &amp;&amp; enablecontrol == 1)
            {
                hspeed = -0.7
                direct = -1
            }
            if (obj_mario.y &gt; (y - 8) &amp;&amp; enablecontrol == 1)
                vspeed = 0.7
            else if (obj_mario.y &lt; y &amp;&amp; enablecontrol == 1)
                vspeed = -0.7
        }
    }
    else
    {
        hspeed = 0
        inenemy = 2
        enemyobject = obj_lighting
        alarm[3] = 60
    }
}
else
{
    if (object_index == obj_clown_fire)
    {
        carga = 0
        audio_charge = 0
        audio_stop_sound(scr_snd_clown_fire_charge())
        audio_stop_sound(snd_NSMBU_clown_charge_end)
    }
    audio_stop_sound(snd_NSMBU_clown_fly)
    depth = 0
    if (sprite_index != s_clown_damage)
    {
        if (sprite_index != s_clown_eyes)
            sprite_index = s_clown
        if (hspeed &gt; 0)
            hspeed -= 0.05
        if (hspeed &lt; 0)
            hspeed += 0.05
        if (abs(hspeed) &lt; 0.05)
            hspeed = 0
    }
}
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_clown">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_levelmanager.editor == 0)
{
    audio_stop_sound(snd_stomp)
    audio_play_sound(snd_stomp, 0, false)
    if (rot == 0)
        rot = 1
    hspeed = lengthdir_x(3, point_direction(other.x, other.y, x, y))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_holdparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powerupparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pinchos">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_levelmanager.editor == 0)
{
    audio_stop_sound(scr_snd_clown_damage())
    audio_play_sound(scr_snd_clown_damage(), 0, false)
    enablecontrol = 0
    alarm[2] = 180
    alarm[0] = -1
    sprite_index = s_clown_damage
    if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
    {
        hspeed = 1
        vspeed = -1
    }
    else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
    {
        hspeed = -1
        vspeed = -1
    }
    else if ((other.bbox_bottom + (bbox_top / 2)) &lt; (bbox_bottom + (bbox_top / 2)))
    {
        hspeed = 1
        vspeed = -1
    }
    else if ((other.bbox_bottom + (bbox_top / 2)) &gt; (bbox_bottom + (bbox_top / 2)))
    {
        hspeed = -1
        vspeed = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boomboom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_levelmanager.editor == 0)
{
    if (inmario == 1)
    {
        audio_stop_sound(snd_stomp)
        audio_play_sound(snd_stomp, 0, false)
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            hspeed = 1.5
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            hspeed = -1.5
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inenemy == 1)
{
    audio_stop_sound(snd_stomp)
    audio_play_sound(snd_stomp, 0, false)
    enablecontrol = 0
    if (sprite_index != s_clown_damage)
        alarm[2] = 30
    other.hspeed = lengthdir_x(1, point_direction(x, y, other.x, other.y))
}
else if ((inmario == 0 &amp;&amp; (!instance_exists(obj_kuribo_drybones))) || (inmario == 0 &amp;&amp; instance_exists(obj_kuribo_drybones) &amp;&amp; obj_kuribo_drybones.gran_golpe == 0))
{
    if (other.bbox_bottom &lt; ((bbox_top - vspeed) + 5) &amp;&amp; other.vspeed &gt; 0 &amp;&amp; other.state == 2 &amp;&amp; global.powerup != -82)
    {
        other.inclown = 1
        inmario = 1
        if (global.apariencia == 3)
        {
            audio_play_sound(snd_add_wings, 0, false)
            audio_play_sound(snd_NSMBU_clown_fly, 1, true)
        }
        else
            audio_play_sound(snd_clown_in, 0, false)
        alarm[0] = 30
        with (other.id)
        {
            gravity = 0
            stompstyle = 0
            isduck = 0
            isduckhold = 0
            isup = 0
            isuphold = 0
            groundpount = 0
            event_user(15)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom, col_bbox;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_height - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_height - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        if ((!collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_solid, 1, 0)) &amp;&amp; (!collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_physicssolid, 1, 0)) &amp;&amp; (!collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_bullebill_base, 1, 0)) &amp;&amp; (!collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)))
        {
            vspeed = -0.5
            if (global.apariencia == 3)
            {
                audio_stop_sound(spr_NSMBU_clown_bounce)
                audio_play_sound(spr_NSMBU_clown_bounce, 0, false)
            }
        }
        else
            vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
    }
}
else
{
    gravity = 0.02
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if (vspeed &lt; 0)
{
    if (inmario == 0)
    {
        if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_hurtsolid2, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
        {
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
                y++
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_hurtsolid2, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_hurtsolid2)))
                y++
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
                y++
            col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
            if col_one_bottom
            {
                with (col_one_bottom)
                {
                    rot = 1
                    event_user(0)
                }
            }
            vspeed = 0
        }
    }
    else
    {
        if (global.powerup == 0)
            col_bbox = 10
        else
            col_bbox = 16
        if (collision_rectangle(bbox_left, (bbox_top - col_bbox), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - col_bbox), bbox_right, bbox_top, obj_hurtsolid2, 1, 0) || collision_rectangle(bbox_left, (bbox_top - col_bbox), bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, (bbox_top - col_bbox), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - col_bbox), bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
        {
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
                y++
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_hurtsolid2, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_hurtsolid2)))
                y++
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
                y++
            col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
            if col_one_bottom
            {
                with (col_one_bottom)
                {
                    rot = 1
                    event_user(0)
                }
            }
            vspeed = 0
        }
    }
}
if (bbox_top &gt; (room_height + 46) || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 32) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1))))
    instance_destroy()
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    hspeed = (-hspeed)
    enablecontrol = 0
    if (sprite_index != s_clown_damage)
        alarm[2] = 15
    if ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
    {
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
            x--
    }
    if ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
    {
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
            x++
    }
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, y, obj_enemy_dead)
imdead.girar = 1
imdead.sprite_index = s_clown
imdead.image_speed = 0
imdead.image_index = 0
imdead.direct = direct
if (other.hspeed == 0)
{
    if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = 1
    else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = -1
}
else if (other.hspeed &gt; 0)
    imdead.hspeed = 1
else if (other.hspeed &lt; 0)
    imdead.hspeed = -1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, (x_scale * direct), y_scale, rotacion, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
