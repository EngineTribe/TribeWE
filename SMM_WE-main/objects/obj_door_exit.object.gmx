<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        sprite_index = spr_SMB_door
        break
    case 1:
        sprite_index = spr_SMB3_door
        break
    case 2:
        sprite_index = spr_door
        break
    case 3:
        sprite_index = spr_NSMBU_door
        break
}

image_speed = 0
image_index = 0
returndoor = 0
back = -4
get = 0
time_blow = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>get = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(returndoor)
{
    with (returndoor)
    {
        image_index = 0
        switch global.apariencia
        {
            case 0:
                sprite_index = spr_SMB_door_close
                break
            case 1:
                sprite_index = spr_SMB3_door_close
                break
            case 2:
                sprite_index = spr_door_close
                break
            case 3:
                sprite_index = spr_NSMBU_door_close
                break
        }

        image_speed = 0.12
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_doormario)
{
    if instance_exists(obj_levelmanager)
    {
        with (obj_levelmanager)
            alarm[2] = other.time_blow
    }
    with (returndoor)
    {
        get = 1
        alarm[3] = 40
    }
    with (instance_create((returndoor.x + 8), returndoor.y, obj_curtainin))
        fallow = 1
    if instance_exists(obj_autoscroll)
    {
        with (obj_autoscroll)
        {
            if (other.returndoor.x &lt; 192)
                x = 192
            else
                x = other.returndoor.x
            hspeed = velocidad
        }
    }
    image_index = 0
    image_speed = 0
    with (instance_create((returndoor.x + 8), (returndoor.y - 16), obj_doormario_exit))
    {
        direct = 1
        helmet = obj_doormario.helmet
        holding = obj_doormario.holding
        myitem = obj_doormario.myitem
    }
    with (obj_levelmanager)
    {
        barrier = 1
        alarm[6] = 2
    }
    if instance_exists(obj_doormario)
    {
        with (obj_doormario)
            instance_destroy()
    }
    with (obj_persistent)
        event_user(0)
    alarm[1] = 15
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(global.arriba) &amp;&amp; place_meeting(x, y, obj_mario) &amp;&amp; get == 0 &amp;&amp; obj_mario.state &lt; 2 &amp;&amp; obj_mario.inclown == 0 &amp;&amp; visible == true &amp;&amp; y &gt; (obj_mario.y + 10) &amp;&amp; y &lt; (obj_mario.y + 17) &amp;&amp; obj_mario.x &gt;= x &amp;&amp; obj_mario.x &lt;= (x + 16))
{
    if instance_exists(obj_levelmanager)
    {
        time_blow = obj_levelmanager.alarm[2]
        with (obj_levelmanager)
            alarm[2] = 0
    }
    audio_play_sound(scr_snd_door_open(), 0, false)
    image_index = 0
    image_speed = 0.12
    with (instance_create(obj_mario.x, (y - 16), obj_doormario))
    {
        direct = obj_mario.direct
        snow = obj_mario.snow
        helmet = obj_mario.helmet
        holding = obj_mario.holding
    }
    obj_mario.visible = false
    with (obj_mario)
        instance_destroy()
    if instance_exists(obj_autoscroll)
    {
        with (obj_autoscroll)
            hspeed = 0
    }
    alarm[0] = 55
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_door || sprite_index == spr_SMB3_door || sprite_index == spr_SMB_door || sprite_index == spr_NSMBU_door)
{
    image_speed = 0
    image_index = 2
}
else if (sprite_index == spr_door_close || sprite_index == spr_SMB3_door_close || sprite_index == spr_SMB_door_close || sprite_index == spr_NSMBU_door_close)
{
    switch global.apariencia
    {
        case 0:
            sprite_index = spr_SMB_door
            break
        case 1:
            sprite_index = spr_SMB3_door
            break
        case 2:
            sprite_index = spr_door
            break
        case 3:
            sprite_index = spr_NSMBU_door
            break
    }

    image_speed = 0
    image_index = 0
    audio_play_sound(scr_snd_door_close(), 0, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, image_index, x, y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
