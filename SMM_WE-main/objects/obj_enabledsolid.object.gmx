<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_square</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pblock;
pblock = collision_rectangle((bbox_right - 3), (bbox_top + 3), (bbox_left + 3), (bbox_bottom - 3), obj_mario, 1, 0)
if pblock
{
    with (obj_mario)
    {
        speed = 0
        gravity = 0
        isduck = 1
        jumpnow = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_enemy, col_enemy_held, col_physolid, col_bosses, col_clown, col_bullet, col_powerup, col_held;
col_enemy = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_enemyparent, 0, 0)
col_enemy_held = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_enemyparent_held, 0, 0)
col_physolid = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_physicssolid, 0, 0)
col_bosses = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_bossparent, 0, 0)
col_clown = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_clown, 0, 0)
col_bullet = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_bullebill_base, 0, 0)
col_powerup = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_powerupparent, 0, 0)
col_held = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_holdparent, 0, 0)
if (col_enemy &amp;&amp; place_meeting(x, y, obj_enemyparent))
{
    if (col_enemy.object_index != obj_grinder &amp;&amp; col_enemy.object_index != obj_podoboo &amp;&amp; col_enemy.object_index != obj_boo &amp;&amp; col_enemy.object_index != obj_banzaibill &amp;&amp; col_enemy.object_index != obj_bulletbill &amp;&amp; col_enemy.object_index != obj_cannonball &amp;&amp; col_enemy.object_index != obj_cannonball_red &amp;&amp; col_enemy.object_index != obj_cheepcheep)
    {
        if (col_enemy.object_index == obj_bobomb || col_enemy.object_index == obj_bobomb_ready)
        {
            with (col_enemy)
            {
                instance_create(x, y, obj_explosion)
                instance_destroy()
            }
        }
        else
        {
            with (col_enemy)
                event_user(0)
        }
    }
}
if (col_enemy_held &amp;&amp; col_enemy_held.held == 0 &amp;&amp; place_meeting(x, y, obj_enemyparent_held))
{
    if (col_enemy_held.object_index == obj_bobomb_hold)
    {
        with (col_enemy_held)
        {
            instance_create(x, y, obj_explosion)
            instance_destroy()
        }
    }
    else
    {
        with (col_enemy_held)
            event_user(0)
    }
}
if (col_physolid &amp;&amp; place_meeting(x, y, obj_muncher))
{
    with (col_physolid)
        event_user(0)
}
if (col_bosses &amp;&amp; place_meeting(x, y, obj_bossparent))
{
    with (col_bosses)
        event_user(0)
}
if (col_clown &amp;&amp; place_meeting(x, y, obj_clown))
{
    with (col_clown)
        event_user(0)
}
if (col_bullet &amp;&amp; place_meeting(x, y, obj_bullebill_base))
{
    with (col_bullet)
        event_user(0)
}
if (col_powerup &amp;&amp; place_meeting(x, y, obj_powerupparent))
{
    with (col_powerup)
    {
        instance_create(x, y, obj_smoke)
        instance_destroy()
    }
}
if (col_held &amp;&amp; place_meeting(x, y, obj_holdparent))
{
    with (col_held)
    {
        instance_create(x, y, obj_smoke)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>1,1</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
