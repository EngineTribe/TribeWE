<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_frozenblock_24x24</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent_held</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
image_speed = 0
image_index = 0
sprite = -4
index = 0
pos_y = 2
direct = 1
enemy = -4
shake = 0
vel = 0
enable_gravity = 1
rotacion = 0
breaker = 0
mytop = instance_create(x, y, obj_solidphy)
mytop.image_xscale = (sprite_width / 16)
alarm[7] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mytop != obj_lighting &amp;&amp; instance_exists(mytop))
{
    with (mytop)
        instance_destroy()
}
if (held == 1)
{
    with (obj_mario)
    {
        holding = 0
        isduckhold = 0
    }
    with (obj_player_warp)
        holding = 0
    with (obj_doormario)
        holding = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (held == 0)
{
    if (place_meeting(x, y, obj_solid) || place_meeting(x, y, obj_physicssolid))
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enable_gravity = 1
breaker = 1
alarm[4] = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (swimming == 1)
    exit
if instance_exists(obj_player_warp)
    alarm[5] = 240
else
{
    audio_stop_sound(snd_NSMBU_estalactita_break)
    audio_play_sound(snd_NSMBU_estalactita_break, 0, false)
    with (instance_create(other.x, other.y, obj_smoke))
    {
        sprite_index = spr_NSMBU_smoke_foo
        image_speed = 0.5
    }
    with (instance_create((x + 6), (y + 8), obj_shard))
    {
        motion_set(45, 4)
        sprite_index = spr_frozenblock_break
        image_index = 0
        dir = 1
    }
    with (instance_create((x + 6), y, obj_shard))
    {
        motion_set(60, 4)
        sprite_index = spr_frozenblock_break
        image_index = 1
        dir = 1
    }
    with (instance_create((x - 6), y, obj_shard))
    {
        motion_set(120, 4)
        sprite_index = spr_frozenblock_break
        image_index = 2
        dir = 0
    }
    with (instance_create((x - 6), (y + 8), obj_shard))
    {
        motion_set(135, 4)
        sprite_index = spr_frozenblock_break
        image_index = 3
        dir = 0
    }
    if (enemy == obj_shell_held)
    {
        object = instance_create(x, (y - 2), obj_shell)
        object.direct = direct
        object.sprite_index = sprite
    }
    else
    {
        object = instance_create(x, (y - 2), enemy)
        object.direct = direct
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (swimming == 0)
{
    if (shake == 0)
    {
        x++
        shake = 1
    }
    else
    {
        x--
        shake = 0
    }
    alarm[4] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mytop != obj_lighting &amp;&amp; instance_exists(mytop) &amp;&amp; instance_exists(obj_mario))
{
    mytop.x = (x - bbox_left)
    mytop.y = (y - bbox_top)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_estalactita, col_mario_left, col_mario_right, col_shell2;
if (collision_rectangle(bbox_left, (bbox_top - 6), bbox_right, (bbox_top + 6), obj_mario, 0, 0) &amp;&amp; inmune == 0 &amp;&amp; vspeed &gt; 0 &amp;&amp; obj_mario.state &lt; 2 &amp;&amp; gravity != 0)
{
    obj_mario.x += hspeed
    obj_mario.y = ceil((bbox_top - (31 - vspeed)))
    obj_mario.gravity = 0
    obj_mario.vspeed = 0
    with (obj_mario)
        event_user(15)
}
col_estalactita = collision_rectangle(bbox_left, (bbox_top - 6), bbox_right, bbox_top, obj_icicle, 1, 0)
if (col_estalactita &amp;&amp; col_estalactita.vspeed &gt; 0 &amp;&amp; held == 0)
{
    event_user(0)
    with (col_estalactita)
        event_user(0)
}
if (held == 0)
{
    col_mario_left = collision_rectangle((bbox_left - 6), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_mario, 0, 0)
    col_mario_right = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 6), (bbox_bottom - 4), obj_mario, 0, 0)
    if (instance_exists(obj_mario) &amp;&amp; ((col_mario_left &amp;&amp; obj_mario.direct == 1) || (col_mario_right &amp;&amp; obj_mario.direct == -1)) &amp;&amp; scr_canhold() &amp;&amp; inmune == 0)
    {
        if (mytop != obj_lighting &amp;&amp; instance_exists(mytop))
        {
            with (mytop)
                instance_destroy()
            mytop = obj_lighting
        }
        obj_mario.holding = 2
        audio_play_sound(choose(475, 476), 0, false)
        with (other.id)
        {
            triple_jump = 0
            triple_count = 0
        }
        held = 1
        depth = -7
        gravity = 0
        speed = 0
        enable_gravity = 1
        alarm[4] = -1
        alarm[5] = -1
        alarm[6] = -1
    }
    if (global.bg_level == "underwater" || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0))
        swimming = 1
    else
        swimming = 0
    if instance_exists(obj_mario)
    {
        if (inwall == 0)
        {
            col_shell2 = collision_rectangle((bbox_left - 1), (bbox_top + 2), (bbox_right + 1), (bbox_bottom - 2), obj_shell_held, 0, 0)
            if (col_shell2 &amp;&amp; col_shell2.bbox_bottom &gt; (bbox_top + 5))
                event_user(0)
            if (enable_gravity == 1)
            {
                event_user(3)
                event_user(4)
            }
            if (gravity == 0)
            {
                if (swimming == 0)
                {
                    if (abs(hspeed) &gt;= 2)
                    {
                        if (hspeed &gt; 0)
                        {
                            if (hspeed &gt; 3)
                                hspeed = 3
                            else
                                hspeed += 0.1
                        }
                        else if (hspeed &lt; 0)
                        {
                            if (hspeed &lt; -3)
                                hspeed = -3
                            else
                                hspeed -= 0.1
                        }
                    }
                    else
                    {
                        hspeed = (max(0, (abs(hspeed) - 0.145)) * sign(hspeed))
                        if (abs(hspeed) &lt; 0.145)
                            hspeed = 0
                    }
                }
                else if (swimming == 1)
                {
                    hspeed = (max(0, (abs(hspeed) - 0.145)) * sign(hspeed))
                    if (abs(hspeed) &lt; 0.145)
                        hspeed = 0
                }
            }
        }
        else
        {
            gravity /= 2
            if (vspeed &gt; 1)
                vspeed = 1
            hspeed = 0
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
                x++
            if (!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_solid, 0, 0))
                inwall = 0
        }
    }
    else
    {
        event_user(3)
        event_user(4)
    }
    if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle" &amp;&amp; modo_lava == 0)
    {
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
        event_user(0)
    }
    else if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1 &amp;&amp; modo_lava == 0)
    {
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
        event_user(0)
    }
    else if (y &gt; room_height &amp;&amp; held == 0)
        instance_destroy()
    if (instance_exists(obj_lava_water) &amp;&amp; y &lt;= (obj_lava_water.y - 12) &amp;&amp; swimming == 1)
    {
        y = (obj_lava_water.y - 12)
        vspeed = 0
    }
    else if (swimming == 1)
    {
        if (vspeed &lt;= -0.4)
            vspeed = -0.4
        else
            vspeed -= 0.04
    }
}
else if (mytop != obj_lighting &amp;&amp; instance_exists(mytop))
{
    with (mytop)
        instance_destroy()
    mytop = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom, block;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_height - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_height - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0)) || collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0)))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        if (breaker == 1)
            event_user(0)
        bouncy = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
    }
}
else if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.03)
        vspeed = 0.03
}
else if (!swimming)
{
    gravity = 0.15
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.02
    if (vspeed &gt; 1)
        vspeed = 1
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_hurtsolid2, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_hurtsolid2)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        block = collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, (bbox_top - 1), obj_blockparent, 0, 0)
        if (block &amp;&amp; (object_get_parent(object_index) == 195 || object_get_parent(object_index) == 197))
        {
            if (block.ready == 0)
            {
                with (block)
                    event_user(2)
            }
        }
        event_user(0)
    }
}
if ((bbox_top - 16) &gt; room_height || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 32) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1))))
    instance_destroy()
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_hurtsolid2, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_hurtsolid2, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_NSMBU_estalactita_break)
audio_play_sound(snd_NSMBU_estalactita_break, 0, false)
with (instance_create((x + 6), (y + 8), obj_shard))
{
    motion_set(45, 4)
    sprite_index = spr_frozenblock_break
    image_index = 0
    dir = 1
}
with (instance_create((x + 6), y, obj_shard))
{
    motion_set(60, 4)
    sprite_index = spr_frozenblock_break
    image_index = 1
    dir = 1
}
with (instance_create((x - 6), y, obj_shard))
{
    motion_set(120, 4)
    sprite_index = spr_frozenblock_break
    image_index = 2
    dir = 0
}
with (instance_create((x - 6), (y + 8), obj_shard))
{
    motion_set(135, 4)
    sprite_index = spr_frozenblock_break
    image_index = 3
    dir = 0
}
object = instance_create(x, (y + 8), enemy)
with (object)
{
    visible = false
    if (object_index == obj_shell || object_index == obj_shell_held)
        sprite_index = other.sprite
    stomp = -1
    event_user(0)
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, round(x), y, 1, 1, 0, c_white, 1)
draw_sprite_ext(sprite, index, round(x), (y - pos_y), direct, 1, rotacion, c_white, 1)
draw_sprite_ext(sprite_index, image_index, round(x), y, 1, 1, 0, c_white, 0.3)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
