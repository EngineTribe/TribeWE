<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hammerbro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        s_hammerbro = 428
        s_hammerbro_jump = 1227
        s_hammerbro_throw = 429
        sprite_wings = 391
        break
    case 1:
        s_hammerbro = 1226
        s_hammerbro_jump = 1227
        s_hammerbro_throw = 1228
        sprite_wings = 1179
        break
    case 2:
        s_hammerbro = 2053
        s_hammerbro_jump = 2054
        s_hammerbro_throw = 2055
        sprite_wings = 2042
        break
    case 3:
        s_hammerbro = 3535
        sprite_index = spr_NSMBU_hammerbro
        s_hammerbro_jump = 3537
        s_hammerbro_throw = 3536
        sprite_wings = 3479
}

hardness = 0
stomp = 0
edible = 0
wings = 0
wings_anim = 0
paracaidas = 0
apilar = 0
dead_h = 0
innave = 0
direct = 1
prev_hspeed = 0
swimming = 0
jump_high = -6
throughsolid = 0
jump_start = y
hammers = (1 + random(round(3)))
throw = 0
throw_lanzar = 0
alarm[10] = 2
if (global.apariencia == 3)
{
    image_speed = 0.5
    alarm[7] = 360
}
else
{
    image_speed = 0.125
    alarm[1] = 360
}
alarm[2] = 17
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1)
{
    with (instance_create((x - (9 * direct)), (y + 9), obj_wings_dead))
        direct = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed == 0)
{
    if (paracaidas == 1)
        hspeed = -0.5
    else if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
    {
        if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
            hspeed = -0.3
        else
            hspeed = -0.4
    }
    else if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
        hspeed = 0.3
    else
        hspeed = 0.4
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_NSMBU_hammerbro_throw)
{
    alarm[7] = 5
    exit
}
sprite_index = spr_NSMBU_hammerbro_jump
image_index = 0
image_speed = 0.5
if (hspeed != 0)
    prev_hspeed = hspeed
hspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throw = 0
hspeed = prev_hspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throughsolid = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throughsolid = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 3)
{
    audio_stop_sound(snd_NSMBU_hammer_throw)
    audio_play_sound(snd_NSMBU_hammer_throw, 0, false)
}
if instance_exists(obj_mario)
{
    if (obj_mario.x &gt; x)
    {
        with (instance_create((x - 5), (y - 8), obj_brohammer))
        {
            hspeed = 1.5
            direct = 1
        }
    }
    else if (obj_mario.x &lt; x)
    {
        with (instance_create((x + 5), (y - 8), obj_brohammer))
        {
            hspeed = -1.5
            direct = -1
        }
    }
}
else
{
    with (instance_create((x + 5), (y - 8), obj_brohammer))
    {
        hspeed = -1.5
        direct = -1
    }
}
throw = 2
if (global.apariencia != 3)
    alarm[6] = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_NSMBU_hammerbro_jump)
{
    alarm[2] = 5
    exit
}
if (hammers &gt; 0)
{
    throw = 1
    hammers--
    prev_hspeed = hspeed
    hspeed = 0
    if (global.apariencia == 3)
    {
        sprite_index = spr_NSMBU_hammerbro_throw
        image_index = 0
        image_speed = 0.5
    }
    else
    {
        alarm[3] = 10
        alarm[2] = 20
    }
}
else
{
    throw = 0
    hammers = (0 + random(round(3)))
    hspeed = prev_hspeed
    if (global.apariencia == 3)
        alarm[2] = 120
    else
        alarm[2] = 80
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0)
{
    if (wings == 1)
    {
        altura_max = (-(8 - (4 * swimming)))
        altura_min = (-(4.5 - (3 * swimming)))
    }
    else
    {
        altura_max = (-(6.19 - (3 * swimming)))
        altura_min = (-(2.5 - (1 * swimming)))
    }
    if (collision_rectangle(bbox_left, (bbox_top - 40), bbox_right, (bbox_top - 40), obj_blockparent, 0, 0) &amp;&amp; collision_rectangle(bbox_left, (bbox_bottom + 8), bbox_right, (bbox_bottom + 8), obj_blockparent, 0, 0))
    {
        if ((!place_meeting(x, (y + 32), obj_solidtop)) &amp;&amp; (!place_meeting(x, (y + 48), obj_solidtop)) &amp;&amp; (!place_meeting(x, (y + 64), obj_solidtop)) &amp;&amp; (!place_meeting(x, (y + 80), obj_solidtop)) &amp;&amp; (!place_meeting(x, (y + 112), obj_solidtop)) &amp;&amp; (!place_meeting(x, (y + 128), obj_solidtop)))
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
        else if (floor(random(50)) &lt; 25 &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
        else if ((y + 16) &lt; room_height &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
        {
            vspeed = altura_min
            alarm[4] = 2
            alarm[5] = 35
        }
        else
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
    }
    else if (collision_rectangle(bbox_left, (bbox_top - 40), bbox_right, (bbox_top - 40), obj_blockparent, 0, 0) &amp;&amp; (y + 16) &lt; room_height &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
    {
        vspeed = altura_max
        alarm[4] = 2
        alarm[5] = 16
    }
    else if (collision_rectangle(bbox_left, (bbox_bottom + 8), bbox_right, (bbox_bottom + 8), obj_blockparent, 0, 0) &amp;&amp; (y + 16) &lt; room_height &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
    {
        vspeed = altura_min
        alarm[4] = 2
        alarm[5] = 35
    }
    else
    {
        vspeed = altura_max
        alarm[4] = 2
        alarm[5] = 35
    }
    y--
    if (swimming == 1)
        gravity = 0.2
    else
        gravity = 0.25
    if (global.apariencia == 3)
        alarm[7] = 360
    else
        alarm[1] = 360
}
else
    alarm[1] = 360
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 3)
    exit
if (!instance_exists(obj_deadmario))
{
    if (gravity &gt; 0)
    {
        if throw
        {
            sprite_index = s_hammerbro_throw
            image_speed = 0
            image_index = (throw - 1)
        }
        else if (throw == 0 &amp;&amp; global.apariencia == 2)
        {
            sprite_index = s_hammerbro_jump
            image_speed = 0
        }
        else
        {
            sprite_index = s_hammerbro
            image_speed = 0.125
        }
    }
    else
    {
        image_speed = 0.125
        if (throw == 0)
            sprite_index = s_hammerbro
        else if throw
        {
            sprite_index = s_hammerbro_throw
            image_index = (throw - 1)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid;
if (global.apariencia == 3)
{
    if (sprite_index == spr_NSMBU_hammerbro_throw)
    {
        if (image_index &gt;= 17 &amp;&amp; image_index &lt; 17.5)
            alarm[3] = 1
    }
    else if (sprite_index == spr_NSMBU_hammerbro_jump)
    {
        if (image_index &gt;= 7 &amp;&amp; image_index &lt; 7.5)
            alarm[1] = 1
        else if (image_index &gt;= 17 &amp;&amp; vspeed != 0 &amp;&amp; image_speed != 0)
        {
            image_speed = 0
            image_index = 17
        }
        else if (vspeed == 0 &amp;&amp; image_index &gt; 7.5)
        {
            if (image_index &lt;= 17)
            {
                image_index = 18
                image_speed = 0.5
            }
        }
        else if (vspeed &lt; 0 &amp;&amp; image_index &gt; 7.5)
        {
            sprite_index = spr_NSMBU_hammerbro
            image_speed = 0.5
            hspeed = prev_hspeed
        }
    }
}
if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt; obj_lava_water.y &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
    swimming = 1
else
    swimming = 0
if (vspeed == 0 &amp;&amp; hspeed &lt;= 0 &amp;&amp; x &lt;= (xstart - 16) &amp;&amp; paracaidas == 0)
{
    if (swimming == 1)
        hspeed = 0.2
    else
        hspeed = 0.4
}
else if (vspeed == 0 &amp;&amp; hspeed &gt;= 0 &amp;&amp; x &gt;= (xstart + 16) &amp;&amp; paracaidas == 0)
{
    if (swimming == 1)
        hspeed = -0.2
    else
        hspeed = -0.4
}
if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1))
{
    if (hspeed &gt; 0.3)
    {
        hspeed -= 0.08
        if (hspeed &lt;= 0.3)
            hspeed = 0.3
    }
    else if (hspeed &lt; -0.3)
    {
        hspeed += 0.08
        if (hspeed &gt;= -0.3)
            hspeed = -0.3
    }
}
else if (hspeed &gt; 0.4)
{
    hspeed -= 0.08
    if (hspeed &lt;= 0.4)
        hspeed = 0.4
}
else if (hspeed &lt; -0.4)
{
    hspeed += 0.08
    if (hspeed &gt;= -0.4)
        hspeed = -0.4
}
if (throughsolid == 0)
{
    event_user(3)
    event_user(4)
}
else
{
    if (swimming == 1)
    {
        gravity = 0.15
        if (vspeed &gt; 1)
        {
            vspeed = 1
            gravity = 0
        }
    }
    else
    {
        gravity = 0.25
        if (vspeed &gt; 4)
        {
            vspeed = 4
            gravity = 0
        }
    }
    if (throughsolid == 2 &amp;&amp; vspeed &gt; 0)
    {
        semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, ((bbox_bottom + 1) + vspeed), obj_solidtop, 0, 0)
        physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, ((bbox_bottom + 1) + vspeed), obj_physicssolid, 0, 0)
        if ((semisolid &amp;&amp; (!place_meeting(semisolid.x, (semisolid.y - 16), obj_solid)) &amp;&amp; (!place_meeting(semisolid.x, (semisolid.y - 16), obj_physicssolid))) || (physolid &amp;&amp; (!place_meeting(physolid.x, (physolid.y - 16), obj_solid)) &amp;&amp; (!place_meeting(physolid.x, (physolid.y - 16), obj_physicssolid))))
        {
            throughsolid = 0
            vspeed = 0
        }
    }
}
if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
    direct = -1
else
    direct = 1
if (wings == 1 &amp;&amp; instance_exists(obj_mario))
{
    if (global.apariencia == 3)
    {
        if (gravity &gt; 0)
            wings_anim += 1
        else
            wings_anim += 0.5
    }
    else if (gravity &gt; 0)
        wings_anim += 0.18
    else
        wings_anim += 0.12
}
if (paracaidas == 1)
{
    direct = -1
    if (x &gt; (xstart + 16))
    {
        if (hspeed &lt; -0.5)
            hspeed = -0.5
        else
            hspeed -= 0.015
    }
    else if (x &lt; (xstart - 16))
    {
        if (hspeed &gt; 0.5)
            hspeed = 0.5
        else
            hspeed += 0.015
    }
    if (gravity == 0)
    {
        instance_create((x + (3 * direct)), y, obj_paracaidas_go)
        paracaidas = 0
        hspeed = 0
        alarm[10] = 10
    }
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle")
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0)
{
    if (wings == 1)
    {
        altura_max = (-(8 - (4 * swimming)))
        altura_min = (-(4.5 - (3 * swimming)))
    }
    else
    {
        altura_max = (-(6.19 - (3 * swimming)))
        altura_min = (-(2.5 - (1 * swimming)))
    }
    if (collision_rectangle(bbox_left, (bbox_top - 40), bbox_right, (bbox_top - 40), obj_blockparent, 0, 0) &amp;&amp; collision_rectangle(bbox_left, (bbox_bottom + 8), bbox_right, (bbox_bottom + 8), obj_blockparent, 0, 0))
    {
        if (floor(random(50)) &lt; 25 &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
        else if ((y + 16) &lt; room_height &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
        {
            vspeed = altura_min
            alarm[4] = 2
            alarm[5] = 35
        }
        else
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
    }
    else if (collision_rectangle(bbox_left, (bbox_top - 40), bbox_right, (bbox_top - 40), obj_blockparent, 0, 0) &amp;&amp; (y + 16) &lt; room_height &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
    {
        vspeed = altura_max
        alarm[4] = 2
        alarm[5] = 16
    }
    else if (collision_rectangle(bbox_left, (bbox_bottom + 8), bbox_right, (bbox_bottom + 8), obj_blockparent, 0, 0) &amp;&amp; (y + 16) &lt; room_height &amp;&amp; (y + 32) &lt; room_height &amp;&amp; (y + 48) &lt; room_height &amp;&amp; (y + 64) &lt; room_height)
    {
        vspeed = altura_min
        alarm[4] = 2
        alarm[5] = 35
    }
    else
    {
        vspeed = altura_max
        alarm[4] = 2
        alarm[5] = 35
    }
    y--
    if (swimming == 1)
        gravity = 0.2
    else
        gravity = 0.25
    if (global.apariencia == 3)
        alarm[7] = 360
    else
        alarm[1] = 360
}
else
    alarm[1] = 360
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    hspeed = (-hspeed)
    prev_hspeed = hspeed
    if ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
    {
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
            x--
    }
    if ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
    {
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
            x++
    }
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 0)
    event_user(0)
else
{
    with (instance_create((x + (9 * direct)), (y + 9), obj_wings_dead))
        direct = other.direct
    wings = 0
    alarm[10] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, (y + 3), obj_enemy_dead)
imdead.girar = 1
imdead.direct = direct
switch global.apariencia
{
    case 0:
        imdead.sprite_index = spr_SMB_hammerbro_deads
        break
    case 1:
        imdead.sprite_index = spr_SMB3_hammerbro_deads
        break
    case 2:
        imdead.sprite_index = spr_hammerbro_deads
        break
    case 3:
        imdead.sprite_index = spr_NSMBU_hammerbro
        break
}

if (global.apariencia == 3)
    imdead.image_index = 9
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia != 3)
    exit
if (sprite_index == spr_NSMBU_hammerbro_throw)
{
    sprite_index = spr_NSMBU_hammerbro
    image_speed = 0.5
    alarm[2] = 10
    alarm[6] = 1
}
else if (sprite_index == spr_NSMBU_hammerbro_jump)
{
    sprite_index = spr_NSMBU_hammerbro
    image_speed = 0.5
    hspeed = prev_hspeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (paracaidas == 1)
    draw_sprite_ext(spr_paracaidas, global.apariencia, (x - (3 * direct)), y, 1, 1, image_angle, c_white, 1)
draw_sprite_ext(sprite_index, image_index, round(x), y, direct, image_yscale, 0, c_white, 1)
if (wings == 1)
    draw_sprite_ext(sprite_wings, wings_anim, (x - (12 * direct)), (y - 22), direct, 1, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-8,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
