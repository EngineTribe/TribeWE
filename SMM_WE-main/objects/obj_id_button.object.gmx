<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sid_search</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
anim = 0
active = 0
url = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((!instance_exists(obj_nm_card_expand)) &amp;&amp; instance_exists(obj_nivelesmundiales) &amp;&amp; obj_nivelesmundiales.loading == 1)
{
    with (obj_nivelesmundiales)
    {
        mensaje = "Tiempo de conexion agotado"
        codigo = "002"
        loading = 0
        active = 1
    }
    with (obj_nm_button_retry)
        instance_destroy()
    instance_create((view_xview[0] + 136), (view_yview[0] + 126), obj_nm_button_retry_id)
    image_index = 0
    with (obj_id_input)
        anim = 2
    anim = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var levelid;
levelid = obj_id_input.new_texto
url = http_get(((((((((global.api_url + "request?type=stage&amp;by=id&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;user_data=") + global.my2) + "&amp;id=") + levelid))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (anim == 1)
{
    if (y &gt; (view_xview[0] + 24))
        y -= 2
    else
    {
        y = (view_xview[0] + 24)
        anim = 0
    }
}
else if (anim == 2)
{
    if (y &lt; (view_xview[0] + 67))
        y += 2
    else
    {
        y = (view_xview[0] + 67)
        anim = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0)
    image_alpha = 0.9
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_id_input) &amp;&amp; obj_id_input.long == 19 &amp;&amp; image_index == 0)
{
    with (obj_id_input)
    {
        anim = 1
        write = 0
    }
    anim = 1
    with (obj_creator_input)
    {
        anim = 1
        write = 0
    }
    with (obj_creator_button)
        anim = 1
    audio_play_sound(snd_select_tile, 0, false)
    image_index = 1
    alarm[0] = 10
    with (obj_nivelesmundiales)
        loading = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var resultado, map, leveldata, card, record, timer, seconds, minutes, milliseconds, user_data, etiq;
if (ds_map_find_value(async_load, "id") == url)
{
    if (ds_map_find_value(async_load, "status") == 0)
    {
        resultado = ds_map_find_value(async_load, "result")
        map = json_decode(resultado)
        if (map == -1)
        {
            show_debug_message("Resultado invalido")
            exit
        }
        if (!ds_map_exists(map, "message"))
        {
            leveldata = ds_map_find_value(map, "result")
            card = instance_create(192, 64, obj_nm_card_expand)
            card.name = ds_map_find_value(leveldata, "name")
            card.likes = ds_map_find_value(leveldata, "likes")
            card.downloads = ds_map_find_value(leveldata, "downloads")
            card.dislikes = ds_map_find_value(leveldata, "dislikes")
            card.intentos = ds_map_find_value(leveldata, "intentos")
            card.victorias = real(ds_map_find_value(leveldata, "victorias"))
            card.muertes = real(ds_map_find_value(leveldata, "muertes"))
            card.apariencia = ds_map_find_value(leveldata, "apariencia")
            card.date = ds_map_find_value(leveldata, "date")
            card.author = ds_map_find_value(leveldata, "author")
            card._id = ds_map_find_value(leveldata, "id")
            card.featured = ds_map_find_value(leveldata, "featured")
            card.date = ds_map_find_value(leveldata, "date")
            record = ds_map_find_value(leveldata, "record")
            if (ds_map_find_value(record, "record") == "yes")
            {
                card.record_name = ds_map_find_value(record, "alias")
                card.nrecord = real(ds_map_find_value(record, "time"))
                timer = real(ds_map_find_value(record, "time"))
                seconds = floor((timer / 1000))
                minutes = floor((seconds / 60))
                milliseconds = (timer - (seconds * 1000))
                seconds = (seconds % 60)
                card.record = ((((string_add_zeros(minutes, 2) + ":") + string_add_zeros(seconds, 2)) + ":") + string_add_zeros(milliseconds, 3))
            }
            if (card.victorias == 0 &amp;&amp; card.muertes == 0)
                card.porcentaje = 0
            else if (card.victorias == 0 &amp;&amp; card.muertes != 0)
                card.porcentaje = 0
            else if (card.muertes == 0 &amp;&amp; card.victorias != 0)
                card.porcentaje = 100
            else
            {
                card.porcentaje = ((card.victorias / card.muertes) * 100)
                if (card.porcentaje &gt; 100)
                    card.porcentaje = 99
            }
            user_data = ds_map_find_value(leveldata, "user_data")
            if (ds_map_find_value(user_data, "data") == "yes")
            {
                card.completed = ds_map_find_value(user_data, "completed")
                card.liked = real(ds_map_find_value(user_data, "liked"))
            }
            etiq = ds_map_find_value(leveldata, "etiquetas")
            card.etiquetas = string_split(",", etiq, 0)
            with (obj_nivelesmundiales)
            {
                loading = 0
                active = 1
                with (obj_nm_button_retry_id)
                    instance_destroy()
                mensaje = ""
                codigo = ""
                alarm[2] = -1
            }
        }
        else if ds_map_exists(map, "message")
        {
            with (obj_nivelesmundiales)
            {
                mensaje = ds_map_find_value(map, "message")
                codigo = ds_map_find_value(map, "error_type")
                loading = 0
                obj_nivelesmundiales.active = 1
                alarm[2] = -1
                with (obj_nm_button_retry_id)
                    instance_destroy()
                instance_create((view_xview[0] + 136), (view_yview[0] + 126), obj_nm_button_retry_id)
            }
        }
        ds_map_destroy(map)
    }
    else
    {
        with (obj_nivelesmundiales)
        {
            mensaje = "Ocurrio un error"
            codigo = "002"
            loading = 0
            obj_nivelesmundiales.active = 1
            alarm[2] = -1
            with (obj_nm_button_retry_id)
                instance_destroy()
            instance_create((view_xview[0] + 136), (view_yview[0] + 126), obj_nm_button_retry_id)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
