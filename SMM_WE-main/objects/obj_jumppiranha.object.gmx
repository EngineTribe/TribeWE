<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_jumppiranha_falll</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        sprite_index = spr_SMB_pplant
        image_speed = 0.125
        sprite_wings = 393
        break
    case 1:
        sprite_index = spr_SMB3_pplant
        image_speed = 0.125
        sprite_wings = 1183
        break
    case 2:
        image_speed = 0.55
        sprite_wings = 2048
        break
    case 3:
        sprite_index = spr_NSMBU_pplant
        image_speed = 0.3
        sprite_wings = 3478
}

hardness = 0
stomp = 1
edible = 0
direct = 1
wings = 0
wings_anim = 0
paracaidas = 0
dead_h = 0
modo_lava = 0
apilar = 0
fire = 0
ready = 0
ready2 = 0
swimming = 0
jump_plant = 0
b_start = y
timer = 0
inup = 0
cankill = 0
alarm[2] = 5
alarm[0] = 180
alarm[1] = 60
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1)
{
    with (instance_create((x + 17), (y + 8), obj_wings_dead))
        direct = -1
    with (instance_create((x - 3), (y + 8), obj_wings_dead))
    {
        sprite_index = spr_wings_dead2
        direct = -1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed == 0 &amp;&amp; paracaidas == 1)
    hspeed = ((0.5 - (0.2 * swimming)) * direct)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cankill = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia != 2 &amp;&amp; wings == 1)
{
    if (instance_exists(obj_mario) &amp;&amp; gravity == 0)
    {
        jump_plant = 1
        vspeed = (-(4.21 - (2 * swimming)))
    }
    else
    {
        alarm[1] = 2
        exit
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 2 &amp;&amp; inup == 0)
{
    if (instance_exists(obj_mario) &amp;&amp; gravity == 0)
    {
        vspeed = (-(2.5 - (0.5 * swimming)))
        sprite_index = spr_jumppiranha
        image_speed = 0.15
    }
    else
    {
        alarm[0] = 1
        exit
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch inup
{
    case 1:
        if (cankill == 1 &amp;&amp; (!place_meeting(x, (y - 12), obj_solid)) &amp;&amp; (!place_meeting(x, (y - 12), obj_physicssolid)))
            event_user(0)
        break
    case 2:
        if (cankill == 1 &amp;&amp; (!place_meeting((x - 16), y, obj_solid)) &amp;&amp; (!place_meeting((x - 16), y, obj_physicssolid)))
            event_user(0)
        break
    case 3:
        if (cankill == 1 &amp;&amp; (!place_meeting((x + 16), y, obj_solid)) &amp;&amp; (!place_meeting((x + 16), y, obj_physicssolid)))
            event_user(0)
        break
}

if (paracaidas == 0)
{
    hspeed = (max(0, (abs(hspeed) - 0.15)) * sign(hspeed))
    if (abs(hspeed) &lt; 0.15)
        hspeed = 0
}
if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1) || (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt; obj_lava_water.y &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
    swimming = 1
else
    swimming = 0
if (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt;= obj_lava_water.y &amp;&amp; global.bg_level == "castle")
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
if (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt; obj_lava_water.y &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
if (inup == 0 &amp;&amp; (jump_plant &lt; 2 || jump_plant == 10))
    event_user(4)
if (wings == 1)
{
    if (global.apariencia == 3)
        wings_anim += 1
    else
        wings_anim += 0.12
    if (jump_plant == 1 &amp;&amp; vspeed &gt; 0)
    {
        jump_plant = 2
        b_start = y
        gravity = 0
    }
    if (jump_plant &gt; 1 &amp;&amp; jump_plant &lt; 8)
    {
        if (y &gt; (b_start + 24))
        {
            if (vspeed &lt; -1)
                vspeed = -1
            else
                vspeed -= 0.03
        }
        else if (y &lt; (b_start - 24))
        {
            if (vspeed &gt; 1)
                vspeed = 1
            else
                vspeed += 0.03
        }
        jump_plant += 0.04
        if (jump_plant &gt; 7)
        {
            jump_plant = 10
            gravity = 0
        }
    }
    if (jump_plant == 10 &amp;&amp; gravity == 0 &amp;&amp; vspeed == 0)
    {
        alarm[1] = 60
        jump_plant = 0
        timer = 0
    }
}
if (paracaidas == 1)
{
    if (x &gt; (xstart + 16))
    {
        if (hspeed &lt; -0.5)
            hspeed = -0.5
        else
            hspeed -= 0.015
    }
    else if (x &lt; (xstart - 16))
    {
        if (hspeed &gt; 0.5)
            hspeed = 0.5
        else
            hspeed += 0.015
    }
    if (gravity == 0)
    {
        instance_create(x, y, obj_paracaidas_go)
        paracaidas = 0
        hspeed = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        if (global.apariencia == 2)
        {
            sprite_index = spr_jumppiranha_falll
            image_speed = 0.55
            ystart = y
            alarm[0] = 180
            ready = 0
            ready2 = 0
        }
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
    }
}
else if (variable_instance_exists(object_index, "paracaidas") &amp;&amp; paracaidas == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
else if (!swimming)
{
    if (global.apariencia == 2)
    {
        gravity = 0.03
        if (vspeed &gt; 0.5)
            vspeed = 0.5
    }
    else
    {
        gravity = 0.2
        if (vspeed &gt; 4)
            vspeed = 4
    }
}
else if (global.apariencia == 2)
{
    gravity = 0.02
    if (vspeed &gt; 0.3)
        vspeed = 0.3
}
else
{
    gravity = 0.02
    if (vspeed &gt; 1)
        vspeed = 1
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, (bbox_top - vspeed), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - vspeed), bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - vspeed), bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, (bbox_top - vspeed), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - vspeed), bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_bullebill_base, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_bullebill_base)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        vspeed = 0
        jump_plant = 10
    }
}
if ((bbox_top - 16) &gt; room_height || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 32) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1))))
    instance_destroy()
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        imdead = instance_create((x + 8), (y + 4), obj_enemy_dead)
        imdead.sprite_index = spr_SMB_pplant_deads
        break
    case 1:
        imdead = instance_create((x + 8), (y + 4), obj_enemy_dead)
        imdead.sprite_index = spr_SMB3_pplant_deads
        break
    case 2:
        imdead = instance_create((x + 8), y, obj_enemy_dead)
        imdead.sprite_index = spr_jumppiranha_deads
        break
    case 3:
        imdead = instance_create((x + 8), y, obj_enemy_dead)
        imdead.sprite_index = spr_NSMBU_pplant_deads
        break
}

imdead.girar = 1
imdead.image_xscale = direct
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xpos;
switch inup
{
    case 1:
        draw_sprite_ext(sprite_index, image_index, x, (y + 16), 1, -1, 0, c_white, 1)
        break
    case 2:
        draw_sprite_ext(sprite_index, image_index, (x + 8), (y + 8), 1, 1, 270, c_white, 1)
        break
    case 3:
        draw_sprite_ext(sprite_index, image_index, (x - 8), (y + 8), 1, 1, 90, c_white, 1)
        break
    default:
        draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, 1)
}

if (wings == 1)
{
    if (global.apariencia == 3)
        xpos = 8
    else
        xpos = 0
    draw_sprite_ext(sprite_wings, wings_anim, (x - xpos), y, 1, 1, image_angle, c_white, 1)
}
if (paracaidas == 1)
    draw_sprite_ext(spr_paracaidas, global.apariencia, x, y, 1, 1, image_angle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-1,-14</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
