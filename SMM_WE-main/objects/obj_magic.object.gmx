<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_magic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        sprite_index = spr_SMB_magic
        break
    case 1:
        sprite_index = spr_SMB3_magic
        break
    case 2:
        sprite_index = spr_magic
        break
    case 3:
        sprite_index = spr_NSMBU_magic
        break
}

int = 0
anim_magic = 0
image_speed = 0.15
angle = 0
alarm[0] = 4
disappear_meta = 0
if instance_exists(obj_mario)
{
    if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship") || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0))
        move_towards_point(obj_mario.x, (obj_mario.y + 16), 0.5)
    else
        move_towards_point(obj_mario.x, (obj_mario.y + 16), 1)
}
else if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship") || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0))
    move_towards_point(obj_levelmanager.x, obj_levelmanager.y, 0.5)
else
    move_towards_point(obj_levelmanager.x, obj_levelmanager.y, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (instance_create(((x - 6) + random(12)), ((y - 6) + random(12)), obj_smoke))
{
    image_speed = 0.2
    sprite_index = spr_boltspark_magic
}
alarm[0] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var flip, itemblock, block_rock, block_ice, powerups;
if instance_exists(obj_mario_transform2)
    depth = -5
else
    depth = -7
if (!instance_exists(obj_deadmario))
    image_angle -= (5 * sign(hspeed))
if (global.apariencia == 3)
    anim_magic += 0.15
flip = collision_rectangle((bbox_left - 2), (bbox_top - 2), (bbox_right + 2), (bbox_bottom + 2), obj_flipblock, 0, 0)
itemblock = collision_rectangle((bbox_left - 2), (bbox_top - 2), (bbox_right + 2), (bbox_bottom + 2), obj_block, 0, 0)
block_rock = collision_rectangle((bbox_left - 2), (bbox_top - 2), (bbox_right + 2), (bbox_bottom + 2), obj_block_rock, 0, 0)
block_ice = collision_rectangle((bbox_left - 2), (bbox_top - 2), (bbox_right + 2), (bbox_bottom + 2), obj_block_ice, 0, 0)
powerups = collision_rectangle((bbox_left - 2), (bbox_top - 2), (bbox_right + 2), (bbox_bottom + 2), obj_powerupparent, 0, 0)
if (itemblock &amp;&amp; (itemblock.sprite_index == spr_SMB_empty_block || itemblock.sprite_index == spr_SMB3_empty_block || itemblock.sprite_index == spr_qblock_empty))
{
    with (itemblock)
    {
        instance_create(x, y, obj_smoke)
        other.int = choose(0, 1, 2, 3, 4, 5, 6, 7)
        switch other.int
        {
            case 1:
                instance_create((x + 8), y, obj_buzzybeetle)
                break
            case 2:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1
                    hspeed = 0.6
                }
                break
            case 3:
                instance_create((x + 8), y, obj_galoomba)
                break
            case 4:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 5:
                with (instance_create(x, y, obj_mushroom))
                    hspeed = 1.1
                break
            default:
                instance_create((x + 8), y, obj_galoomba)
                break
        }

        instance_destroy()
    }
    event_user(0)
}
else if flip
{
    with (flip)
    {
        instance_create(x, y, obj_smoke)
        other.int = choose(0, 1, 2, 3, 4, 5, 6, 7)
        switch other.int
        {
            case 1:
                instance_create((x + 8), y, obj_buzzybeetle)
                break
            case 2:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1
                    hspeed = 0.6
                }
                break
            case 3:
                instance_create((x + 8), y, obj_galoomba)
                break
            case 4:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 5:
                with (instance_create(x, y, obj_mushroom))
                    hspeed = 1.1
                break
            default:
                instance_create((x + 8), y, obj_galoomba)
                break
        }

        instance_destroy()
    }
    event_user(0)
}
else if block_rock
{
    with (block_rock)
    {
        instance_create(x, y, obj_smoke)
        other.int = choose(0, 1, 2, 3, 4, 5, 6, 7)
        switch other.int
        {
            case 1:
                instance_create((x + 8), y, obj_buzzybeetle)
                break
            case 2:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 3:
                instance_create((x + 8), y, obj_galoomba)
                break
            case 4:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 5:
                with (instance_create(x, y, obj_mushroom))
                    hspeed = 1.1
                break
            default:
                instance_create((x + 8), y, obj_galoomba)
                break
        }

        instance_destroy()
    }
    event_user(0)
}
else if block_ice
{
    with (block_ice)
    {
        instance_create(x, y, obj_smoke)
        other.int = choose(0, 1, 2, 3, 4, 5, 6, 7)
        switch other.int
        {
            case 1:
                instance_create((x + 8), y, obj_buzzybeetle)
                break
            case 2:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 3:
                instance_create((x + 8), y, obj_galoomba)
                break
            case 4:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 5:
                with (instance_create(x, y, obj_mushroom))
                    hspeed = 1.1
                break
            default:
                instance_create((x + 8), y, obj_galoomba)
                break
        }

        instance_destroy()
    }
    event_user(0)
}
else if powerups
{
    with (powerups)
    {
        instance_create(x, y, obj_smoke)
        other.int = choose(0, 1, 2, 3, 4, 5, 6, 7)
        switch other.int
        {
            case 1:
                instance_create((x + 8), y, obj_buzzybeetle)
                break
            case 2:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 3:
                instance_create((x + 8), y, obj_galoomba)
                break
            case 4:
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.5
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = -0.7
                }
                with (instance_create(x, y, obj_coin_pow))
                {
                    vspeed = -1.5
                    hspeed = 0.6
                }
                break
            case 5:
                with (instance_create(x, y, obj_mushroom))
                    hspeed = 1.1
                break
            default:
                instance_create((x + 8), y, obj_galoomba)
                break
        }

        instance_destroy()
    }
    event_user(0)
}
event_user(3)
event_user(4)
if outside_view()
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_helmet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_invincibility)
    event_user(0)
else if (other.invincible == 0)
{
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((vspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_slopeparent, 1, 0))
    event_user(0)
if (vspeed &lt; 0 &amp;&amp; collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_solid, 1, 0))
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 1, 0)))
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 3)
{
    audio_stop_sound(snd_NSMBU_magic_destroy)
    audio_play_sound(snd_NSMBU_magic_destroy, 0, false)
}
with (instance_create((x - 8), (y - 8), obj_smoke))
    sprite_index = spr_boltspark_magic
with (instance_create((x - 8), (y + 8), obj_smoke))
    sprite_index = spr_boltspark_magic
with (instance_create(x, y, obj_smoke))
    sprite_index = spr_boltspark_magic
with (instance_create((x + 8), (y - 8), obj_smoke))
    sprite_index = spr_boltspark_magic
with (instance_create((x + 8), (y + 8), obj_smoke))
    sprite_index = spr_boltspark_magic
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 3)
    draw_sprite(spr_NSMBU_magic_effect, anim_magic, x, y)
draw_sprite_ext(sprite_index, -1, x, y, 1, 1, image_angle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-8,-8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
