<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_empty</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>270</depth>
  <persistent>0</persistent>
  <parentName>obj_deactivation</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = 0
size_x = 3
size_y = 3
sprite = 0
index = 0
solidtop = 0
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (solidtop != obj_lighting &amp;&amp; instance_exists(solidtop))
{
    with (solidtop)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>solidtop = instance_create(x, y, obj_solidtop)
solidtop.image_xscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (h = 0; h &lt; size_x; h++)
{
    if (h == 0)
        index = 0
    else if (h == (size_x - 1))
        index = 2
    else
        index = 1
    draw_sprite(sprite, index, (x + (h * 16)), y)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (p = 0; p &lt; size_x; p++)
{
    if (p == 0)
        index = 0
    else if (p == (size_x - 1))
        index = 2
    else
        index = 1
    draw_sprite(sprite, index, (x + (p * 16)), y)
}
for (t = 1; t &lt; size_y; t++)
{
    if (size_y == 3 || size_y == 5 || size_y == 7 || size_y == 9 || size_y == 7 || size_y == 11 || size_y == 13 || size_y == 15 || size_y == 17 || size_y == 19)
    {
        if (t == 1)
            draw_sprite(sprite, 3, ((x + ((size_x * 16) / 2)) - 8), (y + (t * 16)))
        else
            draw_sprite(sprite, 6, ((x + ((size_x * 16) / 2)) - 8), (y + (t * 16)))
    }
    else if (t == 1)
    {
        draw_sprite(sprite, 4, ((x + ((size_x * 16) / 2)) - 16), (y + (t * 16)))
        draw_sprite(sprite, 5, (x + ((size_x * 16) / 2)), (y + (t * 16)))
    }
    else
    {
        draw_sprite(sprite, 7, ((x + ((size_x * 16) / 2)) - 16), (y + (t * 16)))
        draw_sprite(sprite, 8, (x + ((size_x * 16) / 2)), (y + (t * 16)))
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var m1, m2, m3;
m1 = 3
m2 = 4
m3 = 5
for (v = 0; v &lt; size_y; v++)
{
    for (h = 0; h &lt; size_x; h++)
    {
        if (v == 0)
        {
            if (h == 0)
                index = 0
            else if (h == (size_x - 1))
                index = 2
            else
                index = 1
        }
        else if (v == (size_y - 1))
        {
            if (h == 0)
                index = 9
            else if (h == (size_x - 1))
                index = 11
            else
                index = 10
        }
        else if (h == 0)
            index = m1
        else if (h == (size_x - 1))
            index = m3
        else
            index = m2
        draw_sprite(sprite, index, (x + (h * 16)), (y + (v * 16)))
        if (m1 == 3)
            m1 = 6
        else
            m1 = 3
        if (m2 == 4)
            m2 = 7
        else
            m2 = 4
        if (m3 == 5)
            m3 = 8
        else
            m3 = 5
    }
    if (m1 == 3)
        m1 = 6
    else
        m1 = 3
    if (m2 == 4)
        m2 = 7
    else
        m2 = 4
    if (m3 == 5)
        m3 = 8
    else
        m3 = 5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(type)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
