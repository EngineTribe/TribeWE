<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mushroom</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_powerupparent</parentName>
  <maskName>spr_mask_vine</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        sprite_index = spr_SMB_mushroom
        sprite_wings = 393
        break
    case 1:
        sprite_index = spr_SMB3_mushroom
        sprite_wings = 1183
        break
    case 2:
        sprite_wings = 2045
        break
    case 3:
        sprite_index = spr_NSMBU_mushroom
        sprite_wings = 3478
}

if (global.apariencia == 3)
    image_speed = 0.25
else
    image_speed = 0
swimming = 0
t_mario = ""
jump = 0
jump2 = 0
direct = -1
wings = 0
wings_anim = 0
paracaidas = 0
delay = 0
progresivo = 0
alarm[10] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1 &amp;&amp; paracaidas == 0)
{
    hspeed = (0.5 * direct)
    vspeed = -0.5
}
else if (paracaidas == 1)
    hspeed = -0.6
else if (paracaidas == 0)
{
    if (vspeed &lt; 0 || collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) || collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0))
    {
        if (global.modo_noche == 1)
        {
            if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
                hspeed = (1 - (0.5 * swimming))
            else
                hspeed = (-(1 - (0.5 * swimming)))
        }
        else
            hspeed = (1 - (0.5 * swimming))
    }
    else
        alarm[10] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gravity == 0)
{
    vspeed = -3
    y--
    if (global.modo_noche == 1)
        alarm[0] = 90
}
else if (global.modo_noche == 1)
    alarm[0] = 90
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (wings == 0)
{
    if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1))
    {
        if (hspeed &gt; 1)
        {
            hspeed -= 0.08
            if (hspeed &lt;= 0.5)
                hspeed = 0.5
        }
        else if (hspeed &lt; -1)
        {
            hspeed += 0.08
            if (hspeed &gt; -0.5)
                hspeed = -0.5
        }
    }
    else if (hspeed &gt; 1)
    {
        hspeed -= 0.08
        if (hspeed &lt; 1)
            hspeed = 1
    }
    else if (hspeed &lt; -1)
    {
        hspeed += 0.08
        if (hspeed &gt; -1)
            hspeed = -1
    }
}
if (global.modo_noche == 1 &amp;&amp; global.bg_level == "ground" &amp;&amp; wings == 0 &amp;&amp; gravity == 0)
{
    if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
    {
        if (jump == 0 &amp;&amp; (!place_meeting(x, (y - 16), obj_solid)))
        {
            audio_stop_sound(snd_rotten)
            audio_play_sound(snd_rotten, 0, false)
            vspeed = -2
            y--
            jump = 1
        }
        jump2 = 0
        hspeed = 1
    }
    else
    {
        if (jump2 == 0 &amp;&amp; (!place_meeting(x, (y - 16), obj_solid)))
        {
            audio_stop_sound(snd_rotten)
            audio_play_sound(snd_rotten, 0, false)
            vspeed = -2
            y--
            jump2 = 1
        }
        jump = 0
        hspeed = -1
    }
    audio_stop_sound(snd_rotten)
    audio_play_sound(snd_rotten, 0, false)
    vspeed = -3
    if (delay &gt; 0)
        delay--
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.vspeed &lt; 0 &amp;&amp; other.y &lt; (other.ystart - 2) &amp;&amp; bbox_bottom &lt; (other.yprevious + 5) &amp;&amp; wings == 0)
{
    if (collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        with (instance_create(x, y, obj_smoke))
        {
            if (global.apariencia == 3)
                sprite_index = spr_NSMBU_smoke_flag
        }
        instance_destroy()
    }
    else
    {
        if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
            vspeed = -1.8
        else
            vspeed = -3
        if (hspeed == 0)
            hspeed = 1
        else if ((x + (sprite_width / 2)) &gt; (other.x + (sprite_width / 2)))
            hspeed = 1
        else if ((x + (sprite_width / 2)) &lt; (other.x + (sprite_width / 2)))
            hspeed = -1
    }
}
else if (other.vspeed &gt; 0 &amp;&amp; other.bbox_bottom &lt; (bbox_top + 4) &amp;&amp; vspeed == 0 &amp;&amp; gravity == 0)
{
    instance_create(x, y, obj_smoke)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.powerup != 0 &amp;&amp; (collision_rectangle(other.bbox_left, (other.bbox_top - 16), other.bbox_right, other.bbox_top, obj_solid, 1, 0) || collision_rectangle(other.bbox_left, (other.bbox_top - 16), other.bbox_right, other.bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(other.bbox_left, (other.bbox_top - 16), other.bbox_right, other.bbox_top, obj_solidphy, 1, 0) || collision_rectangle(other.bbox_left, (other.bbox_top - 16), other.bbox_right, other.bbox_top, obj_bullebill_base, 1, 0)))
{
    if (other.holding == 2 &amp;&amp; global.apariencia == 2)
    {
        other.isduck = 1
        other.isduckhold = 1
    }
    else
        other.isduck = 1
}
with (instance_create(x, y, obj_score))
    event_user(3)
if (global.apariencia == 3)
{
    with (instance_create((x + 8), y, obj_smoke))
    {
        sprite_index = spr_NSMBU_effect_powerup
        image_speed = 0.25
        depth = -10
    }
}
if (global.powerup == 0)
{
    audio_stop_sound(scr_snd_powerup())
    audio_play_sound(scr_snd_powerup(), 0, false)
    if instance_exists(obj_mario)
    {
        with (instance_create(0, 0, obj_mario_transform2))
        {
            c_powerup = 1
            small = 1
            sprite_powerup = other.sprite_index
        }
    }
}
else if (global.apariencia == 3)
{
    audio_stop_sound(snd_NSMBU_powerup_second)
    audio_play_sound(snd_NSMBU_powerup_second, 0, false)
}
else
{
    audio_stop_sound(scr_snd_powerup())
    audio_play_sound(scr_snd_powerup(), 0, false)
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.modo_noche == 1 &amp;&amp; global.bg_level == "ground")
{
    if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_hurtsolid2, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_hurtsolid2, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_spring_land, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_spring_land, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_enemyparent_held, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_enemyparent_held, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_onewaygate_right, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_onewaygate_left, 0, 0)))
    {
        if (delay == 0 &amp;&amp; gravity == 0)
        {
            if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship"))
                vspeed = -2.4
            else
                vspeed = -4.8
            delay = 6
            y--
        }
    }
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_hurtsolid2, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_hurtsolid2, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solidphy, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solidphy, 0, 0))
        x--
    if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_onewaygate_right, 0, 0))
        x++
    if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_onewaygate_left, 0, 0))
        x--
}
else
    event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
