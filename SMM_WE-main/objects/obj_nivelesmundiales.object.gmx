<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marker_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
creator = -4
global.powerup = 0
global.mariostart = 0
global.modojuego = 0
robot_rot = 0
ry = 10
ry_start = 10
timer = 0
c_cont = make_colour_rgb(89, 15, 16)
type_consulta = 2
url = ""
num_rows = 0
rows_perpage = 0
pages = 0
levels = 0
page = global.pages_nm
active = 1
loading = 1
rot = 0
mensaje = ""
codigo = ""
audio_play_sound(snd_super_experto, 99, true)
pos = 54
list_post = 1
background_hspeed[0] = -0.5
background_vspeed[0] = -0.5
instance_create((view_xview[0] + 360), view_yview[0], obj_menu_editor_ext)
with (instance_create(0, 30, obj_nm_tabs))
{
    if (global.tabvalue == 0)
    {
        obj_nivelesmundiales.type_consulta = 0
        image_index = 1
        c_color = 16777215
    }
}
with (instance_create(86, 30, obj_nm_tabs))
{
    text = "Populares"
    value = 1
    if (global.tabvalue == 1)
    {
        obj_nivelesmundiales.type_consulta = 1
        image_index = 1
        c_color = 16777215
    }
}
with (instance_create(172, 30, obj_nm_tabs))
{
    text = "Novedades"
    value = 2
    if (global.tabvalue == 2)
    {
        obj_nivelesmundiales.type_consulta = 2
        image_index = 1
        c_color = 16777215
    }
}
with (instance_create(258, 30, obj_nm_tabs))
{
    text = "Busqueda"
    value = 3
    if (global.tabvalue == 3)
    {
        obj_nivelesmundiales.type_consulta = 3
        image_index = 1
        c_color = 16777215
    }
}
with (instance_create(344, 30, obj_nm_tabs))
{
    sprite_index = spr_nm_tabs_small
    text = ""
    value = 4
    icon = 1
    if (global.tabvalue == 4)
    {
        obj_nivelesmundiales.type_consulta = 4
        image_index = 1
        c_color = 16777215
    }
}
instance_create(376, 58, obj_scrollbar)
with (instance_create(279, 9, obj_pages_button))
    direct = 2
with (instance_create(322, 9, obj_pages_button))
    direct = 1
alarm[0] = 6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var map, i, leveldata, card, record, timer, seconds, minutes, milliseconds, user_data, etiq;
map = json_decode(global.map_consult)
if (map == -1)
{
    show_debug_message("Resultado invalido")
    exit
}
if (!ds_map_exists(map, "message"))
{
    num_rows = real(ds_map_find_value(map, "num_rows"))
    rows_perpage = real(ds_map_find_value(map, "rows_perpage"))
    pages = real(ds_map_find_value(map, "pages"))
    levels = ds_map_find_value(map, "result")
    with (obj_nm_card)
        instance_destroy()
    for (i = 0; i &lt; ds_list_size(levels); i++)
    {
        leveldata = ds_list_find_value(levels, i)
        card = instance_create(192, (56 + (54 * i)), obj_nm_card)
        card.name = ds_map_find_value(leveldata, "name")
        card.likes = ds_map_find_value(leveldata, "likes")
        card.downloads = ds_map_find_value(leveldata, "downloads")
        card.dislikes = ds_map_find_value(leveldata, "dislikes")
        card.intentos = ds_map_find_value(leveldata, "intentos")
        card.victorias = real(ds_map_find_value(leveldata, "victorias"))
        card.muertes = real(ds_map_find_value(leveldata, "muertes"))
        card.apariencia = ds_map_find_value(leveldata, "apariencia")
        card.date = ds_map_find_value(leveldata, "date")
        card.author = ds_map_find_value(leveldata, "author")
        card._id = ds_map_find_value(leveldata, "id")
        card.featured = ds_map_find_value(leveldata, "featured")
        card.date = ds_map_find_value(leveldata, "date")
        record = ds_map_find_value(leveldata, "record")
        if (ds_map_find_value(record, "record") == "yes")
        {
            card.record_name = ds_map_find_value(record, "alias")
            card.nrecord = real(ds_map_find_value(record, "time"))
            timer = real(ds_map_find_value(record, "time"))
            seconds = floor((timer / 1000))
            minutes = floor((seconds / 60))
            milliseconds = (timer - (seconds * 1000))
            seconds = (seconds % 60)
            card.record = ((((string_add_zeros(minutes, 2) + ":") + string_add_zeros(seconds, 2)) + ":") + string_add_zeros(milliseconds, 3))
        }
        if (card.victorias == 0 &amp;&amp; card.muertes == 0)
            card.porcentaje = 0
        else if (card.victorias == 0 &amp;&amp; card.muertes != 0)
            card.porcentaje = 0
        else if (card.muertes == 0 &amp;&amp; card.victorias != 0)
            card.porcentaje = 100
        else
        {
            card.porcentaje = ((card.victorias / card.muertes) * 100)
            if (card.porcentaje &gt; 100)
                card.porcentaje = 99
        }
        user_data = ds_map_find_value(leveldata, "user_data")
        if (ds_map_find_value(user_data, "data") == "yes")
        {
            if (global.id_CR == ds_map_find_value(leveldata, "id"))
            {
                card.completed = global.complete_CR
                card.liked = global.liked_CR
            }
            else
            {
                card.completed = ds_map_find_value(user_data, "completed")
                card.liked = real(ds_map_find_value(user_data, "liked"))
            }
        }
        etiq = ds_map_find_value(leveldata, "etiquetas")
        card.etiquetas = string_split(",", etiq, 0)
    }
    loading = 0
    obj_nivelesmundiales.active = 1
    with (obj_nm_button_retry)
        instance_destroy()
    mensaje = ""
    codigo = ""
    alarm[2] = -1
}
ds_map_destroy(map)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((!instance_exists(obj_nm_card)) &amp;&amp; (!instance_exists(obj_nm_card_expand)) &amp;&amp; loading == 1)
{
    mensaje = "Tiempo de conexion agotado"
    codigo = "002"
    loading = 0
    obj_nivelesmundiales.active = 1
    with (obj_nm_button_retry)
        instance_destroy()
    instance_create((view_xview[0] + 136), (view_yview[0] + 126), obj_nm_button_retry)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (type_consulta != 3 &amp;&amp; global.map_consult != -4)
    alarm[3] = 10
else
{
    switch type_consulta
    {
        case 0:
            url = http_get(((((((((global.api_url + "request?type=stage&amp;by=detailed_search&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;featured=promising&amp;user_data=") + global.my2) + "&amp;page=") + string(page)))
            break
        case 1:
            url = http_get(((((((((global.api_url + "request?type=stage&amp;by=detailed_search&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;sort=popular&amp;user_data=") + global.my2) + "&amp;last=2%20week&amp;page=") + string(page)))
            break
        case 2:
            url = http_get(((((((((global.api_url + "request?type=stage&amp;by=detailed_search&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;user_data=") + global.my2) + "&amp;page=") + string(page)))
            break
        case 3:
            instance_create((view_xview[0] + 54), (view_yview[0] + 67), obj_id_input)
            instance_create((view_xview[0] + 162), (view_yview[0] + 67), obj_id_button)
            instance_create((view_xview[0] + 202), (view_yview[0] + 67), obj_creator_input)
            instance_create((view_xview[0] + 310), (view_yview[0] + 67), obj_creator_button)
            break
        case 4:
            url = http_get(((((((((((global.api_url + "request?type=stage&amp;by=detailed_search&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;user_data=") + global.my2) + "&amp;liked=") + global.my2) + "&amp;page=") + string(page)))
            break
        case 5:
            url = http_get(((((((((((global.api_url + "request?type=stage&amp;by=detailed_search&amp;owner=") + global.ow) + "&amp;api_key=") + global.ak) + "&amp;user_data=") + global.my2) + "&amp;author=") + obj_nivelesmundiales.creator) + "&amp;page=") + string(page)))
            break
    }

    if (type_consulta != 3)
        alarm[2] = 600
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (loading != 0)
    rot -= 8
robot_rot -= 1
ry = (ry_start + (sin((timer * 0.04375)) * 2))
timer++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var resultado, map, i, leveldata, card, record, timer, seconds, minutes, milliseconds, user_data, etiq;
if (ds_map_find_value(async_load, "id") == url)
{
    if (ds_map_find_value(async_load, "status") == 0)
    {
        resultado = ds_map_find_value(async_load, "result")
        map = json_decode(resultado)
        if (map == -1)
        {
            show_debug_message("Resultado invalido")
            exit
        }
        if (!ds_map_exists(map, "message"))
        {
            num_rows = real(ds_map_find_value(map, "num_rows"))
            rows_perpage = real(ds_map_find_value(map, "rows_perpage"))
            pages = real(ds_map_find_value(map, "pages"))
            levels = ds_map_find_value(map, "result")
            global.map_consult = resultado
            global.type_consult = type_consulta
            with (obj_nm_card)
                instance_destroy()
            for (i = 0; i &lt; ds_list_size(levels); i++)
            {
                leveldata = ds_list_find_value(levels, i)
                card = instance_create(192, (56 + (54 * i)), obj_nm_card)
                card.name = ds_map_find_value(leveldata, "name")
                card.likes = ds_map_find_value(leveldata, "likes")
                card.downloads = ds_map_find_value(leveldata, "downloads")
                card.dislikes = ds_map_find_value(leveldata, "dislikes")
                card.intentos = ds_map_find_value(leveldata, "intentos")
                card.victorias = real(ds_map_find_value(leveldata, "victorias"))
                card.muertes = real(ds_map_find_value(leveldata, "muertes"))
                card.apariencia = ds_map_find_value(leveldata, "apariencia")
                card.date = ds_map_find_value(leveldata, "date")
                card.author = ds_map_find_value(leveldata, "author")
                card._id = ds_map_find_value(leveldata, "id")
                card.featured = ds_map_find_value(leveldata, "featured")
                card.date = ds_map_find_value(leveldata, "date")
                record = ds_map_find_value(leveldata, "record")
                if (ds_map_find_value(record, "record") == "yes")
                {
                    card.record_name = ds_map_find_value(record, "alias")
                    card.nrecord = real(ds_map_find_value(record, "time"))
                    timer = real(ds_map_find_value(record, "time"))
                    seconds = floor((timer / 1000))
                    minutes = floor((seconds / 60))
                    milliseconds = (timer - (seconds * 1000))
                    seconds = (seconds % 60)
                    card.record = ((((string_add_zeros(minutes, 2) + ":") + string_add_zeros(seconds, 2)) + ":") + string_add_zeros(milliseconds, 3))
                }
                if (card.victorias == 0 &amp;&amp; card.muertes == 0)
                    card.porcentaje = 0
                else if (card.victorias == 0 &amp;&amp; card.muertes != 0)
                    card.porcentaje = 0
                else if (card.muertes == 0 &amp;&amp; card.victorias != 0)
                    card.porcentaje = 100
                else
                {
                    card.porcentaje = ((card.victorias / card.muertes) * 100)
                    if (card.porcentaje &gt; 100)
                        card.porcentaje = 99
                }
                user_data = ds_map_find_value(leveldata, "user_data")
                if (ds_map_find_value(user_data, "data") == "yes")
                {
                    card.completed = ds_map_find_value(user_data, "completed")
                    card.liked = real(ds_map_find_value(user_data, "liked"))
                }
                etiq = ds_map_find_value(leveldata, "etiquetas")
                card.etiquetas = string_split(",", etiq, 0)
            }
            loading = 0
            obj_nivelesmundiales.active = 1
            with (obj_nm_button_retry)
                instance_destroy()
            mensaje = ""
            codigo = ""
            alarm[2] = -1
        }
        else if ds_map_exists(map, "message")
        {
            mensaje = ds_map_find_value(map, "message")
            codigo = ds_map_find_value(map, "error_type")
            loading = 0
            alarm[2] = -1
            with (obj_nm_button_retry)
                instance_destroy()
            instance_create((view_xview[0] + 136), (view_yview[0] + 126), obj_nm_button_retry)
        }
        ds_map_destroy(map)
    }
    else if (rows_perpage == 0)
    {
        mensaje = "Ocurrio un error"
        codigo = "002"
        loading = 0
        alarm[2] = -1
        with (obj_nm_button_retry)
            instance_destroy()
        instance_create((view_xview[0] + 136), (view_yview[0] + 126), obj_nm_button_retry)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_nm_card)
    instance_destroy()
with (obj_nm_card_expand)
    instance_destroy()
with (obj_id_input)
    instance_destroy()
with (obj_id_button)
    instance_destroy()
with (obj_creator_input)
    instance_destroy()
with (obj_creator_button)
    instance_destroy()
with (obj_scrollbar)
    button_y = 0
if (type_consulta != 3)
    loading = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_super_experto)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pos;
draw_sprite(spr_nm_bg, 0, 0, 0)
draw_sprite_stretched(spr_nm_shadow, 0, 0, 48, view_wview[0], 8)
draw_sprite_ext(spr_nm_robot, 0, 196, ry, 1, 1, robot_rot, c_white, 1)
draw_set_font(global.font_google)
draw_set_color(c_white)
draw_sprite(spr_nm_profile, 0, 4, 5)
draw_sprite(spr_nm_castle, 0, 34, 8)
draw_text(54, 8, "Explorar Niveles")
draw_sprite(spr_nm_pages, 0, 279, 9)
if (page &gt; 9)
    pos = 305
else
    pos = 309
draw_text(pos, 8, page)
if (loading == 1)
{
    draw_set_halign(fa_center)
    draw_text((view_xview[0] + (view_wview[0] / 2)), (view_yview[0] + 119), "Cargando...")
    draw_sprite_ext(spr_load_image, 1, (view_xview[0] + 192), (view_yview[0] + 108), 1, 1, rot, c_white, 1)
    draw_set_halign(fa_left)
}
if (mensaje != "" &amp;&amp; codigo != "")
{
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text((view_xview[0] + (view_wview[0] / 2)), (view_yview[0] + 102), ((mensaje + " Código: ") + codigo))
    draw_set_halign(fa_left)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
