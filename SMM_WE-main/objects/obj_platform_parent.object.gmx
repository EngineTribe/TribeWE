<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_solidtop</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var spd2, check, check_solid, check_phy, check_platform;
if instance_exists(obj_mario)
{
    if (vspeed &lt; 1)
        spd2 = 1
    else
        spd2 = vspeed
    check = collision_rectangle(obj_mario.bbox_left, (bbox_top - 5), obj_mario.bbox_right, (bbox_top + spd2), obj_solidtop, 0, 1)
    check_solid = collision_rectangle(obj_mario.bbox_left, (bbox_top - 5), obj_mario.bbox_right, (bbox_top + spd2), obj_solid, 0, 0)
    check_phy = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 5), obj_mario.bbox_right, (bbox_top + spd2), obj_physicssolid, 0, 0)
    check_platform = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 5), obj_mario.bbox_right, (bbox_top + spd2), obj_platform_parent, 0, 0)
    if (check_platform &amp;&amp; check_platform != id &amp;&amp; check_platform.vspeed &lt; 0)
        exit
    if (collision_rectangle(bbox_left, (bbox_top - 5), bbox_right, ((bbox_top + 3) + vspeed), obj_mario, 0, 0) &amp;&amp; obj_mario.y &lt; (bbox_top - 27) &amp;&amp; obj_mario.state &lt; 2)
    {
        if (vspeed &gt; 0 &amp;&amp; check &amp;&amp; check != id)
        {
            obj_mario.y = (check.bbox_top - 32)
            exit
        }
        if (vspeed &gt; 0 &amp;&amp; check_solid)
        {
            obj_mario.y = (check_solid.bbox_top - 32)
            exit
        }
        if (vspeed &gt; 0 &amp;&amp; check_phy)
        {
            obj_mario.y = (check_phy.bbox_top - 32)
            exit
        }
        if (collision_rectangle(obj_mario.bbox_left, ((obj_mario.bbox_top - 1) - vspeed), obj_mario.bbox_right, obj_mario.bbox_top, obj_solid, 0, 0) || collision_rectangle(obj_mario.bbox_left, ((obj_mario.bbox_top - 1) - vspeed), obj_mario.bbox_right, obj_mario.bbox_top, obj_physicssolid, 0, 0) || collision_rectangle(obj_mario.bbox_left, ((obj_mario.bbox_top - 1) - vspeed), obj_mario.bbox_right, obj_mario.bbox_top, obj_bullebill_base, 0, 0) || (collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, (obj_mario.bbox_top + 1), obj_onewaygate_bottom, 0, 0) &amp;&amp; vspeed &lt; 0))
        {
            obj_mario.vspeed = 0
            exit
        }
        obj_mario.y = ceil((bbox_top - 31))
        if ((hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_right + 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_right + 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_solid, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_left - 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_left - 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_solid, 0, 0))) || (hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_right + 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_right + 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_physicssolid, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_left - 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_left - 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_physicssolid, 0, 0))) || (hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_right + 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_right + 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_left - 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_left - 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (hspeed &gt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_right + 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_right + 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_right, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle(((obj_mario.bbox_left - 1) + hspeed), obj_mario.bbox_top, ((obj_mario.bbox_left - 1) + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_left, 0, 0))))
            obj_mario.x += hspeed
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
