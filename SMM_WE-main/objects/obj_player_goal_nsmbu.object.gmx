<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_NSMBU_mario_small_climb_pole</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_player_goal_smb1</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_levelmanager)
    temp_ready = 0
sprite_index = scr_NSMBU_climb_pole()
image_speed = 0.5
audio_play_sound(snd_NSMBU_get_vine, 0, false)
anim_pole = 1
moverse = 0
ready_move = 0
jump_type = 1
flagpole = -1
ready4 = 0
salto = 0
in_solid = 0
with (obj_levelmanager)
{
    event_user(3)
    alarm[2] = 0
    alarm[4] = -1
}
anim = 0
ready = 0
ready2 = 0
ready3 = 0
out_view = 0
swimming = 0
swim = 0
isflashing = 0
blend_star = 16777215
flashAlpha = 1
direct = 1
yview = (y + 32)
global.checkpoint = -4
global.checkpointroom = -4
global.pinkcoins_count = 0
global.pink_coins = 0
global.pink_coin1_x = 0
global.pink_coin1_y = 0
global.pink_coin2_x = 0
global.pink_coin2_y = 0
global.pink_coin3_x = 0
global.pink_coin3_y = 0
global.pink_coin4_x = 0
global.pink_coin4_y = 0
global.pink_coin5_x = 0
global.pink_coin5_y = 0
global.pink_coin6_x = 0
global.pink_coin6_y = 0
global.pink_coin7_x = 0
global.pink_coin7_y = 0
global.pink_coin8_x = 0
global.pink_coin8_y = 0
global.pink_coin9_x = 0
global.pink_coin9_y = 0
global.pink_coin10_x = 0
global.pink_coin10_y = 0
if instance_exists(obj_enemyparent)
{
    with (obj_enemyparent)
    {
        if (object_index != obj_grinder)
        {
            instance_create(x, y, obj_detroy_enemy)
            instance_destroy()
        }
    }
}
if instance_exists(obj_enemyparent_held)
{
    with (obj_enemyparent_held)
    {
        instance_create(x, y, obj_detroy_enemy)
        instance_destroy()
    }
}
if instance_exists(obj_bossparent)
{
    with (obj_bossparent)
    {
        instance_create(x, y, obj_detroy_enemy)
        instance_destroy()
    }
}
if instance_exists(obj_clown)
{
    with (obj_clown)
    {
        instance_create(x, y, obj_detroy_enemy)
        instance_destroy()
    }
}
if instance_exists(obj_powerupparent)
{
    with (obj_powerupparent)
    {
        instance_create(x, y, obj_detroy_enemy)
        instance_destroy()
    }
}
if (obj_persistent.modo_android == 1 &amp;&amp; global.controles_tactiles == 1)
{
    with (obj_persistent)
    {
        event_user(4)
        event_user(5)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>salto = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ready4 == 1)
{
    ready = 2
    anim_pole = 0
    audio_play_sound(snd_NSMBU_clear, 0, false)
    sprite_index = scr_NSMBU_goal_pole()
    image_speed = 0.5
    image_index = 0
    alarm[6] = 3
    if (swimming == 1)
    {
        vspeed = -2.125
        hspeed = 1
    }
    else
    {
        vspeed = -3.125
        hspeed = 1.3
    }
    x += 2
    direct = 1
    if instance_exists(obj_flagpole)
    {
        with (obj_flagpole)
        {
            alarm[1] = 126
            alarm[0] = 360
        }
    }
}
else
    alarm[5] = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (direct == 1)
{
    direct = -1
    x += 8
}
alarm[11] = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.powerup == 0)
    mask_index = spr_smallmask
else
    mask_index = spr_bigmask
if (global.bg_level == "underwater" || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16)))
    swim = 1
else
    swim = 0
anim += (0.065 + (abs(hspeed) / 7.5))
if (ready == 2 || ready == 3)
{
    if (bbox_top &gt; room_height)
    {
        y = (room_height - 64)
        visible = false
    }
    if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0))
        swimming = 1
    else
        swimming = 0
    event_user(3)
    event_user(4)
    if (ready_move == 1)
    {
        if (swim == 1)
        {
            hspeed += 0.1
            if (hspeed &gt; 0.6)
                hspeed = 0.6
        }
        else
        {
            hspeed += 0.08
            if (hspeed &gt; 1.5)
                hspeed = 1.5
        }
    }
    if (ready == 2)
    {
        if (hspeed &lt; 0)
        {
            ready = 3
            event_user(15)
            hspeed = 0
        }
    }
}
if (out_view == 1)
{
    hspeed = 0
    vspeed = 0
    gravity = 0
}
if (collision_rectangle((bbox_left + 2), bbox_bottom, (bbox_right - 2), (bbox_bottom + vspeed), obj_solidtop, 0, 0) || collision_rectangle((bbox_left + 2), bbox_bottom, (bbox_right - 2), (bbox_bottom + vspeed), obj_physicssolid, 0, 0))
    in_solid = 1
event_user(13)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_flagpole">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((ready == 0 &amp;&amp; ready4 == 0 &amp;&amp; instance_exists(obj_SMB_flag) &amp;&amp; obj_SMB_flag.ready == 1 &amp;&amp; y &gt; (other.y + 128) &amp;&amp; in_solid == 0) || (ready == 0 &amp;&amp; ready4 == 0 &amp;&amp; in_solid == 1))
{
    vspeed = 0
    if (y &gt; (other.y + 128))
        y = (other.y + 128)
    ready4 = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.powerup == 0)
    mask_index = spr_smallmask
else
    mask_index = spr_bigmask
if (ready_move == 1)
{
    if (gravity == 0)
    {
        sprite_index = scr_NSMBU_walk(swim)
        if (swim == 1)
            image_speed = 0.5
        else
            image_speed = 1.5
    }
    else if (place_free(x, (y + 1)) &amp;&amp; vspeed &gt; 0)
    {
        switch jump_type
        {
            case 1:
                sprite_index = scr_NSMBU_jump1()
                break
            case 2:
                sprite_index = scr_NSMBU_jump2()
                break
            case 3:
                sprite_index = scr_NSMBU_jump3()
                break
        }

        if (image_index &gt;= 34.5)
        {
            image_speed = 0
            image_index = 34
        }
        else
            image_speed = 0.5
    }
    else
    {
        switch jump_type
        {
            case 1:
                sprite_index = scr_NSMBU_jump1()
                break
            case 2:
                sprite_index = scr_NSMBU_jump2()
                break
            case 3:
                sprite_index = scr_NSMBU_jump3()
                break
        }

        if (image_index &gt;= 19.5)
        {
            image_speed = 0
            image_index = 19.5
        }
        else
            image_speed = 0.5
    }
}
if (ready &lt; 2)
    sprite_index = scr_NSMBU_climb_pole()
else if (sprite_index == scr_NSMBU_goal_pole())
{
    if (image_index &gt;= 13.5)
    {
        image_speed = 0
        image_index = 13
    }
    else
        image_speed = 0.5
    if (gravity == 0 &amp;&amp; salto == 1)
    {
        sprite_index = scr_NSMBU_standup_pole()
        image_index = 0
        hspeed = 0
    }
}
else if (sprite_index == scr_NSMBU_standup_pole())
{
    if (image_index &gt;= 8.7)
    {
        sprite_index = scr_NSMBU_walk(swimming)
        image_index = 0
        image_speed = 1.2
        moverse = 1
        hspeed = 1.5
        audio_play_sound(choose(482, 483), 0, false)
    }
    else
    {
        image_speed = 0.3
        hspeed = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (moverse == 1)
        ready_move = 0
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
        x--
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solidphy, 1, 0)
        x--
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x--
}
else if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solidphy, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    if (moverse == 1)
    {
        hspeed = 0
        ready_move = 1
    }
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
        x++
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)
        x++
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x++
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
else if (moverse == 1)
    ready_move = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == scr_NSMBU_climb_pole())
{
    image_speed = 0
    image_index = 10
    alarm[11] = 5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir;
if (anim_pole == 1)
    dir = 1
else
    dir = direct
draw_sprite_ext(sprite_index, image_index, round(x), (round(y) + 1), dir, 1, 0, c_white, image_alpha)
if (instance_exists(obj_invincibility) &amp;&amp; global.effect_star == 1)
{
    shader_set(sha_blendreplace)
    draw_sprite_ext(sprite_index, image_index, round(x), (round(y) + 1), dir, 1, 0, blend_star, flashAlpha)
    shader_reset()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
