<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_small_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_player_goal_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_levelmanager)
{
    event_user(3)
    alarm[2] = 0
    alarm[4] = -1
    temp_ready = 0
}
pose = 0
helmet = 0
can_walk = 1
xx = 0
hspeed = 0
alarm[2] = 440
if instance_exists(obj_goalgate)
{
    with (obj_goalgate)
        alarm[0] = 240
}
if instance_exists(obj_mario_pballon)
{
    with (obj_mario_pballon)
    {
        speed = 0
        mov = 1
    }
}
swimming = 0
swim = 0
modo_lava = 0
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_walk = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = scr_marioduck()
image_speed = 0
image_index = 0
direct = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_ground3) &amp;&amp; x &gt;= (obj_ground3.x + 104))
    pose = 1
else
{
    hspeed = 0
    can_walk = 0
    sprite_index = scr_marioidle()
    image_speed = 0
    image_index = 0
    alarm[3] = 30
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.powerup == 0)
    mask_index = spr_smallmask
else if (global.powerup == -77)
    mask_index = spr_megamask
else
    mask_index = spr_bigmask
if (gravity == 0)
{
    if (hspeed == 0)
    {
        if (pose == 1)
        {
            sprite_index = scr_mariogoal()
            image_speed = 0
            if (helmet == 1)
            {
                with (obj_helmet)
                    instance_destroy()
                image_index = 1
            }
            else if (helmet == 2)
            {
                with (obj_helmet_spiny)
                    instance_destroy()
                image_index = 2
            }
            else
                image_index = 0
        }
    }
    else if (hspeed != 0 || can_walk == 2)
    {
        sprite_index = scr_mariowalk()
        if (hspeed != 0)
            image_speed = abs((hspeed / 10))
        else
            image_speed = 0.15
    }
}
else if (swimming == 1 &amp;&amp; swim == 1)
{
    sprite_index = scr_marioswimhold()
    image_speed = 0.15
}
else
{
    if (vspeed &gt; 0)
        sprite_index = scr_mariodrop()
    else
        sprite_index = scr_mariojump()
    image_speed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
    swimming = 1
else
    swimming = 0
event_user(3)
if (global.powerup != -82)
    event_user(4)
if (global.bg_level == "underwater" || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
    swim = 1
if (gravity == 0 &amp;&amp; global.powerup != -82)
{
    if (can_walk == 1)
    {
        if (swimming == 1)
        {
            hspeed += 0.125
            if (hspeed &gt; 0.5)
                hspeed = 0.5
        }
        else
        {
            hspeed += 0.125
            if (hspeed &gt; 1.5)
                hspeed = 1.5
        }
        direct = 1
    }
    if instance_exists(obj_ground3)
    {
        if (x &gt;= (obj_ground3.x + 106))
        {
            hspeed = 0
            can_walk = 0
            direct = -1
            sprite_index = scr_marioidle()
            image_speed = 0
            image_index = 0
        }
    }
    else if (x &gt;= (xstart + 106))
    {
        hspeed = 0
        direct = -1
        can_walk = 0
        sprite_index = scr_marioidle()
        image_speed = 0
        image_index = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = abs(hspeed)
if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 4), obj_onewaygate_right, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
{
    hspeed = 0
    if (can_walk == 1)
        can_walk = 2
}
if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 4), obj_solid, 0, 0))
    x += xx
if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 4), obj_solid, 0, 0))
    x -= xx
if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 4), obj_physicssolid, 0, 0))
    x += xx
if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 4), obj_physicssolid, 0, 0))
    x -= xx
if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 4), obj_bullebill_base, 0, 0))
    x += xx
if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 4), obj_bullebill_base, 0, 0))
    x -= xx
if (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 4), obj_onewaygate_right, 0, 0))
    x += xx
if (hspeed &gt; 0 &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 4), obj_onewaygate_left, 0, 0))
    x -= xx
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var s_yoshi, s_yoshi_jump, jump, pos, sprite;
if (global.yoshi &gt; 0)
{
    if instance_exists(obj_yoshi_red)
    {
        s_yoshi = spr_yoshi_red
        s_yoshi_jump = spr_yoshi_jump_red
    }
    else
    {
        s_yoshi = spr_yoshi
        s_yoshi_jump = spr_yoshi_jump
    }
    if (vspeed != 0)
    {
        if (vspeed &lt; 0)
            jump = 0
        else
            jump = 1
        draw_sprite_ext(s_yoshi_jump, jump, round(x), (round(y) + 17), direct, 1, 0, c_white, image_alpha)
        draw_sprite_ext(scr_marioride(), image_index, round(x), (y - 8), direct, 1, 0, c_white, image_alpha)
        if (instance_exists(obj_invincibility) &amp;&amp; global.effect_star == 1)
        {
            shader_set(sha_blendreplace)
            draw_sprite_ext(scr_marioride(), image_index, round(x), (y - 8), direct, 1, 0, blend_star, flashAlpha)
            shader_reset()
        }
    }
    else
    {
        if (pose == 1)
        {
            pos = 0
            sprite = scr_mario_yoshi_goal()
        }
        else
        {
            pos = image_index
            sprite = scr_marioride()
        }
        draw_sprite_ext(s_yoshi, pos, round(x), (round(y) + 17), direct, 1, 0, c_white, image_alpha)
        draw_sprite_ext(sprite, image_index, round(x), (y - 8), direct, 1, 0, c_white, image_alpha)
        if (instance_exists(obj_invincibility) &amp;&amp; global.effect_star == 1)
        {
            shader_set(sha_blendreplace)
            draw_sprite_ext(sprite, image_index, round(x), (y - 8), direct, 1, 0, blend_star, flashAlpha)
            shader_reset()
        }
    }
}
else
{
    draw_sprite_ext(sprite_index, image_index, round(x), (y + 1), direct, 1, 0, c_white, image_alpha)
    if (instance_exists(obj_invincibility) &amp;&amp; global.effect_star == 1)
    {
        shader_set(sha_blendreplace)
        draw_sprite_ext(sprite_index, image_index, round(x), (y + 1), direct, 1, 0, blend_star, flashAlpha)
        shader_reset()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
