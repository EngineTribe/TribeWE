<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pokey</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        if (global.bg_level == "snow")
            sprite_index = spr_SMB_pokey_snow
        else
            sprite_index = spr_SMB_pokey
        break
    case 1:
        if (global.bg_level == "snow")
            sprite_index = spr_SMB3_pokey_snow
        else
            sprite_index = spr_SMB3_pokey
        break
    case 2:
        if (global.bg_level == "snow")
            sprite_index = spr_pokey_snow
        else
            sprite_index = spr_pokey
        break
    case 3:
        if (global.bg_level == "snow")
            sprite_index = spr_NSMBU_pokey_snow
        else
            sprite_index = spr_NSMBU_pokey
        break
}

hardness = 0
stomp = 1
edible = 0
direct = -1
wings = 0
wings_anim = 0
paracaidas = 0
innave = 0
dead_h = 0
modo_lava = 0
apilar = 0
swimming = 0
image_speed = 0
alarm[10] = 2
if position_meeting(x, (bbox_bottom + 8), obj_pokey)
{
    mebelow = collision_point(x, (bbox_bottom + 8), obj_pokey, 0, 0)
    alarm[0] = 10
}
else
{
    mebelow = -4
    alarm[10] = 2
}
a = -16
alarm[9] = 2
offset = 0
offsetnext = 0
offsetxscale = 1
rotacion = 0
up = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_levelmanager) &amp;&amp; obj_levelmanager.editor == 0 &amp;&amp; image_index == 0)
{
    if (global.bg_level == "snow")
    {
        with (instance_create((x - 8), (y - 8), obj_snow_ball))
            vspeed = -2
    }
    if instance_exists(mebelow)
    {
        with (mebelow)
            event_user(7)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed != 0)
{
    if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
        hspeed = -0.2
    else
        hspeed = 0.2
}
alarm[11] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed == 0)
    hspeed = -0.2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mebelow == -4)
{
    repeat (99)
    {
        if position_meeting(x, (bbox_top + a), obj_pokey)
            a -= 16
        else
        {
            a += 16
            if (a &lt; -16)
                a = -16
        }
    }
}
alarm[9] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(mebelow) &amp;&amp; instance_exists(obj_mario))
    offsetxscale = (-mebelow.offsetxscale)
switch offsetnext
{
    case 0:
        offset = offsetxscale
        break
    case 1:
        offset = 0
        break
    case 2:
        offset = (-offsetxscale)
        break
    case 3:
        offset = 0
        break
}

offsetnext++
if (offsetnext == 4)
    offsetnext = 0
alarm[0] = 12
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var next;
if (!instance_exists(mebelow))
{
    next = mebelow
    while (next != -4)
    {
        instance_activate_object(next)
        if instance_exists(next)
            next = next.mebelow
        else
            next = noone
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mebelow == noone)
{
    col_pokey = collision_point(x, (bbox_bottom + 8), obj_pokey, 0, 0)
    if (position_meeting(x, (bbox_bottom + 8), obj_pokey) &amp;&amp; col_pokey &amp;&amp; col_pokey.image_index == 1)
    {
        mebelow = collision_point(x, (bbox_bottom + 8), obj_pokey, 0, 0)
        vspeed = 0
        gravity = 0
        alarm[0] = 10
    }
    else
    {
        event_inherited()
        event_user(6)
        if (hspeed &gt; 0)
            direct = 1
        else
            direct = -1
        offset = 0
        offsetnext = 0
        alarm[0] = -1
    }
}
else
{
    instance_activate_object(mebelow)
    if instance_exists(mebelow)
    {
        x = mebelow.x
        y = (mebelow.y - 16)
        direct = mebelow.direct
    }
    else
        mebelow = noone
}
if instance_exists(obj_mario)
{
    if (up == 0)
    {
        if (rotacion &gt; -6)
            rotacion -= 0.6
        else
            up = 1
    }
    if (up == 1)
    {
        if (rotacion &lt; 6)
            rotacion += 0.6
        else
            up = 0
    }
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle" &amp;&amp; modo_lava == 0)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
    modo_lava = 1
}
else if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1 &amp;&amp; modo_lava == 0)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
    modo_lava = 1
}
if (instance_exists(obj_lava_water) &amp;&amp; y &lt;= (obj_lava_water.y - 12) &amp;&amp; obj_lava_water.vspeed &gt; 0 &amp;&amp; (modo_lava == 1 || swimming == 1))
    y = (obj_lava_water.y - 20)
if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.03)
        vspeed = 0.03
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 1)
{
    if instance_exists(mebelow)
    {
        with (mebelow)
            event_user(7)
    }
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow_left, pow_right, pswitch_left, pswitch_right, col_one_left, col_one_right;
if (mebelow == -4)
{
    pow_left = collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_block_pow_hold, 0, 0)
    pow_right = collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_block_pow_hold, 0, 0)
    pswitch_left = collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_pswitch, 0, 0)
    pswitch_right = collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_pswitch, 0, 0)
    if ((hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_solid, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_solid, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_muncher, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_muncher, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_pinchos, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_pinchos, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_cannon, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_cannon, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_bullebill_base, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_bullebill_base, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_onewaygate_right, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_onewaygate_left, 1, 0)) || (hspeed &lt; 0 &amp;&amp; pow_left &amp;&amp; pow_left.held == 0) || (hspeed &gt; 0 &amp;&amp; pow_right &amp;&amp; pow_right.held == 0) || (hspeed &lt; 0 &amp;&amp; pswitch_left &amp;&amp; pswitch_left.held == 0) || (hspeed &gt; 0 &amp;&amp; pswitch_right &amp;&amp; pswitch_right.held == 0))
    {
        col_one_left = collision_rectangle(bbox_right, (bbox_top + a), (bbox_right + 1), (bbox_bottom - 8), obj_onewaygate_left, 0, 0)
        col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + a), bbox_left, (bbox_bottom - 8), obj_onewaygate_right, 0, 0)
        if (hspeed &gt; 0 &amp;&amp; col_one_left)
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_left)
                rot = 1
        }
        if (hspeed &lt; 0 &amp;&amp; col_one_right)
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_right)
                rot = 1
        }
        hspeed = (-hspeed)
        direct = (-direct)
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 8), obj_solid, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 8), obj_solid, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 8), obj_muncher, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 8), obj_muncher, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 8), obj_pinchos, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 8), obj_pinchos, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 8), obj_cannon, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 8), obj_cannon, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 8), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 8), obj_bullebill_base, 1, 0)
            x--
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, y, obj_enemy_dead)
imdead.girar = 1
imdead.direct = direct
imdead.sprite_index = sprite_index
imdead.image_index = image_index
if (dead_h == 0)
    imdead.hspeed = random_range(-1, 1)
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, -1, (round(x) + offset), round(y), direct, 1, rotacion, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
