<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>koopainside = 0
hardness = 0
stomp = 0
edible = 1
fall = 0
midair = 0
s_dry = 2018
direct = -1
prevhspeed = 0
prevvspeed = 0
harmplayer = 0
swimming = 0
dead_h = 0
key = 0
apilar = 0
flip = 0
shell_drop = 0
mytopid = 0
inmune = 0
spd = 2.5
if (global.apariencia == 3)
    image_speed = 0.25
else
    image_speed = 0.2
alarm[10] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mytopid != obj_lighting &amp;&amp; mytopid != obj_rainmaker &amp;&amp; instance_exists(mytopid))
{
    with (mytopid)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mytopid == 1 &amp;&amp; sprite_index != spr_SMB_shell_empty_spiny &amp;&amp; sprite_index != spr_shell_spiny_empty &amp;&amp; sprite_index != spr_SMB3_shell_spiny_empty)
    mytopid = instance_create(x, y, obj_solidtop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inmune = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (swimming == 1)
{
    if (hspeed &gt; 0)
    {
        prevhspeed = 1.5
        hspeed = 1.5
    }
    else if (hspeed &lt; 0)
    {
        prevhspeed = -1.5
        hspeed = -1.5
    }
}
else if (hspeed &gt; 0)
{
    prevhspeed = 3.3
    hspeed = 3.3
}
else if (hspeed &lt; 0)
{
    prevhspeed = -3.3
    hspeed = -3.3
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((!collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom + 8), obj_blockbumper, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_blockparent, 0, 0)))
{
    if (sprite_index == spr_SMB_shell_buzzy || sprite_index == spr_SMB_shell_buzzy_night || sprite_index == spr_SMB3_shell_buzzy || sprite_index == spr_SMB3_shell_buzzy_night || sprite_index == spr_shell_buzzy || sprite_index == spr_NSMBU_shell_buzzy)
        hardness = 1
    else
        hardness = 0
}
else
    alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var check, check_2;
if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship") || (instance_exists(obj_lava_water) &amp;&amp; y &gt;= (obj_lava_water.y + 16) &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
    swimming = 1
else
    swimming = 0
if (hspeed &gt; 0 &amp;&amp; hspeed &lt; spd)
{
    hspeed += 0.05
    if (hspeed &gt;= spd)
        hspeed = spd
}
else if (hspeed &lt; 0 &amp;&amp; hspeed &gt; (-spd))
{
    hspeed -= 0.05
    if (hspeed &lt;= (-spd))
        hspeed = (-spd)
}
if (fall == 0 &amp;&amp; vspeed == 0 &amp;&amp; gravity == 0 &amp;&amp; instance_exists(obj_mario))
{
    if ((!collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 1), obj_solidtop, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 1), obj_physicssolid, 1, 0)))
    {
        move_snap(4, 2)
        y += 4
        fall = 1
    }
}
else if (fall == 1 &amp;&amp; gravity == 0)
    fall = 0
prevhspeed = hspeed
prevvspeed = vspeed
event_user(3)
if (!instance_exists(obj_deadmario))
    event_user(4)
else
{
    gravity = 0
    speed = 0
}
if (hspeed != prevhspeed)
{
    if (!outside_view())
    {
        audio_stop_sound(scr_snd_bump())
        audio_play_sound(scr_snd_bump(), 0, false)
    }
    hardness = 100
    alarm[0] = 2
    instance_create(x, y, obj_blockbumper)
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle")
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        image_index = other.image_index
        image_speed = 0
        direct = 1
    }
    instance_destroy()
}
if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt; (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1)
{
    if (global.apariencia != 0)
        instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        image_index = other.image_index
        image_speed = 0
        direct = 1
    }
    instance_destroy()
}
if (mytopid == obj_lighting)
    exit
if (mytopid != obj_lighting &amp;&amp; mytopid != obj_rainmaker &amp;&amp; instance_exists(mytopid) &amp;&amp; instance_exists(obj_mario))
{
    mytopid.x = x
    mytopid.y = y
    check = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_solidtop, 0, 0)
    check_2 = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_physicssolid, 0, 0)
    if ((check &amp;&amp; check != mytopid) || check_2)
        exit
    if (collision_rectangle(bbox_left, (bbox_top - 8), bbox_right, (bbox_top + 7), obj_mario, 0, 0) &amp;&amp; obj_mario.y &lt; (y - 28) &amp;&amp; obj_mario.state &lt; 2)
    {
        if (vspeed == 0)
            obj_mario.y = ceil((bbox_top - 32))
        else
            obj_mario.y = ceil((bbox_top - (32 - vspeed)))
        if ((hspeed &gt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_right + hspeed), obj_mario.bbox_top, (obj_mario.bbox_right + hspeed), (obj_mario.bbox_bottom - 1), obj_solid, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_left + hspeed), obj_mario.bbox_top, (obj_mario.bbox_left + hspeed), (obj_mario.bbox_bottom - 1), obj_solid, 0, 0))) || (hspeed &gt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_right + hspeed), obj_mario.bbox_top, (obj_mario.bbox_right + hspeed), (obj_mario.bbox_bottom - 1), obj_physicssolid, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_left + hspeed), obj_mario.bbox_top, (obj_mario.bbox_left + hspeed), (obj_mario.bbox_bottom - 1), obj_physicssolid, 0, 0))) || (hspeed &gt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_right + hspeed), obj_mario.bbox_top, (obj_mario.bbox_right + hspeed), (obj_mario.bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_left + hspeed), obj_mario.bbox_top, (obj_mario.bbox_left + hspeed), (obj_mario.bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (hspeed &gt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_right + hspeed), obj_mario.bbox_top, (obj_mario.bbox_right + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_left, 0, 0))) || (hspeed &lt; 0 &amp;&amp; (!collision_rectangle((obj_mario.bbox_left + hspeed), obj_mario.bbox_top, (obj_mario.bbox_left + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_right, 0, 0))))
            obj_mario.x += hspeed
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed != 0 &amp;&amp; instance_exists(id) &amp;&amp; other.hardness &lt; 99)
{
    if instance_exists(obj_mario)
    {
        switch global.apariencia
        {
            case 0:
                scr_musicalscale_SMB3(obj_mario.id, other.id, 1)
                break
            case 1:
                scr_musicalscale_SMB3(obj_mario.id, other.id, 1)
                break
            case 2:
                scr_musicalscale(obj_mario.id, other.id, 1)
                break
            case 3:
                scr_musicalscale_kick(obj_mario.id, other.id, 1)
                break
        }

    }
    with (other.id)
        event_user(0)
}
if (other.object_index == obj_shell_held)
{
    audio_stop_sound(scr_snd_kick())
    audio_play_sound(scr_snd_kick(), 0, false)
    with (instance_create((round((bbox_left + bbox_right)) / 2), ((round((bbox_top + bbox_bottom)) / 2) - 8), obj_smoke))
        sprite_index = spr_spinthump
    with (other.id)
        event_user(0)
    event_user(0)
    with (instance_create((x - 8), y, obj_score))
        event_user(5)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bbox_bottom &lt; ((other.bbox_top - other.vspeed) + 5) &amp;&amp; vspeed &gt; 0 &amp;&amp; global.apariencia != 3 &amp;&amp; other.helmet == 0 &amp;&amp; (sprite_index == spr_shell_buzzy_empty || sprite_index == spr_SMB3_shell_empty || sprite_index == spr_SMB3_shell_empty_night || sprite_index == spr_SMB_shell_empty || sprite_index == spr_SMB_shell_empty_night))
{
    audio_play_sound(snd_helmet_add, 0, false)
    obj_mario.helmet = 1
    instance_create(obj_mario.x, (obj_mario.y + 15), obj_helmet)
    instance_destroy()
}
else if (bbox_bottom &lt; ((other.bbox_top - other.vspeed) + 5) &amp;&amp; vspeed &gt; 0 &amp;&amp; global.apariencia != 3 &amp;&amp; other.helmet == 0 &amp;&amp; (sprite_index == spr_SMB_shell_empty_spiny || sprite_index == spr_SMB3_shell_spiny_empty || sprite_index == spr_shell_spiny_empty))
{
    audio_play_sound(snd_helmet_spiny_add, 0, false)
    obj_mario.helmet = 1
    instance_create(obj_mario.x, (obj_mario.y + 15), obj_helmet_spiny)
    with (instance_create((obj_mario.x - 4), (obj_mario.y + 14), obj_smoke))
        sprite_index = spr_sparkles_helmet
    instance_destroy()
}
else if (inmune == 0)
    event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_shell_buzzy_empty || sprite_index == spr_SMB3_shell_empty || sprite_index == spr_SMB3_shell_empty_night || sprite_index == spr_SMB_shell_empty || sprite_index == spr_SMB_shell_empty_night)
    imheld = instance_create(x, (y - 1), obj_shell_empty)
else
{
    imheld = instance_create(x, (y - 1), obj_shell)
    imheld.sprite_index = sprite_index
    imheld.flip = 1
}
if ((!collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_solid, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_physicssolid, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_solidphy, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_top - 1), bbox_right, bbox_top, obj_bullebill_base, 1, 0)))
{
    if (swimming == 1)
        imheld.vspeed = -1.8
    else
        imheld.vspeed = -3
}
if ((other.bbox_left + (other.bbox_right / 2)) &lt;= (bbox_left + (bbox_right / 2)))
    imheld.hspeed = 0.5
else if ((other.bbox_left + (other.bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
    imheld.hspeed = -0.5
if (sprite_index != spr_shell_buzzy_empty &amp;&amp; sprite_index != spr_SMB3_shell_empty &amp;&amp; sprite_index != spr_SMB3_shell_empty_night &amp;&amp; sprite_index != spr_SMB_shell_empty &amp;&amp; sprite_index != spr_SMB_shell_empty_night)
{
    if (global.apariencia == 2)
    {
        if (koopainside != 0)
        {
            imheld.koopainside = koopainside
            imheld.alarm[3] = 540
            imheld.alarm[4] = 600
        }
    }
    else
    {
        imheld.koopainside = koopainside
        imheld.alarm[3] = 540
        imheld.alarm[4] = 600
    }
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom, block;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_height - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_height - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        if (!variable_instance_exists(object_index, "bouncy"))
            vspeed = 0
        else if (vspeed &gt; 0.5)
            vspeed = ((-vspeed) / 2)
        else
            vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_top)
                rot = 1
        }
    }
}
else if (!swimming)
{
    gravity = 0.22
    if (vspeed &gt; 7)
        vspeed = 7
}
else
{
    gravity = 0.02
    if (vspeed &gt; 2)
        vspeed = 2
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_hurtsolid2)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        block = collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, (bbox_top - 1), obj_blockparent, 0, 0)
        if (block &amp;&amp; (object_get_parent(object_index) == 195 || object_get_parent(object_index) == 197))
        {
            if (block.ready == 0)
            {
                with (block)
                    event_user(2)
            }
        }
        vspeed = 0
    }
}
if ((bbox_top - 16) &gt; room_height || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 32) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1))))
    instance_destroy()
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    hspeed = (-hspeed)
    if ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))
    {
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x--
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
            x--
    }
    if ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_physicssolid, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)))
    {
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
            x++
    }
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_SMB_shell_empty_spiny || sprite_index == spr_SMB3_shell_spiny_empty || sprite_index == spr_shell_spiny_empty)
{
    if (obj_mario.stompstyle == 1)
    {
        with (other.id)
            event_user(1)
        audio_play_sound(snd_stomp, 0, false)
        instance_create(other.x, (other.y + 22), obj_spinthump)
    }
    else
    {
        with (obj_mario)
            event_user(0)
    }
}
else if (mytopid == 0)
{
    if (sprite_index == spr_NSMBU_shell_buzzy_empty || sprite_index == spr_shell_buzzy_empty || sprite_index == spr_SMB3_shell_empty || sprite_index == spr_SMB3_shell_empty_night || sprite_index == spr_SMB_shell_empty || sprite_index == spr_SMB_shell_empty_night)
    {
        with (instance_create(x, y, obj_shell_empty))
            inwall = 1
    }
    else
    {
        with (instance_create(x, y, obj_shell))
        {
            sprite_index = other.sprite_index
            flip = other.flip
            inwall = 1
            if (global.apariencia == 2)
            {
                if (other.koopainside &lt; 0)
                {
                    koopainside = other.koopainside
                    alarm[3] = 540
                    alarm[4] = 600
                }
            }
            else
            {
                alarm[3] = 540
                alarm[4] = 640
            }
            if (other.koopainside == 1 || other.koopainside == 2)
                koopainside = 0
        }
    }
    if (koopainside == 1)
    {
        with (instance_create((x - 8), y, obj_beachkoopa))
        {
            sprite_index = spr_beachkoopa
            if ((obj_mario.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
                hspeed = 3
            else if ((obj_mario.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
                hspeed = -3
            alarm[11] = 30
            ready = 0
        }
    }
    else if (koopainside == 2)
    {
        with (instance_create((x - 8), y, obj_beachkoopa_red))
        {
            sprite_index = spr_beachkoopa_red
            if ((obj_mario.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
                hspeed = 3
            else if ((obj_mario.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
                hspeed = -3
            alarm[11] = 30
            ready = 0
        }
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, (y + 8), obj_enemy_dead)
imdead.girar = 1
switch sprite_index
{
    case spr_SMB_shell:
        imdead.sprite_index = spr_SMB_shell_deads
        break
    case 300:
        imdead.sprite_index = spr_SMB_shell_red_deads
        break
    case 286:
        imdead.sprite_index = sprite_index
        break
    case 288:
        imdead.sprite_index = sprite_index
        break
    case 312:
        imdead.sprite_index = sprite_index
        break
    case 313:
        imdead.sprite_index = sprite_index
        break
    case 317:
        imdead.sprite_index = spr_SMB_shell_buzzy_deads
        imdead.image_index = 0
        imdead.image_speed = 0
        break
    case 318:
        imdead.sprite_index = spr_SMB_shell_buzzy_deads
        imdead.image_index = 1
        imdead.image_speed = 0
        break
    case 321:
        imdead.sprite_index = spr_SMB_shell_spiny_deads
        break
    case 322:
        imdead.sprite_index = spr_SMB_shell_buzzy_empty_deads
        break
    case 323:
        imdead.sprite_index = spr_SMB_shell_buzzy_empty_night_deads
        break
    case 324:
        imdead.sprite_index = spr_SMB_shell_spiny_empty_deads
        break
    case 1085:
        imdead.sprite_index = spr_SMB3_koopa_deads
        break
    case 1087:
        imdead.sprite_index = spr_SMB3_koopa_red_deads
        break
    case 1073:
        imdead.sprite_index = sprite_index
        break
    case 1075:
        imdead.sprite_index = sprite_index
        break
    case 1108:
        imdead.sprite_index = spr_SMB3_shell_spiny_deads
        break
    case 1099:
        imdead.sprite_index = sprite_index
        break
    case 1100:
        imdead.sprite_index = sprite_index
        break
    case 1104:
        imdead.sprite_index = spr_SMB3_shell_buzzy_deads
        imdead.image_index = 0
        imdead.image_speed = 0
        break
    case 1105:
        imdead.sprite_index = spr_SMB3_shell_buzzy_deads
        imdead.image_index = 1
        imdead.image_speed = 0
        break
    case 1109:
        imdead.sprite_index = spr_SMB3_shell_buzzy_empty_deads
        break
    case 1110:
        imdead.sprite_index = spr_SMB3_shell_buzzy_empty_night_deads
        break
    case 1111:
        imdead.sprite_index = spr_SMB3_shell_spiny_empty_deads
        break
    case 1869:
        imdead.sprite_index = spr_shell_deads
        break
    case 1871:
        imdead.sprite_index = spr_shell_red_deads
        break
    case 1852:
        imdead.sprite_index = sprite_index
        break
    case 1854:
        imdead.sprite_index = sprite_index
        break
    case 1889:
        imdead.sprite_index = spr_shell_buzzy_deads
        break
    case 1886:
        imdead.sprite_index = sprite_index
        break
    case 1894:
        imdead.sprite_index = spr_shell_spiny_deads
        break
    case 1895:
        imdead.sprite_index = spr_buzzy_empty_deads
        break
    case 1896:
        imdead.sprite_index = spr_spiny_empty_deads
        break
    case 3371:
        imdead.sprite_index = spr_NSMBU_shell_deads
        break
    case 3372:
        imdead.sprite_index = spr_NSMBU_shell_red_deads
        break
    case 3363:
        imdead.sprite_index = sprite_index
        break
    case 3364:
        imdead.sprite_index = sprite_index
        break
    case 3390:
        imdead.sprite_index = spr_NSMBU_shell_spiny_deads
        break
    case 3386:
        imdead.sprite_index = spr_NSMBU_shell_buzzy_deads
        break
    case 3382:
        imdead.sprite_index = sprite_index
        break
    case 3393:
        imdead.sprite_index = spr_NSMBU_shell_buzzy_empty_deads
        break
    case 3392:
        imdead.sprite_index = spr_NSMBU_shell_spiny_empty_deads
        break
    default:
        imdead.sprite_index = spr_shell_deads
}

if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_height &lt; 20)
{
    if (flip == 0)
        draw_sprite_ext(sprite_index, -1, round(x), y, direct, 1, 0, c_white, image_alpha)
    else
        draw_sprite_ext(sprite_index, -1, round(x), (y + 17), direct, -1, 0, c_white, image_alpha)
}
else if (flip == 0)
    draw_sprite_ext(sprite_index, -1, round(x), y, direct, 1, 0, c_white, image_alpha)
else
    draw_sprite_ext(sprite_index, -1, round(x), y, direct, -1, 0, c_white, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-8,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
