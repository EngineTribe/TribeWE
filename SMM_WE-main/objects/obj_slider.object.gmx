<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_big_slide</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_smallmask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = 0
with (obj_mario)
{
    invincible = 1
    disablecontrols = 1
    skidnow = 2
}
hspeed = obj_mario.hspeed
direct = obj_mario.direct
audio_stop_sound(snd_skid)
hitpoint = 0
sprite_index = scr_marioslide()
alarm[0] = 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_mario)
{
    invincible = 0
    disablecontrols = 0
    skidnow = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
image_index = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if collision_rectangle((bbox_left - 3), bbox_bottom, bbox_left, (bbox_bottom + 2), obj_slopeparent, 1, 0)
{
    with (instance_create((x - 8), (y + 24), obj_smoke))
    {
        sprite_index = spr_skidsmoke
        depth = -6
    }
}
if collision_rectangle(bbox_right, bbox_bottom, (bbox_right + 3), (bbox_bottom + 2), obj_slopeparent, 1, 0)
{
    with (instance_create((x + 1), (y + 24), obj_smoke))
    {
        sprite_index = spr_skidsmoke
        depth = -6
    }
}
alarm[0] = 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_mario) &amp;&amp; keyboard_check(global.abajo))
{
    obj_mario.hspeed = hspeed
    obj_mario.direct = direct
    obj_mario.x = x
    y = obj_mario.y
    obj_mario.invincible = 1
}
else
{
    instance_destroy()
    exit
}
if (type == 0)
{
    sprite_index = scr_marioslide()
    if (global.powerup == 0)
        mask_index = spr_smallmask
    else
        mask_index = spr_bigmask
}
else
{
    if (keyboard_check_pressed(global.saltar) &amp;&amp; obj_mario.state &lt; 2)
    {
        audio_play_sound(snd_jump, 0, false)
        with (obj_mario)
        {
            vspeed = -3
            state = 2
        }
    }
    if (type == 2)
    {
        if (hspeed &gt; 0)
            direct = 1
        else
            direct = -1
    }
}
if collision_rectangle(bbox_right, bbox_bottom, bbox_right, (bbox_bottom + 2), obj_slopeparent, 1, 0)
    hspeed -= 0.1
if collision_rectangle(bbox_left, bbox_bottom, bbox_left, (bbox_bottom + 2), obj_slopeparent, 1, 0)
    hspeed += 0.1
if (hspeed &gt; 3)
    hspeed = 3
if (hspeed &lt; -3)
    hspeed = -3
if (obj_mario.state &lt; 2 &amp;&amp; (!collision_rectangle(bbox_right, bbox_bottom, bbox_right, (bbox_bottom + 2), obj_slopeparent, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_left, bbox_bottom, bbox_left, (bbox_bottom + 2), obj_slopeparent, 1, 0)))
{
    if (type == 0)
        friction = 0.1
    else
        friction = 0.02
    if (abs(hspeed) &lt; 0.05)
        instance_destroy()
}
else
    friction = 0
if ((hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 1), obj_solid, 0, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle(((bbox_left - 1) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0)))
{
    if (type == 1)
    {
        audio_play_sound(snd_bump, 0, false)
        instance_create((x - 8), (y + 16), obj_blockbumper)
        with (instance_create((x + (8 * sign(hspeed))), (y + 24), obj_smoke))
            sprite_index = spr_shellbump
        hspeed = (-hspeed)
    }
    else
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.hardness &lt; 99)
{
    scr_musicalscale(id, other.id, 1)
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.3
obj_mario.isduck = 1
alarm[1] = 6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_mario)
{
    obj_mario.sprite_index = sprite_index
    obj_mario.image_index = image_index
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-8,-16</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
