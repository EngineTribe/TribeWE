<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spike_ball2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>spr_spike_ball2</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.bg_level == "castle" || global.bg_level == "ghost" || global.bg_level == "underground" || global.modo_noche == 1)
    sud_imagen = 1
else
    sud_imagen = 0
switch global.apariencia
{
    case 0:
        imagen = 333
        break
    case 1:
        imagen = 1169
        break
    case 2:
        imagen = 1911
        break
    case 3:
        imagen = 3436
        break
}

image_speed = 0
s_part = 2603
spike_alone = 0
spike_alone_a = 0
fisica = 0
direct_spike = -1
angle = 0
ready = 0
enemy_dead = 0
swimming = 0
modo_lava = 0
paracaidas = 0
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (spike_alone == 0)
{
    if (global.apariencia == 2)
    {
        if (global.bg_level == "underwater" || (global.bg_level == "sky" &amp;&amp; global.modo_noche == 1) || (global.bg_level == "airship" &amp;&amp; global.modo_noche == 1))
            vspeed = -1
        else
            vspeed = -2.5
    }
}
else if (paracaidas == 1)
{
    hspeed = -0.5
    ready = 1
    fisica = 1
}
else
{
    ready = 1
    fisica = 1
    alarm[0] = 10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemy_dead = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ready &gt; 0)
{
    spikeball = collision_rectangle(bbox_left, bbox_bottom, bbox_right, ((bbox_bottom + 1) + vspeed), obj_pswitch, 1, 0)
    if (spikeball &amp;&amp; spikeball.held == 0 &amp;&amp; spikeball.inup == 0 &amp;&amp; spikeball.inmune == 0 &amp;&amp; bbox_bottom &lt; spikeball.bbox_top &amp;&amp; vspeed &gt;= 0)
    {
        with (spikeball)
            event_user(7)
    }
    if (global.bg_level == "underwater" || (instance_exists(obj_lava_water) &amp;&amp; (y + 8) &gt;= (obj_lava_water.y - 12)) || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship") || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 4) &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
        swimming = 1
    else
        swimming = 0
    if (global.modo_noche == 1)
    {
        if ((!instance_exists(obj_mario)) || obj_mario.x &lt; x)
        {
            hspeed -= 0.0224
            if (swimming == 1)
            {
                if (hspeed &lt; -1)
                    hspeed = -1
            }
            else if (hspeed &lt; -1.2)
                hspeed = -1.2
        }
        else
        {
            hspeed += 0.0324
            if (swimming == 1)
            {
                if (hspeed &gt; 1)
                    hspeed = 1
            }
            else if (hspeed &gt; 1.2)
                hspeed = 1.2
        }
    }
    if ((ready == 1 &amp;&amp; global.apariencia &gt; 1) || (ready == 1 &amp;&amp; fisica == 1))
        event_inherited()
    else if (ready == 1 &amp;&amp; global.apariencia &lt; 2)
        event_user(3)
    if (paracaidas == 0)
    {
        if (spike_alone == 0)
        {
            if (ready == 1)
                angle -= (5 * sign(hspeed))
        }
        else if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; x)
            angle -= 5
        else
            angle += 5
        if (spike_alone_a == 1)
        {
            if (hspeed &gt; 1.2)
            {
                hspeed = 1.2
                spike_alone_a = 0
            }
            else
                hspeed += 0.125
        }
        else if (spike_alone_a == 2)
        {
            if (hspeed &lt; -1.2)
            {
                hspeed = -1.2
                spike_alone_a = 0
            }
            else
                hspeed -= 0.125
        }
    }
    if (swimming == 1)
    {
        if (hspeed &gt; 1)
        {
            hspeed -= 0.08
            if (hspeed &lt;= 1)
                hspeed = 1
        }
        else if (hspeed &lt; -1)
        {
            hspeed += 0.08
            if (hspeed &gt;= -1)
                hspeed = -1
        }
    }
    else if (hspeed &gt; 2)
    {
        hspeed -= 0.08
        if (hspeed &lt;= 1.2)
            hspeed = 1.2
    }
    else if (hspeed &lt; -1.2)
    {
        hspeed += 0.08
        if (hspeed &gt;= -1.2)
            hspeed = -1.2
    }
    if (modo_lava == 0 &amp;&amp; instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 0)
    {
        modo_lava = 2
        if (global.apariencia != 0)
            instance_create(x, (obj_lava_water.y - 26), obj_splash_agua)
    }
    else if ((modo_lava == 0 &amp;&amp; instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "castle") || (modo_lava == 0 &amp;&amp; instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &gt;= (obj_lava_water.y - 12) &amp;&amp; global.bg_level == "forest" &amp;&amp; global.modo_noche == 1))
    {
        modo_lava = 1
        if (global.apariencia != 0)
        {
            if (global.bg_level == "castle")
                instance_create(x, (obj_lava_water.y - 26), obj_splash_lava)
            else
                instance_create(x, (obj_lava_water.y - 26), obj_splash_posion)
        }
    }
    else if ((bbox_top - 16) &gt; room_height)
        instance_destroy()
    if (instance_exists(obj_lava_water) &amp;&amp; (bbox_bottom - 8) &lt;= (obj_lava_water.y - 12) &amp;&amp; obj_lava_water.vspeed &gt; 0 &amp;&amp; (modo_lava == 1 || swimming == 1))
        y = (obj_lava_water.y - 20)
    if (paracaidas == 1)
    {
        if (x &gt; (xstart + 16))
        {
            if (hspeed &lt; -0.5)
                hspeed = -0.5
            else
                hspeed -= 0.015
        }
        else if (x &lt; (xstart - 16))
        {
            if (hspeed &gt; 0.5)
                hspeed = 0.5
            else
                hspeed += 0.015
        }
        if (gravity == 0)
        {
            instance_create(x, y, obj_paracaidas_go)
            paracaidas = 0
            ready = 1
            fisica = 1
            alarm[0] = 10
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_invincibility">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent_held">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enemy_dead == 1)
{
    audio_play_sound(scr_snd_kick(), 0, false)
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enemy_dead == 1 &amp;&amp; other.hardness &lt; 99 &amp;&amp; other.object_index != obj_grinder &amp;&amp; other.object_index != obj_podoboo &amp;&amp; other.object_index != obj_boo &amp;&amp; other.object_index != obj_banzaibill &amp;&amp; other.object_index != obj_bulletbill)
{
    audio_play_sound(scr_snd_kick(), 0, false)
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_physicsparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index == obj_spike_ball &amp;&amp; ready == 1)
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.bbox_bottom &lt; ((bbox_top - vspeed) + 5) &amp;&amp; (global.yoshi &gt; 0 || other.stompstyle == 1))
{
    with (other.id)
        event_user(1)
    audio_play_sound(scr_snd_stomp(), 0, false)
    instance_create(other.x, (other.y + 22), obj_spinthump)
}
else if instance_exists(obj_invincibility)
    event_user(0)
else
{
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom, block;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))))
{
    gravity = 0
    if (hspeed == 0 &amp;&amp; spike_alone == 0)
        hspeed = (1 * sign(direct_spike))
    if (spike_alone == 1 &amp;&amp; ready == 1)
    {
        if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; x)
            spike_alone_a = 1
        else
            spike_alone_a = 2
        spike_alone = 0
    }
    if (vspeed &gt; 0.25)
        vspeed = ((-vspeed) / 2)
    else if (vspeed &gt; 0 &amp;&amp; vspeed &lt;= 0.5)
    {
        vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
        if (spike_alone == 1 &amp;&amp; ready == 1)
        {
            if (instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; x)
                spike_alone_a = 1
            else
                spike_alone_a = 2
            spike_alone = 0
        }
    }
}
else if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.1)
        vspeed = 0.1
}
else if (paracaidas == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.03
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        block = collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, (bbox_top - 1), obj_blockparent, 0, 0)
        if (block &amp;&amp; block.ready == 0)
        {
            with (block)
                event_user(2)
        }
        vspeed = 0
    }
}
event_user(14)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right, pow_right, pow_left, block_right, block_left, rock_right, rock_left;
if (((hspeed &lt; 0 &amp;&amp; collision_rectangle(((bbox_left - 1) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_solid, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle(((bbox_left - 1) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_physicssolid, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_physicssolid, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle(((bbox_left - 1) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solidphy, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_solidphy, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle(((bbox_left - 1) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_bullebill_base, 1, 0)) || (hspeed &lt; 0 &amp;&amp; collision_rectangle(((bbox_left - 1) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)) || (hspeed &gt; 0 &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_onewaygate_left, 1, 0))) &amp;&amp; ready == 1)
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if (hspeed &gt; 0 &amp;&amp; col_one_left)
    {
        with (col_one_left)
        {
            rot = 1
            event_user(0)
        }
    }
    if (hspeed &lt; 0 &amp;&amp; col_one_right)
    {
        with (col_one_right)
        {
            rot = 1
            event_user(0)
        }
    }
    pow_right = collision_rectangle(((bbox_left - 3) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
    pow_left = collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
    if (hspeed &lt; 0 &amp;&amp; pow_right &amp;&amp; pow_right.held == 0)
    {
        with (pow_right)
        {
            explode = 1
            event_user(6)
        }
    }
    if (hspeed &gt; 0 &amp;&amp; pow_left &amp;&amp; pow_left.held == 0)
    {
        with (pow_left)
        {
            explode = 1
            event_user(6)
        }
    }
    block_right = collision_rectangle(((bbox_left - 3) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_blockparent, 1, 0)
    block_left = collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_blockparent, 1, 0)
    rock_right = collision_rectangle(((bbox_left - 3) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_rockparent, 1, 0)
    rock_left = collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_rockparent, 1, 0)
    if (hspeed &lt; 0 &amp;&amp; rock_right)
    {
        with (rock_right)
            alarm[0] = 1
    }
    if (hspeed &gt; 0 &amp;&amp; rock_left)
    {
        with (rock_left)
            alarm[0] = 1
    }
    if (hspeed &lt; 0 &amp;&amp; block_right &amp;&amp; block_right.ready == 0)
    {
        if (block_right.object_index == obj_flipblock &amp;&amp; global.apariencia == 1)
        {
            with (block_right)
                alarm[2] = 1
        }
        else if (block_right.object_index == obj_onoffblock)
        {
            with (block_right)
                event_user(1)
        }
        else
        {
            with (block_right)
            {
                ready = 1
                vspeed = -2
                if (object_index == obj_noteblock)
                    alarm[0] = 7
                else
                    alarm[0] = 4
                event_user(0)
            }
        }
    }
    else if (hspeed &gt; 0 &amp;&amp; block_left &amp;&amp; block_left.ready == 0)
    {
        if (block_left.object_index == obj_flipblock &amp;&amp; global.apariencia == 1)
        {
            with (block_left)
                alarm[2] = 1
        }
        else if (block_left.object_index == obj_onoffblock)
        {
            with (block_left)
                event_user(1)
        }
        else
        {
            with (block_left)
            {
                ready = 1
                vspeed = -2
                if (object_index == obj_noteblock)
                    alarm[0] = 7
                else
                    alarm[0] = 4
                event_user(0)
            }
        }
    }
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(scr_snd_kick())
audio_play_sound(scr_snd_kick(), 0, false)
if (global.apariencia &lt; 2)
{
    if (global.bg_level == "castle" || global.bg_level == "ghost" || global.bg_level == "underground" || global.modo_noche == 1)
        s_part = spr_SMB3_spike_ball_part_night
    else
        s_part = spr_SMB3_spike_ball_part
}
else if (global.apariencia == 3)
    s_part = 3779
else
    s_part = 2603
imdead = instance_create((x + 4), (y + 4), obj_enemy_dead)
imdead.girar = 1
imdead.sprite_index = s_part
imdead.image_speed = 0
imdead.image_index = 0
imdead.direct = 1
imdead.gravity = 0.16
imdead2 = instance_create((x - 4), (y + 12), obj_enemy_dead)
imdead2.girar = 1
imdead2.sprite_index = s_part
imdead2.image_speed = 0
imdead2.image_index = 1
imdead2.direct = 1
imdead2.gravity = 0.16
imdead3 = instance_create((x + 6), (y + 2), obj_enemy_dead)
imdead3.girar = 1
imdead3.sprite_index = s_part
imdead3.image_speed = 0
imdead3.image_index = 2
imdead3.direct = 1
imdead3.gravity = 0.16
imdead4 = instance_create((x + 6), (y + 14), obj_enemy_dead)
imdead4.girar = 1
imdead4.sprite_index = s_part
imdead4.image_speed = 0
imdead4.image_index = 2
imdead4.direct = 1
imdead4.gravity = 0.16
imdead5 = instance_create((x - 6), (y + 2), obj_enemy_dead)
imdead5.girar = 1
imdead5.sprite_index = s_part
imdead5.image_speed = 0
imdead5.image_index = 1
imdead5.direct = 1
imdead5.gravity = 0.16
imdead6 = instance_create((x - 6), (y + 14), obj_enemy_dead)
imdead6.girar = 1
imdead6.sprite_index = s_part
imdead6.image_speed = 0
imdead6.image_index = 1
imdead6.direct = 1
imdead6.gravity = 0.16
imdead.vspeed = -2
imdead2.vspeed = -0.6
imdead3.hspeed = 0.6
imdead4.hspeed = 0.6
imdead5.hspeed = -0.6
imdead6.hspeed = -0.6
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(imagen, sud_imagen, round(x), (y + 8), 1, 1, angle, c_white, 1)
if (paracaidas == 1)
    draw_sprite_ext(spr_paracaidas, global.apariencia, x, y, 1, 1, image_angle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
