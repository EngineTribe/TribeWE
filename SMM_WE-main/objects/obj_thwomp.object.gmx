<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_thwomp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.apariencia
{
    case 0:
        sprite_index = spr_SMB_thwomp
        s_thwomp = 344
        s_thwomp_h = 345
        break
    case 1:
        sprite_index = spr_SMB3_thwomp
        s_thwomp = 1118
        s_thwomp_h = 1119
        break
    case 2:
        sprite_index = spr_thwomp
        s_thwomp = 1935
        s_thwomp_h = 1936
        break
    case 3:
        sprite_index = spr_NSMBU_thwomp
        s_thwomp = 3405
        s_thwomp_h = 3406
        break
}

hardness = 99
stomp = 2
edible = 2
direct = 1
swimming = 0
ready = 0
image_speed = 0
image_index = 0
modo_lava = 0
wings = 0
wings_anim = 0
paracaidas = 0
dead_h = 1
apilar = 0
salpi = 0
salpicadura = 0
direct_t = 1
direct = 1
groundpount_cont = 0
sprite_l = 1424
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (direct_t != 1)
{
    switch global.apariencia
    {
        case 0:
            sprite_index = spr_SMB_thwomp_h
            break
        case 1:
            sprite_index = spr_SMB3_thwomp_h
            break
        case 2:
            sprite_index = spr_thwomp_h
            break
        case 3:
            sprite_index = spr_NSMBU_thwomp_h
            break
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sprite_l;
if (salpicadura == 1)
{
    if instance_exists(obj_lava_water)
    {
        if (obj_lava_water.vspeed != 0)
        {
            if (global.bg_level != "forest" &amp;&amp; (!audio_is_playing(snd_podoboo)))
                audio_play_sound(snd_podoboo, 0, false)
            switch global.bg_level
            {
                case "castle":
                    switch global.apariencia
                    {
                        case 1:
                            sprite_l = 1424
                            break
                        case 3:
                            sprite_l = 3765
                            break
                        default:
                            sprite_l = 2605
                    }

                    break
                default:
                    if (global.modo_noche == 1)
                    {
                        switch global.apariencia
                        {
                            case 1:
                                sprite_l = 1425
                                break
                            case 3:
                                sprite_l = 3766
                                break
                            default:
                                sprite_l = 2606
                        }

                        break
                    }
                    else
                    {
                        switch global.apariencia
                        {
                            case 1:
                                sprite_l = 1426
                                break
                            case 3:
                                sprite_l = 3764
                                break
                            default:
                                sprite_l = 2607
                        }

                    }
            }

            with (instance_create((x - 16), (obj_lava_water.y - 16), obj_smoke))
            {
                sprite_index = other.sprite_l
                depth = -9
            }
            with (instance_create((x + 16), (obj_lava_water.y - 16), obj_smoke))
            {
                sprite_index = other.sprite_l
                depth = -9
            }
            alarm[1] = 12
        }
        else
            alarm[1] = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ready == 2)
{
    switch direct_t
    {
        case 1:
            vspeed = -1
            break
        case 2:
            hspeed = 1
            break
        case 3:
            hspeed = -1
            break
    }

    ready = 3
    image_index = 0
    direct = 1
    groundpount_cont = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_mario)
{
    switch direct_t
    {
        case 1:
            sprite_index = s_thwomp
            if (ready == 0)
            {
                if (obj_mario.x &gt; (bbox_left - 48) &amp;&amp; obj_mario.x &lt; (bbox_left - 32) &amp;&amp; obj_mario.y &gt; (bbox_top - 1))
                {
                    image_index = 1
                    direct = 1
                }
                else if (obj_mario.x &lt; (bbox_right + 48) &amp;&amp; obj_mario.x &gt; (bbox_right + 32) &amp;&amp; obj_mario.y &gt; (bbox_top - 1))
                {
                    image_index = 1
                    direct = -1
                }
                else
                {
                    image_index = 0
                    direct = 1
                }
            }
            else if (ready == 1)
            {
                image_index = 2
                direct = 1
            }
            break
        case 2:
            sprite_index = s_thwomp_h
            if (ready == 0)
            {
                if (obj_mario.x &gt; (bbox_left - 150) &amp;&amp; obj_mario.x &lt; (bbox_left + 4) &amp;&amp; obj_mario.y &gt; (bbox_top - 40) &amp;&amp; obj_mario.y &lt; (bbox_bottom - 7))
                {
                    image_index = 1
                    direct = 1
                }
                else
                {
                    image_index = 0
                    direct = 1
                }
            }
            else if (ready == 1)
            {
                image_index = 2
                direct = 1
            }
            break
        case 3:
            sprite_index = s_thwomp_h
            if (ready == 0)
            {
                if (obj_mario.x &lt; (bbox_right + 150) &amp;&amp; obj_mario.x &gt; (bbox_right - 4) &amp;&amp; obj_mario.y &gt; (bbox_top - 40) &amp;&amp; obj_mario.y &lt; (bbox_bottom - 7))
                {
                    image_index = 1
                    direct = -1
                }
                else
                {
                    image_index = 0
                    direct = -1
                }
            }
            else if (ready == 1)
            {
                image_index = 2
                direct = -1
            }
            break
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow, ground_block, spd;
if (global.bg_level == "underwater" || (global.modo_noche == 1 &amp;&amp; global.bg_level == "sky") || (global.modo_noche == 1 &amp;&amp; global.bg_level == "airship") || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 16) &amp;&amp; ((global.bg_level == "forest" &amp;&amp; global.modo_noche == 0) || global.bg_level == "beach")))
    swimming = 1
else
    swimming = 0
if (collision_rectangle(bbox_left, (bbox_top + 2), bbox_right, (bbox_bottom - 1), obj_lava_water, 0, 0) &amp;&amp; global.apariencia != 0)
{
    if (salpi == 0)
    {
        salpicadura = 1
        salpi = 1
        alarm[1] = 1
    }
}
else
{
    salpi = 0
    salpicadura = 0
}
switch direct_t
{
    case 1:
        if (ready &lt; 2)
            event_user(4)
        if (ready == 0 &amp;&amp; instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; (bbox_left - 32) &amp;&amp; obj_mario.x &lt; (bbox_right + 32) &amp;&amp; y &lt; (obj_mario.y + 17))
        {
            if (collision_rectangle(bbox_left, (bbox_bottom + 2), bbox_right, (bbox_bottom + 2), obj_solidtop, 0, 0) || collision_rectangle(bbox_left, (bbox_bottom + 2), bbox_right, (bbox_bottom + 2), obj_physicssolid, 0, 0) || collision_rectangle(bbox_left, (bbox_bottom + 2), bbox_right, (bbox_bottom + 2), obj_spring, 0, 0))
            {
                vspeed = -1.5
                ready = 1
            }
            else
                ready = 1
        }
        else if (ready == 1)
        {
            if (gravity == 0)
            {
                audio_stop_sound(scr_snd_thwomp())
                audio_play_sound(scr_snd_thwomp(), 0, false)
                init_shake(1)
                groundpount_cont = 4
                ready = 2
                vspeed = 0
                if (global.apariencia == 3)
                {
                    with (instance_create(x, bbox_bottom, obj_smoke))
                    {
                        sprite_index = spr_NSMBU_smoke_thwomp
                        depth = -3
                    }
                }
                else
                {
                    instance_create((bbox_left - 8), (bbox_bottom - 8), obj_smoke)
                    instance_create((bbox_right - 8), (bbox_bottom - 8), obj_smoke)
                }
                alarm[0] = 60
            }
        }
        else if (ready == 3)
        {
            if (collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, bbox_top, obj_solid, 0, 0) || collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, bbox_top, obj_physicssolid, 0, 0) || collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, bbox_top, obj_bullebill_base, 0, 0) || collision_rectangle(bbox_left, (bbox_top - 2), bbox_right, bbox_top, obj_onewaygate_bottom, 0, 0))
            {
                ready = 0
                groundpount_cont = 0
                vspeed = 0
                ystart = y
                y = ystart
            }
            else if (y &lt; (ystart + 1))
            {
                ready = 0
                groundpount_cont = 0
                vspeed = 0
                y = ystart
            }
        }
        if (groundpount_cont &gt; 0)
        {
            groundpount_cont--
            pow = collision_rectangle(bbox_left, (bbox_bottom + 2), bbox_right, ((bbox_bottom + vspeed) + 2), obj_block_pow_hold, 0, 0)
            if pow
            {
                with (pow)
                {
                    explode = 1
                    event_user(6)
                }
            }
            ground_block = collision_rectangle(bbox_left, (bbox_bottom + 2), bbox_right, ((bbox_bottom + vspeed) + 2), obj_blockparent, 0, 0)
            if (ground_block &amp;&amp; ground_block.object_index != obj_noteblock &amp;&amp; ground_block.object_index != obj_musicblock &amp;&amp; ground_block.object_index != obj_noteblock_s &amp;&amp; ground_block.ready == 0)
            {
                if (ground_block.object_index == obj_flipblock)
                {
                    with (ground_block)
                        alarm[2] = 1
                }
                else
                {
                    with (ground_block)
                        event_user(3)
                }
            }
        }
        break
    case 2:
        event_user(3)
        if (ready == 0 &amp;&amp; instance_exists(obj_mario) &amp;&amp; obj_mario.x &lt; (bbox_left + 4) &amp;&amp; obj_mario.x &gt; (bbox_left - 112) &amp;&amp; obj_mario.y &gt; (bbox_top - 40) &amp;&amp; obj_mario.y &lt; (bbox_bottom - 7))
            ready = 1
        else if (ready == 1)
        {
            if (collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_solid, 0, 0) || collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_physicssolid, 0, 0) || collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_bullebill_base, 0, 0) || collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_onewaygate_right, 0, 0))
            {
                audio_stop_sound(scr_snd_thwomp())
                audio_play_sound(scr_snd_thwomp(), 0, false)
                init_shake(1)
                groundpount_cont = 4
                ready = 2
                hspeed = 0
                instance_create((bbox_left - 8), (bbox_bottom - 8), obj_smoke)
                instance_create((bbox_right - 8), (bbox_bottom - 8), obj_smoke)
                alarm[0] = 60
            }
            else
            {
                hspeed -= 0.05
                spd = (3 - (1.5 * swimming))
                if (hspeed &lt; (-spd))
                    hspeed = (-spd)
            }
        }
        else if (ready == 3)
        {
            if (collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_solid, 0, 0) || collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_physicssolid, 0, 0) || collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_bullebill_base, 0, 0) || collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_onewaygate_left, 0, 0))
            {
                ready = 0
                hspeed = 0
                xstart = x
                x = xstart
            }
            else if (x &gt; (xstart + 1))
            {
                ready = 0
                hspeed = 0
                x = xstart
            }
        }
        if (groundpount_cont &gt; 0)
        {
            groundpount_cont--
            ground_block = collision_rectangle(((bbox_left + hspeed) - 2), bbox_top, bbox_left, bbox_bottom, obj_blockparent, 0, 0)
            if (ground_block &amp;&amp; ground_block.ready == 0)
            {
                if (ground_block.object_index == obj_flipblock)
                {
                    with (ground_block)
                        alarm[2] = 1
                }
                else
                {
                    with (ground_block)
                        event_user(2)
                }
            }
        }
        break
    case 3:
        event_user(3)
        if (ready == 0 &amp;&amp; instance_exists(obj_mario) &amp;&amp; obj_mario.x &gt; (bbox_right - 4) &amp;&amp; obj_mario.x &lt; (bbox_right + 112) &amp;&amp; obj_mario.y &gt; (bbox_top - 40) &amp;&amp; obj_mario.y &lt; (bbox_bottom - 7))
            ready = 1
        else if (ready == 1)
        {
            if (collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_solid, 0, 0) || collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_physicssolid, 0, 0) || collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_bullebill_base, 0, 0) || collision_rectangle(bbox_right, bbox_top, (bbox_right + 1), bbox_bottom, obj_onewaygate_left, 0, 0))
            {
                audio_stop_sound(scr_snd_thwomp())
                audio_play_sound(scr_snd_thwomp(), 0, false)
                init_shake(1)
                groundpount_cont = 4
                ready = 2
                hspeed = 0
                instance_create((bbox_left - 8), (bbox_bottom - 8), obj_smoke)
                instance_create((bbox_right - 8), (bbox_bottom - 8), obj_smoke)
                alarm[0] = 60
            }
            else
            {
                hspeed += 0.05
                spd = (3 - (1.5 * swimming))
                if (hspeed &gt; spd)
                    hspeed = spd
            }
        }
        else if (ready == 3)
        {
            if (collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_solid, 0, 0) || collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_physicssolid, 0, 0) || collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_bullebill_base, 0, 0) || collision_rectangle((bbox_left - 1), bbox_top, bbox_left, bbox_bottom, obj_onewaygate_right, 0, 0))
            {
                ready = 0
                hspeed = 0
                xstart = x
                x = xstart
            }
            else if (x &lt; (xstart - 1))
            {
                ready = 0
                hspeed = 0
                x = xstart
            }
        }
        if (groundpount_cont &gt; 0)
        {
            groundpount_cont--
            ground_block = collision_rectangle(bbox_right, bbox_top, ((bbox_right + hspeed) + 2), bbox_bottom, obj_blockparent, 0, 0)
            if (ground_block &amp;&amp; ground_block.ready == 0)
            {
                if (ground_block.object_index == obj_flipblock)
                {
                    with (ground_block)
                        alarm[2] = 1
                }
                else
                {
                    with (ground_block)
                        event_user(2)
                }
            }
        }
        break
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.hardness &lt; 99 &amp;&amp; other.visible == true &amp;&amp; (bbox_bottom - vspeed) &lt; other.bbox_top)
{
    audio_play_sound(scr_snd_kick(), 0, false)
    audio_stop_sound(scr_snd_kick())
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, col_one_top, col_one_bottom;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
    if (ready == 0 &amp;&amp; y &gt;= ystart)
        y = ystart
}
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))) || (ready == 0 &amp;&amp; y == ystart))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
    }
}
else if (paracaidas == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.025
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        vspeed = 0
    }
}
if ((bbox_top - 16) &gt; room_height)
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, physolid, thwomp, thwomp2, col_one_top, col_one_bottom;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    physolid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_physicssolid, 0, 0)
    thwomp = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    if (semisolid &amp;&amp; bbox_bottom &lt; (semisolid.yprevious + 5))
        y = (semisolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (physolid &amp;&amp; bbox_bottom &lt; (physolid.yprevious + 5))
        y = (physolid.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (thwomp &amp;&amp; thwomp.id != id &amp;&amp; bbox_bottom &lt; (thwomp.yprevious + 5))
        y = (thwomp.bbox_top - (sprite_get_bbox_bottom(sprite_index) - sprite_get_yoffset(sprite_index)))
    if (vspeed &gt; 4)
        vspeed = 4
    if (y &gt;= ystart)
        y = ystart
}
thwomp2 = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0)
if ((collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || (collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_physicssolid, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_physicssolid, 0, 0))) || (thwomp2 &amp;&amp; thwomp2.id != id) || y == ystart)
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        col_one_top = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_top, 0, 0)
        if col_one_top
        {
            with (col_one_top)
            {
                rot = 1
                event_user(0)
            }
        }
    }
}
else if (paracaidas == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.025
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if (vspeed &lt; 0)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_physicssolid, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solidphy, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_onewaygate_bottom, 1, 0))
    {
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_physicssolid, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_physicssolid)))
            y++
        while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_solidphy, 1, 0) &amp;&amp; (!place_meeting(x, y, obj_solidphy)))
            y++
        col_one_bottom = collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)
        if col_one_bottom
        {
            with (col_one_bottom)
            {
                rot = 1
                event_user(0)
            }
        }
        vspeed = 0
    }
}
if ((bbox_top - 16) &gt; room_height || (instance_exists(obj_lava_water) &amp;&amp; y &gt; (obj_lava_water.y + 32) &amp;&amp; (global.bg_level == "castle" || (global.bg_level == "forest" &amp;&amp; global.modo_noche == 1))))
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, y, obj_enemy_dead)
imdead.girar = 1
imdead.direct = direct
imdead.sprite_index = sprite_index
imdead.image_index = image_index
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, round(x), y, direct, 1, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-12,-16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
