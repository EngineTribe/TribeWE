<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grid_selected_32x32</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_resource_block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dark;
event_inherited()
if (global.bg_level == "castle" || global.bg_level == "ghost" || global.bg_level == "underground" || global.modo_noche == 1)
    dark = 1
else
    dark = 0
switch global.apariencia
{
    case 0:
        sprite = 593
        part = 594
        break
    case 1:
        if (dark == 1)
        {
            sprite = 1397
            part = 1398
        }
        else
        {
            sprite = 1395
            part = 1396
        }
        break
    case 2:
        sprite = 2327
        part = 2328
        break
    case 3:
        sprite = 3701
        part = 3702
        break
}

grid_selected = 2968
color = global.tuberia
right = 0
left = 0
R = 0
rotacion = 0
poder_girar = 0
size = 0
crecer = 0
draw_p = 0
plant = 0
exception = 1
alarm[2] = 2
warp = 0
id_pipe = -4
t_x_pos = (x + 32)
t_y_pos = y
t_size = 0
t_rotacion = 0
t_direct_t = 0
t_s_scalex = 1
t_color = 0
t_xscale = 1
t_yscale = 1
alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (warp &gt; 0)
{
    instance_activate_object(id_pipe)
    with (id_pipe)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exception = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var plant;
if (warp == 1)
    event_user(6)
else if (warp == 2 &amp;&amp; (room == rm_guardabot_play || room == rm_title))
{
    with (instance_create(x, y, obj_tuberia))
    {
        sprite = other.sprite
        part = other.part
        size = other.size
        direct = other.s_scalex
        direct_t = other.direct_t
        rotacion = other.rotacion
        index = other.color
        image_xscale = other.image_xscale
        image_yscale = other.image_yscale
        warp = other.warp
        w_direct = other.t_direct_t
        switch other.t_direct_t
        {
            case 0:
                w_posx = (other.t_x_pos + 16)
                w_posy = other.t_y_pos
                break
            case 1:
                w_posx = (other.t_x_pos + (16 + (other.t_size * 16)))
                w_posy = other.t_y_pos
                break
            case 2:
                w_posx = (other.t_x_pos + 16)
                w_posy = (other.t_y_pos + (16 + (other.t_size * 16)))
                break
            case 3:
                w_posx = (other.t_x_pos + 16)
                w_posy = other.t_y_pos
                break
        }

        switch other.direct_t
        {
            case 0:
                m_posx = (x + 16)
                m_posy = y
                break
            case 1:
                m_posx = (x + (16 + (other.t_size * 16)))
                m_posy = y
                break
            case 2:
                m_posx = (x + 16)
                m_posy = (y + (16 + (other.t_size * 16)))
                break
            case 3:
                m_posx = (x + 16)
                m_posy = y
                break
        }

        if (other.plant == 1)
        {
            switch other.direct_t
            {
                case 0:
                    plant = instance_create((x + 16), (y + 16), obj_piranhaplant)
                    break
                case 1:
                    plant = instance_create((x + (16 + (other.size * 16))), (y + 16), obj_piranhaplant)
                    break
                case 2:
                    plant = instance_create((x + 16), (y + (16 + (other.size * 16))), obj_piranhaplant)
                    break
                case 3:
                    plant = instance_create((x + 16), (y + 16), obj_piranhaplant)
                    break
            }

            plant.direct_t = other.direct_t
            plant.rotacion = other.rotacion
        }
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dark;
if (global.bg_level == "castle" || global.bg_level == "ghost" || global.bg_level == "underground" || global.modo_noche == 1)
    dark = 1
else
    dark = 0
switch global.apariencia
{
    case 0:
        sprite = 593
        part = 594
        break
    case 1:
        if (dark == 1)
        {
            sprite = 1397
            part = 1398
        }
        else
        {
            sprite = 1395
            part = 1396
        }
        break
    case 2:
        sprite = 2327
        part = 2328
        break
    case 3:
        sprite = 3701
        part = 3702
        break
}

image_index = color
if (left == 1)
{
    if (rotacion &gt;= (R + 90))
    {
        rotacion = (R + 90)
        R = rotacion
        left = 0
        if (direct_t == 0)
            direct_t = 3
        else
            direct_t--
        if (direct_t == 3 || direct_t == 2)
            s_scalex = -1
        else
            s_scalex = 1
        if (!mouse_check_button(mb_left))
            poder_girar = 0
    }
    else
        rotacion += 10
    if (warp &gt; 0)
        event_user(5)
}
else if (right == 1)
{
    if (rotacion &lt;= (R - 90))
    {
        rotacion = (R - 90)
        R = rotacion
        right = 0
        if (direct_t == 3)
            direct_t = 0
        else
            direct_t++
        if (direct_t == 3 || direct_t == 2)
            s_scalex = -1
        else
            s_scalex = 1
        if (!mouse_check_button(mb_left))
            poder_girar = 0
    }
    else
        rotacion -= 10
    if (warp &gt; 0)
        event_user(5)
}
else if (crecer == 1)
{
    audio_stop_sound(snd_rieles)
    audio_play_sound(snd_rieles, 0, false)
    switch direct_t
    {
        case 0:
            y -= 16
            y_draw -= 16
            size++
            image_yscale = (1 + (size / 2))
            break
        case 1:
            size++
            image_xscale = (1 + (size / 2))
            break
        case 2:
            size++
            image_yscale = (1 + (size / 2))
            break
        case 3:
            x -= 16
            x_draw -= 16
            size++
            image_xscale = (1 + (size / 2))
            break
    }

    crecer = 0
    if (warp &gt; 0)
        event_user(5)
}
else if (crecer == 2)
{
    audio_stop_sound(snd_rieles)
    audio_play_sound(snd_rieles, 0, false)
    switch direct_t
    {
        case 0:
            y += 16
            y_draw += 16
            size--
            image_yscale = (1 + (size / 2))
            break
        case 1:
            size--
            image_xscale = (1 + (size / 2))
            break
        case 2:
            size--
            image_yscale = (1 + (size / 2))
            break
        case 3:
            x += 16
            x_draw += 16
            size--
            image_xscale = (1 + (size / 2))
            break
    }

    crecer = 0
    if (warp &gt; 0)
        event_user(5)
}
if (mouse_check_button(mb_left) &amp;&amp; obj_editormanager.expand_open == 0 &amp;&amp; poder_girar == 1 &amp;&amp; right == 0 &amp;&amp; left == 0)
{
    switch direct_t
    {
        case 0:
            if (mouse_x &gt; (x + 32) &amp;&amp; mouse_x &lt; (x + 64) &amp;&amp; mouse_y &gt; (y + 16) &amp;&amp; mouse_y &lt; (y + 32) &amp;&amp; size == 0)
                right = 1
            else if (mouse_x &gt; (x - 32) &amp;&amp; mouse_x &lt; x &amp;&amp; mouse_y &gt; (y + 16) &amp;&amp; mouse_y &lt; (y + 32) &amp;&amp; size == 0)
                left = 1
            else if (mouse_x &gt; (x + 5) &amp;&amp; mouse_x &lt; (x + 27) &amp;&amp; mouse_y &gt; (y - 16) &amp;&amp; mouse_y &lt; y &amp;&amp; size &lt; 24)
                crecer = 1
            else if (mouse_x &gt; (x + 5) &amp;&amp; mouse_x &lt; (x + 27) &amp;&amp; mouse_y &gt; (y + 16) &amp;&amp; mouse_y &lt; (y + 32) &amp;&amp; size &gt; 0)
                crecer = 2
            break
        case 1:
            if (mouse_x &gt; (x + (size * 16)) &amp;&amp; mouse_x &lt; (x + (16 + (size * 16))) &amp;&amp; mouse_y &gt; (y + 32) &amp;&amp; mouse_y &lt; (y + 64) &amp;&amp; size == 0)
                right = 1
            else if (mouse_x &gt; (x + (size * 16)) &amp;&amp; mouse_x &lt; (x + (16 + (size * 16))) &amp;&amp; mouse_y &gt; (y - 32) &amp;&amp; mouse_y &lt; y &amp;&amp; size == 0)
                left = 1
            else if (mouse_x &gt; (x + (32 + (size * 16))) &amp;&amp; mouse_x &lt; (x + (64 + (size * 16))) &amp;&amp; mouse_y &gt; (y + 5) &amp;&amp; mouse_y &lt; (y + 27) &amp;&amp; size &lt; 24)
                crecer = 1
            else if (mouse_x &gt; (x - (16 + (size * 16))) &amp;&amp; mouse_x &lt; (x + (16 + (size * 16))) &amp;&amp; mouse_y &gt; (y + 5) &amp;&amp; mouse_y &lt; (y + 27) &amp;&amp; size &gt; 0)
                crecer = 2
            break
        case 2:
            if (mouse_x &gt; (x + 32) &amp;&amp; mouse_x &lt; (x + 64) &amp;&amp; mouse_y &gt; (y + (size * 16)) &amp;&amp; mouse_y &lt; (y + (16 + (size * 16))) &amp;&amp; size == 0)
                left = 1
            else if (mouse_x &gt; (x - 32) &amp;&amp; mouse_x &lt; x &amp;&amp; mouse_y &gt; (y + (size * 16)) &amp;&amp; mouse_y &lt; (y + (16 + (size * 16))) &amp;&amp; size == 0)
                right = 1
            else if (mouse_x &gt; (x + 5) &amp;&amp; mouse_x &lt; (x + 27) &amp;&amp; mouse_y &gt; (y + (32 + (size * 16))) &amp;&amp; mouse_y &lt; (y + (64 + (size * 16))) &amp;&amp; size &lt; 24)
                crecer = 1
            else if (mouse_x &gt; (x + 5) &amp;&amp; mouse_x &lt; (x + 27) &amp;&amp; mouse_y &gt; (y - (16 + (size * 16))) &amp;&amp; mouse_y &lt; (y + (16 + (size * 16))) &amp;&amp; size &gt; 0)
                crecer = 2
            break
        case 3:
            if (mouse_x &gt; (x + 16) &amp;&amp; mouse_x &lt; (x + 32) &amp;&amp; mouse_y &gt; (y - 32) &amp;&amp; mouse_y &lt; y &amp;&amp; size == 0)
                right = 1
            else if (mouse_x &gt; (x + 16) &amp;&amp; mouse_x &lt; (x + 32) &amp;&amp; mouse_y &gt; (y + 32) &amp;&amp; mouse_y &lt; (y + 64) &amp;&amp; size == 0)
                left = 1
            else if (mouse_x &gt; (x - 32) &amp;&amp; mouse_x &lt; x &amp;&amp; mouse_y &gt; (y + 5) &amp;&amp; mouse_y &lt; (y + 27) &amp;&amp; size &lt; 24)
                crecer = 1
            else if (mouse_x &gt; (x + 16) &amp;&amp; mouse_x &lt; (x + 48) &amp;&amp; mouse_y &gt; (y + 5) &amp;&amp; mouse_y &lt; (y + 27) &amp;&amp; size &gt; 0)
                crecer = 2
            break
    }

}
else if (mouse_check_button_released(mb_left) &amp;&amp; obj_levelmanager.editor == 1 &amp;&amp; right == 0 &amp;&amp; left == 0)
    poder_girar = 0
if (mouse_check_button_released(mb_left) &amp;&amp; draw_p == 1)
{
    draw_p = 0
    obj_cursor.move_tuberia = 0
    pos_cal = 1
    alarm[5] = 15
    audio_play_sound(snd_colocar_objectos, 0, false)
}
if (poder_girar == 1)
    anim += 0.06
else
    anim = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parent_resource">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pos_cal == 1 &amp;&amp; other.id != id)
{
    with (other.id)
    {
        if (object_index == obj_ground)
        {
            event_user(2)
            instance_create(x, y, obj_tile_trigger)
        }
        else if (object_index != obj_platform_res &amp;&amp; object_index != obj_platform_blue_res &amp;&amp; object_index != obj_vine_res &amp;&amp; object_index != obj_semisolid_platform1 &amp;&amp; object_index != obj_mushroom_platform_res &amp;&amp; object_index != obj_door_res &amp;&amp; object_index != obj_door_exit_res &amp;&amp; object_index != obj_door_switch_res &amp;&amp; object_index != obj_door_switch_exit_res &amp;&amp; object_index != obj_door_lock_res &amp;&amp; object_index != obj_door_lock_exit_res)
            instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pplant_res">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drag == 0 &amp;&amp; other.drag == 0 &amp;&amp; plant == 0 &amp;&amp; warp == 0)
{
    audio_play_sound(scr_snd_powerdown(), 0, false)
    plant = 1
    with (other.id)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_levelmanager.editor == 1 &amp;&amp; global.resource_create == 0 &amp;&amp; object_index != obj_resource_empty &amp;&amp; obj_editormanager.expand_open == 0 &amp;&amp; obj_levelmanager.editor_sonidos == 0 &amp;&amp; instance_exists(obj_editormanager) &amp;&amp; obj_editormanager.zoom == 0 &amp;&amp; instance_exists(obj_cursor) &amp;&amp; obj_cursor.dont_move == 0)
{
    if (global.editor_activity == 1)
    {
        if (global.cursor == 0)
        {
            if (obj_parent_resource.alarm[0] == -1 &amp;&amp; alarm[0] == -1)
            {
                if ((mouse_x &gt; (x + 9) &amp;&amp; mouse_x &lt; (x + 23) &amp;&amp; mouse_y &gt; y &amp;&amp; mouse_y &lt; (y + 14) &amp;&amp; direct_t == 0) || (mouse_x &gt; (x + (18 + (size * 16))) &amp;&amp; mouse_x &lt; (x + (32 + (size * 16))) &amp;&amp; mouse_y &gt; (y + 9) &amp;&amp; mouse_y &lt; (y + 23) &amp;&amp; direct_t == 1) || (mouse_x &gt; (x + 9) &amp;&amp; mouse_x &lt; (x + 23) &amp;&amp; mouse_y &gt; (y + (18 + (size * 16))) &amp;&amp; mouse_y &lt; (y + (32 + (size * 16))) &amp;&amp; direct_t == 2) || (mouse_x &gt; x &amp;&amp; mouse_x &lt; (x + 14) &amp;&amp; mouse_y &gt; (y + 9) &amp;&amp; mouse_y &lt; (y + 23) &amp;&amp; direct_t == 3))
                {
                    poder_girar = 1
                    draw_p = 1
                    obj_cursor.move_tuberia = 1
                }
                else
                {
                    audio_play_sound(snd_ground_bomb, 0, false)
                    xx = (x - mouse_x)
                    yy = (y - mouse_y)
                    with (obj_creation_preview)
                    {
                        xx = other.xx
                        yy = other.yy
                    }
                    x_start = x
                    y_start = y
                    global.resource_block = 1
                    drag = 1
                    obj_cursor.move = 1
                    ventana = 1
                    global.cursor = 1
                    with (obj_cursor)
                        event_user(0)
                    if (!instance_exists(obj_effect_touch))
                        instance_create(mouse_x, mouse_y, obj_effect_touch)
                    global.resource_move = object_index
                    alarm[0] = 1
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pipe;
pipe = instance_create(t_x_pos, t_y_pos, obj_tuberia_res)
pipe.x = t_x_pos
pipe.y = t_y_pos
pipe.x_draw = t_x_pos
pipe.y_draw = t_y_pos
pipe.size = t_size
pipe.rotacion = t_rotacion
pipe.R = t_rotacion
pipe.direct_t = t_direct_t
pipe.s_scalex = t_s_scalex
pipe.color = t_color
pipe.image_xscale = t_xscale
pipe.image_yscale = t_yscale
pipe.warp = 2
id_pipe = pipe.id
pipe.id_pipe = id
pipe.t_x_pos = x
pipe.t_y_pos = y
pipe.t_direct_t = direct_t
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_activate_object(id_pipe)
if instance_exists(id_pipe)
{
    id_pipe.t_x_pos = x
    id_pipe.t_y_pos = y
    id_pipe.t_size = size
    id_pipe.t_rotacion = rotacion
    id_pipe.t_direct_t = direct_t
    id_pipe.t_s_scalex = s_scalex
    id_pipe.t_color = color
    id_pipe.t_xscale = image_xscale
    id_pipe.t_yscale = image_yscale
    t_x_pos = id_pipe.x
    t_y_pos = id_pipe.y
    t_direct_t = id_pipe.direct_t
    t_size = id_pipe.size
    t_rotacion = id_pipe.rotacion
    t_s_scalex = id_pipe.s_scalex
    t_color = id_pipe.color
    t_xscale = id_pipe.image_xscale
    t_yscale = id_pipe.image_yscale
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (transform == 4)
{
    if (warp == 0 &amp;&amp; size == 0)
    {
        audio_stop_sound(scr_snd_pipes())
        audio_play_sound(scr_snd_pipes(), 0, false)
        t_x_pos = (x + 32)
        t_y_pos = y
        warp = 1
        event_user(6)
    }
}
else
{
    with (instance_create((x - 8), (y - 8), obj_smoke))
    {
        sprite_index = spr_effect_transform
        image_speed = 0.3
    }
    global.tuberia = transform
    color = transform
    if (warp == 2)
        event_user(5)
    if instance_exists(obj_card_item)
    {
        with (obj_card_item)
        {
            if (obj == 521)
            {
                switch other.color
                {
                    case 0:
                        obj_draw = 134
                        break
                    case 1:
                        obj_draw = 135
                        break
                    case 2:
                        obj_draw = 136
                        break
                    case 3:
                        obj_draw = 137
                        break
                }

            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (instance_create((x + 8), (y + 9), obj_ventana))
{
    id_object = other.id
    index_object1 = 134
    index_object2 = 135
    index_object3 = 136
    index_object4 = 137
    if (other.color == 0)
    {
        selected_1 = 1
        selected_2 = 0
        selected_3 = 0
        selected_4 = 0
    }
    else if (other.color == 1)
    {
        selected_1 = 0
        selected_2 = 1
        selected_3 = 0
        selected_4 = 0
    }
    else if (other.color == 2)
    {
        selected_1 = 0
        selected_2 = 0
        selected_3 = 1
        selected_4 = 0
    }
    else if (other.color == 3)
    {
        selected_1 = 0
        selected_2 = 0
        selected_3 = 0
        selected_4 = 1
    }
    number = 6
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx, yy, i;
if (obj_levelmanager.editor == 0)
    exit
if (drag == 1)
    draw_sprite_ext(grid_selected, drop_lock, x, y, image_xscale, image_yscale, 0, c_white, 1)
else if (mouse_up == 1 &amp;&amp; global.cursor == 0)
    draw_sprite_ext(grid_selected, 0, x, y, image_xscale, image_yscale, 0, c_white, 1)
switch direct_t
{
    case 0:
        if (plant == 1)
            draw_sprite_ext(spr_pplant_res, global.apariencia, (x_draw + 8), (y_draw - 8), 1, 1, rotacion, c_white, m_alpha)
        draw_sprite_ext(sprite, image_index, (x_draw + 16), (y_draw + 16), s_scalex, s_scaley, rotacion, c_white, m_alpha)
        xx = (x_draw + 16)
        yy = (y_draw + 16)
        break
    case 1:
        if (plant == 1)
            draw_sprite_ext(spr_pplant_res, global.apariencia, (x_draw + (40 + (size * 16))), (y_draw + 8), 1, 1, rotacion, c_white, m_alpha)
        draw_sprite_ext(sprite, image_index, (x_draw + (16 + (size * 16))), (y_draw + 16), s_scalex, s_scaley, rotacion, c_white, m_alpha)
        xx = (x_draw + (16 + (size * 16)))
        yy = (y_draw + 16)
        break
    case 2:
        if (plant == 1)
            draw_sprite_ext(spr_pplant_res, global.apariencia, (x_draw + 24), (y_draw + (40 + (size * 16))), 1, 1, rotacion, c_white, m_alpha)
        draw_sprite_ext(sprite, image_index, (x_draw + 16), (y_draw + (16 + (size * 16))), s_scalex, s_scaley, rotacion, c_white, m_alpha)
        xx = (x_draw + 16)
        yy = (y_draw + (16 + (size * 16)))
        break
    case 3:
        if (plant == 1)
            draw_sprite_ext(spr_pplant_res, global.apariencia, (x_draw - 8), (y_draw + 24), 1, 1, rotacion, c_white, m_alpha)
        draw_sprite_ext(sprite, image_index, (x_draw + 16), (y_draw + 16), s_scalex, s_scaley, rotacion, c_white, m_alpha)
        xx = (x_draw + 16)
        yy = (y_draw + 16)
        break
}

if (size &gt; 0)
{
    for (i = 1; i &lt; (size + 1); i++)
    {
        switch direct_t
        {
            case 0:
                draw_sprite_ext(part, image_index, (x_draw + 16), ((y_draw + 16) + (i * 16)), s_scalex, s_scaley, rotacion, c_white, m_alpha)
                break
            case 1:
                draw_sprite_ext(part, image_index, ((x_draw + (16 + (size * 16))) - (i * 16)), (y_draw + 16), s_scalex, s_scaley, rotacion, c_white, m_alpha)
                break
            case 2:
                draw_sprite_ext(part, image_index, (x_draw + 16), ((y_draw + (16 + (size * 16))) - (i * 16)), s_scalex, s_scaley, rotacion, c_white, m_alpha)
                break
            case 3:
                draw_sprite_ext(part, image_index, ((x_draw + 16) + (i * 16)), (y_draw + 16), s_scalex, s_scaley, rotacion, c_white, m_alpha)
                break
        }

    }
}
if (drag == 0)
{
    if (draw_p == 1)
        draw_sprite_ext(spr_pipes_move_drag, anim, xx, yy, 1, 1, rotacion, c_white, 1)
    else if (mouse_up == 1)
        draw_sprite_ext(spr_tuberias_move, 0, xx, yy, 1, 1, rotacion, c_white, 1)
}
if (mouse_up == 1 &amp;&amp; drag == 0 &amp;&amp; global.cursor == 2)
    draw_sprite_ext(grid_selected, 0, x, y, image_xscale, image_yscale, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
